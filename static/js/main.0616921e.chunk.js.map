{"version":3,"sources":["components/search.js","components/mapChart.js","components/display.js","components/tracker.js","components/banner.js","App.js","serviceWorker.js","index.js","components/user.svg","components/hospital_c.svg"],"names":["search","Search","map","this","props","leaflet","searchControl","ELG","addTo","results","L","LayerGroup","on","data","clearLayers","latlng","addLayer","marker","Component","withLeaflet","BaseLayer","LayersControl","Overlay","user","Icon","iconUrl","require","iconRetinaUrl","iconAnchor","iconSize","hospitalIcon","MapChart","medKnn","center","pLocation","currentLocation","pinLocation","zoom","radius","userLocation","knn","geoJSON","GeoData","nearest","gjKnn","i","length","features","push","layer","feature","geometry","coordinates","properties","name","addr","Map","position","checked","hideSingleBase","TileLayer","attribution","url","searchMap","Marker","icon","Popup","Circle","fillColor","cases","autoPan","d","key","id","Display","className","children","URL","reset","Tracker","useState","input","setInputData","setCurrentLocation","error","setError","invalidPin","setInvalidPin","receiveData","setReceiveData","useEffect","axios","get","params","latitude","longitude","then","response","console","log","catch","err","style","color","textAlign","fontSize","minDist","district","isNaN","onClick","event","preventDefault","navigator","geolocation","getCurrentPosition","coords","getLocationHandler","TextField","type","placeholder","onChange","val","target","value","inputHandler","InputProps","endAdornment","InputAdornment","IconButton","pinCode","PIN_validity","lat","lng","searchHandler","pDistrict","Banner","snippets","setSnippets","snippet","setSnippet","factoids","Math","floor","random","snippetChooser","useCallback","min","max","index","interval","setInterval","clearInterval","window","location","pathname","animationDelay","banner","history","createBrowserHistory","App","pages","pageLink","view","displayName","animationDelayForNavbar","render","exact","path","to","page","component","href","rel","justifyContent","Boolean","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.0616921e.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport L from \"leaflet\";\nimport * as ELG from \"esri-leaflet-geocoder\";\nimport { withLeaflet } from \"react-leaflet\";\n\n\nlet search=null;\nclass Search extends Component {\n\n  componentDidMount() {\n    const map = this.props.leaflet.map;\n    const searchControl = new ELG.Geosearch().addTo(map);\n    const results = new L.LayerGroup().addTo(map);\n    searchControl.on(\"results\", function(data) {\n      results.clearLayers();\n      //   for (let i = data.results.length - 1; i >= 0; i--) {}\n      search(data.results[0].latlng)\n      results.addLayer(L.marker(data.results[0].latlng));\n      //console.log(data.results[0]);\n      // console.log(data.results);\n\n\n    });\n    // const med_knn = new knn(L.geoJSON(GeoData)).nearest([77.14141593495934110168,10.901929593495936], 5);\n    \n    // console.log(med_knn[2].layer);\n    // console.log(\"test values\");\n    // console.log(med_knn[2].layer.feature.properties.name + ', ' + med_knn[2].layer.feature.properties.place)\n    // console.log(med_knn[0].layer._latlng);\n    // console.log(L.geoJSON(med_knn[0].layer.feature));\n\n    // const geoJ_results = results.toGeoJSON();\n    \n    // const results_knn = new L.LayerGroup();\n    // if (med_knn){\n    //   for(var i=0; i < med_knn.lenth ; i++){\n    //     var currMarker = new L.Marker(med_knn[i].layer._latlng)\n    //                   .bindPopup(med_knn[i].layer.feature.properties.name + ', ' + med_knn[i].layer.feature.properties.place);\n    //     currMarker.addTo(results_knn)\n    //   }\n      // for (var i = 0; i < med_knn.length; i++) {\n\t\t\t//   marker = new L.marker(med_knn[i].layer._latlng)\n\t\t\t// \t.bindPopup(med_knn[i].layer.features[0])\n\t\t\t// \t.addTo(map);\n\t\t  // }\n\n    //   results.addLayer(results_knn)\n\n    // }\n    \n    //   console.log(\"rendering\");\n    //   console.log(results_knn);\n\n\n    // function districtFilter(feature) {\n    //   return (feature.properties.district === \"Coimbatore\")\n    // }\n\n    \n\n  }\n\n\n\n  render() {\n   search= this.props.search;\n    return null;\n  }\n}\n//export default Search;\nexport default withLeaflet(Search);\n\n\n \n    // const med_knn = new knn(L.geoJSON(GeoData)).nearest([77.14141593495934110168,10.901929593495936], 5);\n\n    // const results_knn = new L.LayerGroup();\n    // if (med_knn){\n    //   for(var i=0; i < med_knn.lenth ; i++){\n    //     var currMarker = new L.Marker(med_knn[i].layer._latlng)\n    //                   .bindPopup(med_knn[i].layer.feature.properties.name + ', ' + med_knn[i].layer.feature.properties.place);\n    //     currMarker.addTo(results_knn)\n    //   }\n    //   // for (var i = 0; i < med_knn.length; i++) {\n\t\t// \t//   marker = new L.marker(med_knn[i].layer._latlng)\n\t\t// \t// \t.bindPopup(med_knn[i].layer.features[0])\n\t\t// \t// \t.addTo(map);\n\t\t//   // }\n    //   console.log(\"rendering\");\n    //   console.log(results_knn);\n    // }\n    // return null;\n    // return(\n\n    //     <Map>\n    //       <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n    //       <LayerGroup\n    //         url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    //         attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n    //       />\n    //       {results_knn.features.map(d => (\n    //         <Marker\n    //           key={d.properties.source_id}\n    //           position={[d.geometry.coordinates[1], d.geometry.coordinates[0]]}\n    //         >\n    //           <Popup>\n    //             <div>\n    //               <h2>{d.properties.name}</h2>\n    //               <p>{d.properties.place}</p>\n    //             </div>{\" \"}\n    //           </Popup>\n    //         </Marker>\n    //       ))}\n    //     </Map>\n    // );\n\n\n\n\n    //mapChart.js\n\n          // {/* <GeoJSON\n          //     data={geoData}\n          //     onEachFeature={<Marker  position={[geoData.features.geometry.coordinates[1], geoData.features.geometry.coordinates[0]]}> \n          //                     <Popup><p>Name: ${geoData.features.properties.name}</p><pre>Place: ${geoData.features.properties.place}</pre></Popup> \n          //                   </Marker>}\n          // /> */}\n\n          // onEachFeature(feature, layer) {\n          //   const markerData = '<Marker  position={[feature.geometry.coordinates[1], feature.geometry.coordinates[0]]}> </Marker>'\n          //   const popupContent = ` <Popup><p>Name: <br />${feature.properties.name}</p><pre>Place: <br />${feature.properties.place}</pre></Popup>`\n          //   layer.Marker(markerData).bindPopup(popupContent);\n          // };\n","import React from 'react';\nimport { Map, Marker, Popup, TileLayer, Circle, LayerGroup, LayersControl } from \"react-leaflet\";\nimport L from 'leaflet';\nimport Search from './search'\nimport 'leaflet/dist/leaflet.css'\nimport * as knn from \"leaflet-knn\";\nimport GeoData from \"./hospitals.json\";\n\n\nconst { BaseLayer, Overlay } = LayersControl\n\n\nconst user = new L.Icon({\n  iconUrl:require('./user.svg'),\n  iconRetinaUrl: require('./user.svg'),\n  iconAnchor: [5, 55],\n  iconSize:[40,40]\n  });\n\n\nconst hospitalIcon = new  L.Icon({\n  iconUrl:require('./hospital_c.svg'),\n  iconRetinaUrl: require('./hospital_c.svg'),\n  iconSize:[25,25],\n  });\n\nexport default  function MapChart(props) {\n  const center = props.pLocation||props.currentLocation||props.pinLocation||[25.7041,77.1025];\n  const zoom = props.radius?(props.radius>6?10:12):7;\n\n    var medKnn;\n\n    const userLocation = props.pLocation||props.currentLocation||props.pinLocation\n    const k= 5; // Finds the K nearest hospitals/labs wrt user location\n    \n    if (userLocation){\n    medKnn = new knn(L.geoJSON(GeoData)).nearest([userLocation[1],userLocation[0]] , k);\n    }\n\n    var gjKnn = {\n      \"name\":\"NearestK-Hospitals\",\n      \"type\":\"FeatureCollection\",\n      \"features\":[]\n    \n    };\n    \n  \n    if (medKnn!=null){\n      for(var i=0; i < medKnn.length ; i++){\n          gjKnn.features.push({\"type\": \"Feature\",\n                              \"geometry\": {\"type\": \"Point\",\"coordinates\": medKnn[i].layer.feature.geometry.coordinates},\n                              \"properties\": { \"name\": medKnn[i].layer.feature.properties.name  ,\n                                              \"addr\": medKnn[i].layer.feature.properties.addr,\n                                              \"id\": i+1 }  \n                            });\n                            \n      }\n    }\n\n  return (\n      <Map center={center} zoom={zoom}>\n        <LayersControl position=\"topright\">\n          <BaseLayer checked hideSingleBase =\"True\" name = \"Map\"  >\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <Search  search={props.searchMap}/>\n            {(props.currentLocation||props.pinLocation)&&(\n              <Marker  position={props.currentLocation||props.pinLocation} icon = {user}>\n                  <Popup>your current location</Popup>\n              </Marker>\n              )}\n          </BaseLayer>\n\n          <Overlay checked name = \"My Location\">\n            {(props.currentLocation||props.pinLocation)&&(\n              <Marker  position={props.currentLocation||props.pinLocation} icon = {user}>\n                  <Popup>your current location</Popup>\n              </Marker>\n              )}\n          </Overlay>\n\n          <Overlay name=\"Cases Nearby\">\n            <LayerGroup>\n              {props.pLocation?(<Circle center={props.pLocation} fillColor=\"red\" radius={props.cases>'50'?4000:3000}>\n                                  <Popup autoPan><h5>{props.cases} cases present in this area.</h5></Popup>\n                              </Circle>):null}\n\n            </LayerGroup>\n          </Overlay>\n\n          <Overlay checked name=\"Nearest Health Facilities\">\n            <LayerGroup>\n              {gjKnn.features.map(d => (\n                <Marker\n                  key={d.properties.id}\n                  position={[d.geometry.coordinates[1], d.geometry.coordinates[0]]}\n                  icon = {hospitalIcon}\n                >\n                  <Popup>\n                    <div>\n                      <h2>{d.properties.name}</h2>\n                      <p> Address: {d.properties.addr} </p>\n                    </div>{\" \"}\n                  </Popup>\n                </Marker>\n              ))}\n            </LayerGroup>\n          </Overlay>\n          \n        </LayersControl>\n      </Map>\n    )\n}\n","import React from 'react'\n\nconst Display=(props)=>{\n\n    return (\n        <div className=\"tracker_display\">\n            <h4 className=\"line anim-typewriter\">{props.children}</h4>\n        </div>\n    )\n}\n\nexport default Display ","import React,{useEffect,useState}  from 'react';\nimport MapChart from './mapChart'\nimport axios from 'axios'\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport RoomTwoToneIcon from '@material-ui/icons/RoomTwoTone';\nimport { TextField } from '@material-ui/core';\nimport Display from './display.js'\nconst URL ='https://tracker-covid-19.herokuapp.com'\nlet pinLocation=null;\nlet reset=false;\n\n\nconst Tracker = (props)=>{\nconst [input,setInputData] = useState('');\nconst [currentLocation,setCurrentLocation]=useState(null);\nconst [error,setError] =useState(false);\nconst [invalidPin,setInvalidPin]=useState(false);\nconst [receiveData,setReceiveData]=useState(null);\n// const header={\n//   'Access-Control-Allow-Origin': '*'\n// }\n\n\nuseEffect(()=>{\n  if(currentLocation){\n\n  axios.get(URL+'/tracker',{\n    params:{\n      latitude:currentLocation[0],\n      longitude:currentLocation[1]\n    }\n\n  }).then(response=>{\n    reset=true;\n    console.log(response.data);\n        setReceiveData(response.data);\n  })\n  .catch(err=>{\n    console.log(err);\n    setError(true);\n  })\n}\n},[currentLocation])\n\n\nconst inputHandler=(event)=>{\n    const val  = event.target.value;\n    console.log(val);   \n    setInputData(val)\n}\nconst getLocationHandler = (event)=>{\n  reset=false;\n    event.preventDefault()\n    navigator.geolocation.getCurrentPosition(position=>{\n    setCurrentLocation([position.coords.latitude,position.coords.longitude])\n    setError(false);\n    },error=>{\n        console.log(error);\n        setError(true);\n\n    })\n}\n\nconst clickListener=()=>{\n  console.log('clicked');\n  reset=false;\n  axios.get(URL+'/tracker',{\n    params:{pinCode:input}\n  }).then(response=>{\n    console.log(response.data);\n    if(!response.data.PIN_validity){\n      setInvalidPin(true);\n    }\n    else{\n      pinLocation=[response.data.lat,response.data.lng]\n      reset=true;\n      setReceiveData(response.data);\n      setCurrentLocation(null);\n      setInvalidPin(false);\n\n    }\n  }).catch(err=>{\n    console.log(err);\n  })\n\n}\n\nconst searchHandler = (data)=>{\n  reset=false;\nconsole.log('successful',data.lat,data.lng );\nsetCurrentLocation([data.lat,data.lng]);\n\n}\n  return (\n  <div className=\"tracker\">\n    <div style={{color:'blue',textAlign:'center'}}>\n  <RoomTwoToneIcon  style={{fontSize:'3rem'}} />\n  <br/>\n  <h1 >NearBy Cases</h1>\n   </div>\n  {error?<p style={{color:\"red\",textAlign:'center'}}>Error fetching location</p>:null}\n  {reset&&<Display>{receiveData.cases} at distance of {receiveData.minDist} KM :{receiveData.district}</Display>}\n  <div  style={{color:\"red\",textAlign:'center'}}>{isNaN(input)||invalidPin?'please enter valid pincode':null}</div>\n\n    <div className=\"tracker_bar\">\n    <button className=\"button\" \n     onClick={(event)=>getLocationHandler(event)}>\n     GPS Location</button>\n     <div >\n     <label> <h4 className=\"h4\">Enter Area pincode:</h4></label>\n     <TextField className=\"input input_tracker\" \n           type=\"text\" placeholder=\"Enter your pincode\"\n           onChange={(event)=>inputHandler(event)}\n           value={input}\n            InputProps={{\n            endAdornment: (\n              <InputAdornment>\n              <IconButton onClick={clickListener}>\n              <SearchIcon />\n              </IconButton>\n              </InputAdornment> )}}\n      />\n      </div>\n\n    </div>\n\n    <div>\n    <MapChart \n      searchMap={(data)=>searchHandler(data)} \n      currentLocation={currentLocation}  \n      className=\"leaflet-container\"\n      pLocation={receiveData?[receiveData.lat,receiveData.lng]:null}\n      pDistrict={receiveData?receiveData.district:null}\n      radius={receiveData?+receiveData.minDist:null}\n      cases={receiveData?receiveData.cases:null}\n      pinLocation={pinLocation}\n      />\n      </div>\n\n    </div>\n\n    )\n}\nexport default Tracker;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport axios from 'axios';\n\nfunction Banner(props) {\n  const [snippets, setSnippets] = useState([]);\n  const [snippet, setSnippet] = useState();\n\n  useEffect(() => {\n    axios\n      .get('https://api.covid19india.org/website_data.json')\n      .then((response) => {\n        setSnippets(response.data.factoids || []);\n        setSnippet(\n          response.data.factoids[\n            Math.floor(\n              Math.random() * (response.data.factoids.length - 1 - 0) + 0\n            )\n          ] || ''\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const snippetChooser = useCallback(\n    (min, max) => {\n      const index = Math.random() * (max - min) + min;\n      setSnippet(snippets[Math.floor(index)]);\n    },\n    [snippets]\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      snippetChooser(0, snippets.length - 1);\n    }, 10000);\n    return () => clearInterval(interval);\n  }, [snippetChooser, snippets]);\n\n  if (window.location.pathname !== '/database') {\n    return (\n      <div\n        onClick={() => snippetChooser(0, snippets.length - 1)}\n        className=\"Banner fadeInUp\"\n        style={{animationDelay: '0.8s'}}\n      >\n        <div className=\"snippet\">{snippet ? snippet.banner : ''} &nbsp;</div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n\nexport default Banner;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport * as Icon from 'react-feather';\n\nimport './App.scss';\n\n// import Home from './components/home';\nimport Tracker from './components/tracker';\n// import Navbar from './components/navbar';\n// import Links from './components/links';\n// import FAQ from './components/faq';\nimport Banner from './components/banner';\n// import PatientDB from './components/patientdb';\n\nconst history = require('history').createBrowserHistory;\n\nfunction App() {\n  const pages = [\n    // {\n    //   pageLink: '/',\n    //   view: Home,\n    //   displayName: 'Home',\n    //   animationDelayForNavbar: 0.2,\n    // },\n    // {\n    //   pageLink: '/database',\n    //   view: PatientDB,\n    //   displayName: 'Database',\n    //   animationDelayForNavbar: 0.3,\n    // },\n    {\n      pageLink: '/',\n      // pageLink: '/tracker',\n      view: Tracker,\n      displayName: 'trackers',\n      animationDelayForNavbar: 0.4,\n    },\n    // {\n    //   pageLink: '/links',\n    //   view: Links,\n    //   displayName: 'Helpful Links',\n    //   animationDelayForNavbar: 0.4,\n    // },\n    // {\n    //   pageLink: '/faq',\n    //   view: FAQ,\n    //   displayName: 'About',\n    //   animationDelayForNavbar: 0.5,\n    // },\n  ];\n\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <Route\n          render={({location}) => (\n            <div className=\"Almighty-Router\">\n              {/* <Navbar pages={pages} /> */}\n              <Banner />\n              <Route exact path=\"/\" render={() => <Redirect to=\"/\" />} />\n              <Switch location={location}>\n                {pages.map((page, i) => {\n                  return (\n                    <Route\n                      exact\n                      path={page.pageLink}\n                      component={page.view}\n                      key={i}\n                    />\n                  );\n                })}\n                <Redirect to=\"/\" />\n              </Switch>\n            </div>\n          )}\n        />\n      </Router>\n\n      <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\n        {/* <img\n          src=\"/icon.png\"\n          alt=\"https://www.covid19india.org | Coronavirus cases live dashboard\"\n        />*/}\n\n        <h5>We stand with everyone fighting on the frontlines</h5>\n        <div className=\"link\">\n          <a\n            href=\"https://github.com/covid19india\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            covid19india\n          </a>\n        </div>\n        <a\n          href=\"https://github.com/covid19india/covid19india-react\"\n          className=\"button github\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon.GitHub />\n          <span>Open Sourced on GitHub</span>\n        </a>\n        <a\n          className=\"button excel\"\n          href=\"https://bit.ly/patientdb\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon.Database />\n          <span>Crowdsourced Patient Database&nbsp;</span>\n        </a>\n        <a\n          href=\"https://twitter.com/covid19indiaorg\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"button twitter\"\n          style={{justifyContent: 'center'}}\n        >\n          <Icon.Twitter />\n          <span>View updates on Twitter</span>\n        </a>\n        <a\n          href=\"https://bit.ly/covid19crowd\"\n          className=\"button telegram\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon.MessageCircle />\n          <span>Join Telegram to Collaborate!</span>\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/user.c0697d5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/hospital_c.4756cba1.svg\";"],"sourceRoot":""}