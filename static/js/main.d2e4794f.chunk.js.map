{"version":3,"sources":["components/essentials/icons/user.svg","components/essentials/icons/ambulance.svg","components/essentials/icons/delivery.svg","components/essentials/icons/fire.svg","components/essentials/icons/food.svg","components/essentials/icons/fund.svg","components/essentials/icons/helpline.svg","components/essentials/icons/homes.svg","components/essentials/icons/hospital.svg","components/essentials/icons/hospital_b.svg","components/essentials/icons/hospital_c.svg","components/essentials/icons/icon.svg","components/essentials/icons/kitchen.svg","components/essentials/icons/lab.svg","components/essentials/icons/mental-health.svg","components/essentials/icons/null.svg","components/essentials/icons/other.svg","components/essentials/icons/police.svg","components/essentials/icons/senior.svg","components/essentials/icons/thali.svg","components/essentials/icons/unknown.svg","utils/common-functions.js","components/row.js","components/table.js","components/level.js","constants.js","components/choropleth.js","components/mapexplorer.js","components/timeseries.js","utils/hooks.js","components/minigraph.js","components/home.js","components/navbar.js","components/essentials/search.js","components/essentials/mapChart.js","components/essentials/tracker.js","components/links.js","components/faq.js","components/banner.js","components/patientsview.js","components/patients.js","components/downloadblock.js","components/patientdb.js","components/Charts/genderchart.js","components/Charts/agechart.js","components/Charts/nationalitychart.js","components/Charts/allstates.js","components/Charts/totalconfirmedchart.js","components/Charts/dailyconfirmedchart.js","components/deepdive.js","components/essentials/resourcetable.js","components/essentials/resources.js","App.js","serviceWorker.js","index.js","components/essentials/icons sync /^/.//.*/.svg$"],"names":["module","exports","months","stateCodes","AP","AR","AS","BR","CT","GA","GJ","HR","HP","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DB","DD","DL","JK","LA","LD","PY","formatDate","unformattedDate","day","slice","month","year","time","formatDateAbsolute","validateCTS","data","today","Date","setHours","dataTypes","filter","d","every","dt","date","Number","getFullYear","formatNumber","value","numberFormatter","Intl","NumberFormat","isNaN","format","Row","props","useState","state","setState","districts","setDistricts","sortedDistricts","setSortedDistricts","sortColumn","localStorage","getItem","isAscending","sortData","setSortData","useEffect","handleReveal","sortDistricts","useCallback","aDistricts","sorted","Object","keys","sort","district1","district2","value1","parseInt","confirmed","value2","comparisonValue","forEach","key","handleSort","column","setItem","Fragment","className","total","onMouseEnter","onHighlightState","index","onMouseLeave","touchstart","onClick","style","background","fontWeight","reveal","display","to","color","deltaconfirmed","active","recovered","deltarecovered","deaths","deltadeaths","colSpan","title","parse","lastupdatedtime","formatDistance","e","window","innerWidth","district","toLowerCase","map","onHighlightDistrict","delta","Unknown","Table","states","setStates","revealedStates","setRevealedStates","count","setCount","summary","reduce","a","length","s","stateDistrictWiseData","currentsortColumn","currentTarget","querySelector","getAttribute","totalRow","splice","StateData1","StateData2","unshift","doSort","animationDelay","districtData","Level","setData","setConfirmed","setActive","recoveries","setRecoveries","setDeaths","deltas","setDeltas","parseData","MAP_TYPES","propertyFieldMap","country","ChoroplethMap","statistic","mapData","setHoveredRegion","mapMeta","changeMap","selectedRegion","setSelectedRegion","choroplethMap","useRef","svgRenderCount","setSvgRenderCount","ready","geoData","d3","remove","propertyField","mapType","svg","current","width","attr","height","topology","topojson","objects","graphObjectName","projection","fitSize","fitExtent","path","onceTouchedRegion","append","selectAll","features","enter","n","properties","maxConfirmed","on","name","err","console","log","handleMouseover","text","parseFloat","toFixed","toString","toTitleCase","str","split","i","charAt","toUpperCase","join","renderData","cells","label","domain","genLength","generatedLabels","labelDelimiter","Math","floor","n1","n2","Array","from","legendLinear","legendColor","shapeWidth","shapeHeight","titleWidth","labels","orient","scale","select","call","geoDataFile","prevCount","classed","nodes","parentNode","appendChild","id","viewBox","preserveAspectRatio","ref","India","Assam","Bihar","Chandigarh","Chhattisgarh","Delhi","Karnataka","Kerala","Goa","Gujarat","Haryana","Jharkhand","Ladakh","Lakshadweep","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Puducherry","Punjab","Rajasthan","Sikkim","Telangana","Tripura","Uttarakhand","stateTestData","regionHighlighted","currentHoveredRegion","setCurrentHoveredRegion","panelRegion","setPanelRegion","testObj","setTestObj","currentMap","setCurrentMap","region","getRegionFromState","useMemo","currentMapData","acc","districtWiseData","getRegionFromDistrict","undefined","newMap","switchMapToState","topDistrict","b","find","obj","totaltested","updatedon","href","source","target","TimeSeries","Infinity","lastDaysCount","setLastDaysCount","timeseries","setTimeseries","datapoint","setDatapoint","setIndex","mode","setMode","logMode","setLogMode","type","chartType","setChartType","moving","setMoving","svgRef1","svgRef2","svgRef3","wrapperRef","dimensions","setDimensions","observeTarget","resizeObserver","ResizeObserver","entries","observer","entry","contentRect","observe","unobserve","useResizeObserver","slicedTimeseries","days","sliceTimeseriesFromEnd","graphData","margin","chartRight","chartBottom","ts","stat","totalconfirmed","totalrecovered","totaldeceased","dailyconfirmed","dailyrecovered","dailydeceased","preprocessTimeseries","T","svg1","svg2","svg3","dateMin","setDate","getDate","dateMax","yScales","xScale","clamp","range","numTicksX","xAxis","g","ticks","yAxis","yScale","tickPadding","svgArray","plotTotal","dataTypesTotal","dataTypesDaily","colors","uniformScaleMin","min","yScaleUniformLinear","nice","yScaleUniformLog","max","yScaleLinear","yScaleLog","yScaleDailyUniform","focus","t","transition","duration","typeTotal","typeDaily","empty","reverse","node","getTotalLength","p","getPointAtLength","x","y","repeat","curve","mousemove","mouseout","xm","this","invert","bisectDate","left","f","j","yesterdayDate","lastDate","isYesterday","getMonth","chartKey1","chartKey2","chartKey3","currentStatusCount","currentDiff","formatedDiff","aria-label","Minigraph","graphElement1","graphElement2","graphElement3","graphElement4","svg4","y1","path1","datum","totalLength1","animate","path2","totalLength2","path3","totalLength3","path4","totalLength4","Home","setStateDistrictWiseData","setStateTestData","fetched","setFetched","graphOption","setGraphOption","lastUpdated","setLastUpdated","activityLog","setActivityLog","timeseriesMode","setTimeseriesMode","timeseriesLogMode","setTimeseriesLogMode","setRegionHighlighted","getStates","Promise","all","axios","get","response","stateDistrictWiseResponse","updateLogResponse","stateTestResponse","statewise","cases_time_series","states_tested_data","htmlFor","checked","onChange","event","disabled","activity","update","replace","timestamp","dangerouslySetInnerHTML","__html","Navbar","menuVisible","setMenuVisible","location","pathname","alt","src","pages","page","pageLink","animationDelayForNavbar","displayName","search","Search","leaflet","searchControl","ELG","addTo","results","L","LayerGroup","clearLayers","latlng","addLayer","marker","Component","withLeaflet","Overlay","LayersControl","user","Icon","iconUrl","require","iconRetinaUrl","iconSize","medFilter","feature","priority","othersFilter","MapChart","medKnn","restKnn","center","pLocation","currentLocation","zoom","radius","userLocation","knn","geoJSON","GeoData","nearestLayer","nearest","gjKnn","push","layer","geometry","coordinates","desc","addr","phone","contact","icon","position","TileLayer","attribution","url","searchMap","Marker","Popup","Tracker","setCurrentLocation","error","setError","receiveData","textAlign","preventDefault","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","getLocationHandler","lat","lng","searchHandler","minDist","cases","Links","rel","FAQ","faq","setFaq","getFAQs","scrollTo","then","catch","question","answer","Banner","snippets","setSnippets","snippet","setSnippet","factoids","random","snippetChooser","interval","setInterval","clearInterval","banner","PatientsView","logs","patient","indexTwo","applyClass","setModal","setPatient","expand","patientnumber","Patients","patients","setPatients","setLogs","modal","onclick","document","getElementById","body","classList","add","parseByDate","dateannounced","list","colorMode","gender","typeoftransmission","nationality","getClassNameFn","patientIndexArg","patientIndex","switchPatient","contractedfromwhichpatientsuspected","detectedcity","detecteddistrict","detectedstate","agebracket","statepatientnumber","notes","source1","source2","source3","CSVDownloadLink","csv","Parser","encodeURIComponent","download","DownloadBlock","dataJSON","JSON","stringify","filterByObject","filters","PatientDB","filteredPatients","setFilteredPatients","useLocation","setColorMode","scaleMode","setScaleMode","subDays","setFilters","raw_data","fetchRawData","handleFilters","newFilters","city","selectedIndex","getSortedValues","setValues","Set","size","selected","GenderChart","defaults","global","tooltips","intersect","backgroundColor","displayColors","borderColor","borderWidth","titleFontColor","bodyFontColor","caretPadding","legend","hover","male","female","unknown","chartData","datasets","chartOptions","layout","padding","right","top","bottom","events","responsive","maintainAspectRatio","callbacks","tooltipItem","dataset","datasetIndex","_meta","currentValue","options","AgeChart","ages","age","scales","xAxes","stacked","gridLines","yAxes","NationalityChart","hasOwnProperty","AllStatesChart","dates","elements","line","fill","statesData","Map","status","moment","trim","has","set","previousValue","sortedMap","code","borderCapStyle","pointBackgroundColor","pointHoverRadius","point","tension","beginAtZero","precision","scaleLabel","labelString","unit","tooltipFormat","stepSize","displayFormats","millisecond","second","minute","hour","week","quarter","TotalConfirmedChart","deceased","callback","values","DailyConfirmedChart","barDataSet","DeepDive","rawData","setRawData","statesTimeSeries","setStatesTimeSeries","rawDataResponse","stateDailyResponse","states_daily","usePanelSummaryStyles","makeStyles","theme","content","flexDirection","justifyContent","root","usePanelStyles","marginBottom","useItemTextStyles","primary","fontFamily","fontStyle","fontSize","fontTransform","secondary","getFormattedLink","initialValue","s3","FormattedCell","editable","React","setValue","reurl1","reinsta","refb","ResourceTable","columns","isDesktop","classesPannelSummary","classesPanel","classesListItemText","defaultColumn","Cell","useTable","initialState","pageIndex","pageSize","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","row","getRowProps","cell","getCellProps","defaultValue","ExpansionPanel","classes","ExpansionPanelSummary","maxWidth","ExpansionPanelDetails","List","disablePadding","dense","ListItem","alignItems","divider","ListItemText","Resources","setCity","category","setCategory","indianstate","setIndianState","resourcedict","setResourceDict","showTable","setShowTable","setIsDesktop","getResources","checkForResizeEvent","addEventListener","removeEventListener","hashmap","resources","isArray","memocols","Header","accessor","changedstateevent","hidden","changedcityevent","changedcategoryevent","citydata","element","pointerEvents","history","createBrowserHistory","App","view","exact","component","Boolean","hostname","match","ReactDOM","serviceWorker","registration","unregister","message","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","resolve"],"mappings":"iGAAAA,EAAOC,QAAU,IAA0B,kC,imijBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,6MCArCC,EAAS,CACb,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,GAAM,MACN,GAAM,MACN,GAAM,OAGFC,EAAa,CACjBC,GAAI,iBACJC,GAAI,oBACJC,GAAI,QACJC,GAAI,QACJC,GAAI,eACJC,GAAI,MACJC,GAAI,UACJC,GAAI,UACJC,GAAI,mBACJC,GAAI,YACJC,GAAI,YACJC,GAAI,SACJC,GAAI,iBACJC,GAAI,cACJC,GAAI,UACJC,GAAI,YACJC,GAAI,UACJC,GAAI,WACJC,GAAI,SACJC,GAAI,SACJC,GAAI,YACJC,GAAI,SACJC,GAAI,aACJC,GAAI,YACJC,GAAI,UACJC,GAAI,cACJC,GAAI,gBACJC,GAAI,cACJC,GAAI,8BACJC,GAAI,aACJC,GAAI,yBACJC,GAAI,gBACJC,GAAI,QACJC,GAAI,oBACJC,GAAI,SACJC,GAAI,cACJC,GAAI,cAOOC,EAAa,SAACC,GACzB,IAAMC,EAAMD,EAAgBE,MAAM,EAAG,GAC/BC,EAAQH,EAAgBE,MAAM,EAAG,GACjCE,EAAOJ,EAAgBE,MAAM,EAAG,IAChCG,EAAOL,EAAgBE,MAAM,IACnC,MAAM,GAAN,OAAUE,EAAV,YAAkBD,EAAlB,YAA2BF,EAA3B,YAAkCI,EAAlC,WAGWC,EAAqB,SAACN,GACjC,IAAMC,EAAMD,EAAgBE,MAAM,EAAG,GAC/BC,EAAQH,EAAgBE,MAAM,EAAG,GACjCG,EAAOL,EAAgBE,MAAM,IACnC,MAAM,GAAN,OAAUD,EAAV,YAAiBzC,EAAO2C,GAAxB,aAAmCE,EAAKH,MAAM,EAAG,GAAjD,SAGWK,EAAc,WAAgB,IAAfC,EAAc,uDAAP,GAC3BC,EAAQ,IAAIC,KAClBD,EAAME,SAAS,EAAG,EAAG,EAAG,GACxB,IAAMC,EAAY,CAChB,iBACA,gBACA,iBACA,iBACA,gBACA,kBAEF,OAAOJ,EACJK,QAAO,SAACC,GAAD,OAAOF,EAAUG,OAAM,SAACC,GAAD,OAAQF,EAAEE,OAAQF,EAAEG,QAClDJ,QAAO,SAACC,GAAD,OAAOF,EAAUG,OAAM,SAACC,GAAD,OAAQE,OAAOJ,EAAEE,KAAQ,QACvDH,QAAO,SAACC,GACP,IAAMV,EAAOK,EAAMU,cACnB,OAAO,IAAIT,KAAKI,EAAEG,KAAOb,GAAQK,MA2BhC,IAAMW,EAAe,SAACC,GAC3B,IAAMC,EAAkB,IAAIC,KAAKC,aAAa,SAC9C,OAAOC,MAAMJ,GAAS,IAAMC,EAAgBI,OAAOL,I,2CCoMtCM,MAjTf,SAAaC,GAAQ,IAAD,EACQC,mBAASD,EAAME,OADvB,mBACXA,EADW,KACJC,EADI,OAEgBF,mBAASD,EAAMI,WAF/B,mBAEXA,EAFW,KAEAC,EAFA,OAG4BJ,mBAASD,EAAMI,WAH3C,mBAGXE,EAHW,KAGMC,EAHN,OAIcN,mBAAS,CACvCO,WAAYC,aAAaC,QAAQ,uBAC7BD,aAAaC,QAAQ,uBACrB,YACJC,cAAaF,aAAaC,QAAQ,yBACmB,SAAjDD,aAAaC,QAAQ,0BATT,mBAIXE,EAJW,KAIDC,EAJC,KAalBC,qBAAU,WACRX,EAASH,EAAME,SACd,CAACF,EAAME,QAEVY,qBAAU,WACRT,EAAaL,EAAMI,WACnBG,EAAmBP,EAAMI,aACxB,CAACJ,EAAMI,YAEV,IAAMW,EAAe,WACnBf,EAAMe,aAAaf,EAAME,MAAMA,QAG3Bc,EAAgBC,uBACpB,SAACC,GACC,IAAMC,EAAS,GACXD,IACFE,OAAOC,KAAKH,GACTI,MAAK,SAACC,EAAWC,GAChB,IAAMhB,EAAaI,EAASJ,WACtBiB,EACW,aAAfjB,EACIe,EACAG,SAASR,EAAWK,GAAWI,WAC/BC,EACW,aAAfpB,EACIgB,EACAE,SAASR,EAAWM,GAAWG,WAC/BE,EACJJ,EAASG,GAELH,IAAWG,GAAUL,EAAYC,EADjC,GAGC,EACP,OAAOZ,EAASD,YACZkB,GACmB,EAAnBA,KAELC,SAAQ,SAACC,GACRZ,EAAOY,GAAOb,EAAWa,MAE7BxB,EAAmBY,MAGvB,CAACP,EAASD,YAAaC,EAASJ,aAG5BwB,EAAa,SAACC,GAClB,IAAMtB,EACJC,EAASJ,aAAeyB,GACnBrB,EAASD,YACc,aAAxBC,EAASJ,WACfK,EAAY,CACVL,WAAYyB,EACZtB,YAAaA,IAEfF,aAAayB,QAAQ,sBAAuBD,GAC5CxB,aAAayB,QAAQ,uBAAwBvB,IAO/C,OAJAG,qBAAU,WACRE,EAAcZ,KACb,CAACA,EAAWQ,EAAUI,IAGvB,kBAAC,IAAMmB,SAAP,KACE,wBACEC,UAAWpC,EAAMqC,MAAQ,iBAAmB,QAC5CC,aAAc,kCAAMtC,EAAMuC,wBAAZ,aAAM,OAAAvC,EAAyBE,EAAOF,EAAMwC,QAC1DC,aAAc,kCAAMzC,EAAMuC,wBAAZ,aAAM,OAAAvC,IACpB0C,WAAY,kCAAM1C,EAAMuC,wBAAZ,aAAM,OAAAvC,EAAyBE,EAAOF,EAAMwC,QACxDG,QAAU3C,EAAMqC,MAAuB,KAAftB,EACxB6B,MAAO,CAACC,WAAY7C,EAAMwC,MAAQ,IAAM,EAAI,UAAY,KAExD,wBAAII,MAAO,CAACE,WAAY,MACtB,yBAAKV,UAAU,wBACb,0BACEA,UAAS,mBACPpC,EAAM+C,OAAS,kBAAoB,mBAErCH,MAAO,CAACI,QAAUhD,EAAMqC,MAAa,OAAL,IAChCM,QAAS,WACP5B,MAGF,kBAAC,IAAD,OAEDb,EAAMA,MACU,gBAAhBA,EAAMA,OACL,kBAAC,IAAD,CAAM+C,GAAG,QACP,kBAAC,IAAD,CAAiBb,UAAU,iBAKnC,4BACE,0BAAMA,UAAU,SAASQ,MAAO,CAACM,MAAO,YACrChD,EAAMiD,eAAiB,GAAK,kBAAC,IAAD,MAC5BjD,EAAMiD,eAAiB,EAAvB,UAA8BjD,EAAMiD,gBAAmB,IAE1D,0BAAMf,UAAU,qBACiB,IAA9BV,SAASxB,EAAMyB,WACZ,IACAnC,EAAaU,EAAMyB,aAG3B,wBACEiB,MAAO,CAACM,MAAkC,IAA3BxB,SAASxB,EAAMkD,QAAgB,UAAY,YAM9B,IAA3B1B,SAASxB,EAAMkD,QAAgB,IAAM5D,EAAaU,EAAMkD,SAE3D,wBACER,MAAO,CACLM,MAAqC,IAA9BxB,SAASxB,EAAMmD,WAAmB,UAAY,YAGvD,0BAAMjB,UAAU,SAASQ,MAAO,CAACM,MAAO,YACrChD,EAAMoD,eAAiB,GAAK,kBAAC,IAAD,MAC5BpD,EAAMoD,eAAiB,EAAvB,UAA8BpD,EAAMoD,gBAAmB,IAE1D,0BAAMlB,UAAU,qBACiB,IAA9BV,SAASxB,EAAMmD,WACZ,IACA7D,EAAaU,EAAMmD,aAG3B,wBACET,MAAO,CAACM,MAAkC,IAA3BxB,SAASxB,EAAMqD,QAAgB,UAAY,YAE1D,0BAAMnB,UAAU,SAASQ,MAAO,CAACM,MAAO,YACrChD,EAAMsD,YAAc,GAAK,kBAAC,IAAD,MACzBtD,EAAMsD,YAAc,EAApB,UAA2BtD,EAAMsD,aAAgB,IAEpD,0BAAMpB,UAAU,qBACc,IAA3BV,SAASxB,EAAMqD,QAAgB,IAAM/D,EAAaU,EAAMqD,WAK/D,wBACEnB,UAAW,oBACXQ,MAAO,CAACI,QAAShD,EAAM+C,SAAW/C,EAAMqC,MAAQ,GAAK,SAErD,wBAAIoB,QAAS,GACX,yBAAKrB,UAAU,eACb,gDACA,wBACEsB,MACE7D,MAAMf,KAAK6E,MAAMxF,EAAW6B,EAAME,MAAM0D,mBACpC,GACAlF,EAAmBsB,EAAME,MAAM0D,kBAGpC/D,MAAMf,KAAK6E,MAAMxF,EAAW6B,EAAME,MAAM0D,mBACrC,GADH,UAEMC,YACD,IAAI/E,KAAKX,EAAW6B,EAAME,MAAM0D,kBAChC,IAAI9E,MAJT,YAWT,wBACEsD,UAAS,mBACTQ,MAAO,CAACI,QAAShD,EAAM+C,SAAW/C,EAAMqC,MAAQ,GAAK,SAErD,wBAAIM,QAAS,SAACmB,GAAD,OAAO9B,EAAW,cAC7B,yBAAKI,UAAU,mBACb,0BAAMsB,MAAM,YAAZ,YACA,yBACEd,MAAO,CACLI,QAC0B,aAAxBpC,EAASJ,WAA4B,UAAY,SAGpDI,EAASD,YACR,yBAAKyB,UAAU,aAEf,yBAAKA,UAAU,kBAKvB,wBAAIO,QAAS,SAACmB,GAAD,OAAO9B,EAAW,eAC7B,yBAAKI,UAAU,mBACb,0BACEA,UAAS,UAAK2B,OAAOC,YAAc,IAAM,YAAc,IACvDN,MAAM,aAELK,OAAOC,YAAc,IAClBD,OAAOC,YAAc,IACnB,IACA,QACF,aAEN,yBACEpB,MAAO,CACLI,QAC0B,cAAxBpC,EAASJ,WAA6B,UAAY,SAGrDI,EAASD,YACR,yBAAKyB,UAAU,aAEf,yBAAKA,UAAU,mBAOxB9B,GACCc,OAAOC,KAAKf,GACTrB,QAAO,SAACgF,GAAD,MAAyC,YAA3BA,EAASC,iBAC9BC,KAAI,SAACF,EAAUzB,GACd,MAA+B,YAA3ByB,EAASC,cAET,wBACEnC,IAAKS,EACLJ,UAAS,WACTQ,MAAO,CACLI,QAAShD,EAAM+C,SAAW/C,EAAMqC,MAAQ,GAAK,OAC7CQ,WAAYL,EAAQ,IAAM,EAAI,UAAY,IAE5CF,aAAc,kCACZtC,EAAMoE,2BADM,aACZ,OAAApE,EAA4BiE,EAAU/D,EAAOF,EAAMwC,QAErDC,aAAc,kCAAMzC,EAAMoE,2BAAZ,aAAM,OAAApE,IACpB0C,WAAY,kCACV1C,EAAMoE,2BADI,aACV,OAAApE,EAA4BiE,EAAU/D,EAAOF,EAAMwC,SAGrD,wBAAII,MAAO,CAACE,WAAY,MAAOmB,GAC/B,4BACE,0BAAM7B,UAAU,SAASQ,MAAO,CAACM,MAAO,YACrC5C,EAAgB2D,GAAUI,MAAM1C,UAAY,GAC3C,kBAAC,IAAD,MAEDrB,EAAgB2D,GAAUI,MAAM1C,UAAY,EAA5C,UACMrB,EAAgB2D,GAAUI,MAAM1C,WACnC,IAEN,0BAAMS,UAAU,qBACb5C,EAAac,EAAgB2D,GAAUtC,cAM3C,SAGG,OAAfrB,QAAe,IAAfA,OAAA,EAAAA,EAAiBgE,UAChB,wBACElC,UAAS,WACTQ,MAAO,CAACI,QAAShD,EAAM+C,SAAW/C,EAAMqC,MAAQ,GAAK,SAErD,wBAAIO,MAAO,CAACE,WAAY,MAAxB,WACA,4BACE,0BAAMV,UAAU,SAASQ,MAAO,CAACM,MAAO,YACrC5C,EAAe,QAAY+D,MAAM1C,UAAY,GAC5C,kBAAC,IAAD,MAEDrB,EAAe,QAAY+D,MAAM1C,UAAY,EAA7C,UACMrB,EAAe,QAAY+D,MAAM1C,WACpC,IAEN,0BAAMS,UAAU,qBACb5C,EAAac,EAAe,QAAYqB,cAMjD,wBACES,UAAS,SACTQ,MAAO,CAACI,QAAShD,EAAM+C,SAAW/C,EAAMqC,MAAQ,GAAK,SAErD,6BACA,6BACA,gCC5BOkC,MApRf,SAAevE,GAAQ,IAAD,EACQC,mBAASD,EAAMwE,QADvB,mBACbA,EADa,KACLC,EADK,OAEwBxE,mBAAS,IAFjC,mBAEbyE,EAFa,KAEGC,EAFH,OAGc1E,mBAAS,IAHvB,mBAGbG,EAHa,KAGFC,EAHE,OAIMJ,mBAAS,GAJf,mBAIb2E,EAJa,KAINC,EAJM,OAKY5E,mBAAS,CACvCO,WAAYC,aAAaC,QAAQ,oBAC7BD,aAAaC,QAAQ,oBACrB,YACJC,cAAaF,aAAaC,QAAQ,sBACgB,SAA9CD,aAAaC,QAAQ,uBAVP,mBAKbE,EALa,KAKHC,EALG,KAcpBC,qBAAU,YACc,IAAlBd,EAAM8E,QACRL,EAAUzE,EAAMwE,OAAOlG,MAAM,EAAG,IAEhCmG,EAAUzE,EAAMwE,UAEjB,CAACxE,EAAMwE,OAAQxE,EAAM8E,UAExBhE,qBAAU,WACJd,EAAMwE,OAAO,IACfG,EACE3E,EAAMwE,OAAOO,QAAO,SAACC,EAAG9E,GACtB,OAAO,eAAI8E,EAAX,eAAe9E,EAAMA,OAAQ,MAC5B,OAGN,CAACF,EAAMwE,SAEV1D,qBAAU,WACJ0D,EAAOS,OAAS,GAElBJ,EAASL,EAAOlG,MAAM,GAAGW,QAAO,SAACiG,GAAD,OAAOA,GAAKA,EAAEvD,UAAY,KAAGsD,UAE9D,CAACT,IAEJ1D,qBAAU,WACRT,EAAaL,EAAMmF,yBAClB,CAACnF,EAAMmF,wBAEV,IA6BMnD,EAAa,SAAC8B,EAAG9D,GACrB,IAAMoF,EAAoBtB,EAAEuB,cACzBC,cAAc,QACdC,aAAa,SACbrB,cACGvD,EACJC,EAASJ,aAAe4E,GACnBxE,EAASD,YACc,UAAxBC,EAASJ,WACfK,EAAY,CACVL,WAAY4E,EACZzE,YAAaA,IAEfF,aAAayB,QAAQ,mBAAoBkD,GACzC3E,aAAayB,QAAQ,oBAAqBvB,IAGtCI,EAAe,SAACb,GACpByE,EAAkB,eACbD,EADY,eAEdxE,GAASwE,EAAexE,OAM7B,OAvDe,SAAC4D,EAAG9D,GACjB,IAAMwF,EAAWhB,EAAOiB,OAAO,EAAG,GAClCjB,EAAOlD,MAAK,SAACoE,EAAYC,GACvB,IAAMnF,EAAaI,EAASJ,WACxBiB,EAASiE,EAAWlF,GACpBoB,EAAS+D,EAAWnF,GAOxB,MALmB,UAAfA,IACFiB,EAASC,SAASgE,EAAWlF,IAC7BoB,EAASF,SAASiE,EAAWnF,KAG3BI,EAASD,YACJc,EAASG,GAEZH,IAAWG,GAAU8D,EAAU,MAAYC,EAAU,MADrD,GAGC,EAEElE,EAASG,GAEZH,IAAWG,GAAU8D,EAAU,MAAYC,EAAU,MADrD,GAGC,KAGTnB,EAAOoB,QAAQJ,EAAS,IA2B1BK,GAGE,kBAAC,IAAM1D,SAAP,KACE,wBAAIC,UAAU,2BAA2BQ,MAAO,CAACkD,eAAgB,SAAjE,qCACoC,kBAAC,IAAD,CAAM7C,GAAG,QAAT,cAEpC,2BAAOb,UAAU,iBAAiBQ,MAAO,CAACkD,eAAgB,SACxD,+BACE,4BACE,wBACE1D,UAAU,uBACVO,QAAS,SAACmB,GAAD,OAAO9B,EAAW8B,KAE3B,yBAAK1B,UAAU,mBACb,0BAAMsB,MAAM,SAAZ,YACA,yBACEd,MAAO,CACLI,QAC0B,UAAxBpC,EAASJ,WAAyB,UAAY,SAGjDI,EAASD,YACR,yBAAKyB,UAAU,aAEf,yBAAKA,UAAU,kBAKvB,wBAAIA,UAAU,SAASO,QAAS,SAACmB,GAAD,OAAO9B,EAAW8B,KAChD,yBAAK1B,UAAU,mBACb,0BACEA,UAAS,UAAK2B,OAAOC,YAAc,IAAM,YAAc,IACvDN,MAAM,aAELK,OAAOC,YAAc,IAClBD,OAAOC,YAAc,IACnB,IACA,QACF,aAEN,yBACEpB,MAAO,CACLI,QAC0B,cAAxBpC,EAASJ,WAA6B,UAAY,SAGrDI,EAASD,YACR,yBAAKyB,UAAU,aAEf,yBAAKA,UAAU,kBAKvB,wBAAIA,UAAU,SAASO,QAAS,SAACmB,GAAD,OAAO9B,EAAW8B,KAChD,yBAAK1B,UAAU,mBACb,0BACEA,UAAS,UAAK2B,OAAOC,YAAc,IAAM,UAAY,IACrDN,MAAM,UAELK,OAAOC,YAAc,IAClBD,OAAOC,YAAc,IACnB,IACA,OACF,UAEN,yBACEpB,MAAO,CACLI,QAC0B,WAAxBpC,EAASJ,WAA0B,UAAY,SAGlDI,EAASD,YACR,yBAAKyB,UAAU,aAEf,yBAAKA,UAAU,kBAKvB,wBAAIA,UAAU,SAASO,QAAS,SAACmB,GAAD,OAAO9B,EAAW8B,KAChD,yBAAK1B,UAAU,mBACb,0BACEA,UAAS,UAAK2B,OAAOC,YAAc,IAAM,WAAa,IACtDN,MAAM,aAELK,OAAOC,YAAc,IAClBD,OAAOC,YAAc,IACnB,IACA,QACF,aAEN,yBACE5B,UAC0B,cAAxBxB,EAASJ,WAA6B,aAAe,KAGzD,yBACEoC,MAAO,CACLI,QAC0B,cAAxBpC,EAASJ,WAA6B,UAAY,SAGrDI,EAASD,YACR,yBAAKyB,UAAU,aAEf,yBAAKA,UAAU,kBAKvB,wBAAIA,UAAU,SAASO,QAAS,SAACmB,GAAD,OAAO9B,EAAW8B,KAChD,yBAAK1B,UAAU,mBACb,0BACEA,UAAS,UAAK2B,OAAOC,YAAc,IAAM,UAAY,IACrDN,MAAM,UAELK,OAAOC,YAAc,IAClBD,OAAOC,YAAc,IACnB,IACA,OACF,YAEN,yBACEpB,MAAO,CACLI,QAC0B,WAAxBpC,EAASJ,WAA0B,UAAY,SAGlDI,EAASD,YACR,yBAAKyB,UAAU,aAEf,yBAAKA,UAAU,oBAQ3B,+BACGoC,EAAOL,KAAI,SAACjE,EAAOsC,GAClB,OAAc,IAAVA,GAAetC,EAAMyB,UAAY,EAEjC,kBAAC,EAAD,CACEI,IAAKS,EACLA,MAAOA,EACPtC,MAAOA,EACPmC,OAAO,EACPU,OAAQ2B,EAAexE,EAAMA,OAC7BE,UACEF,EAAMA,SAASE,EACXA,EAAUF,EAAMA,OAAO6F,aACvB,GAENxD,iBAAkBvC,EAAMuC,iBACxB6B,oBAAqBpE,EAAMoE,oBAC3BrD,aAAcA,IAIb,SAIX,+BACGyD,EAAOS,OAAS,IAAuB,IAAlBjF,EAAM8E,SAC1B,kBAAC,EAAD,CAAK/C,IAAK,EAAG7B,MAAOsE,EAAO,GAAInC,OAAO,MAI5C,wBAAID,UAAU,2BAA2BQ,MAAO,CAACkD,eAAgB,OAC9DlB,EADH,0BCnKSoB,MA5Gf,SAAehG,GAAQ,IAAD,EACIC,mBAASD,EAAMpB,MADnB,mBACbA,EADa,KACPqH,EADO,OAEchG,mBAAS,GAFvB,mBAEb0B,EAFa,KAEFuE,EAFE,OAGQjG,mBAAS,GAHjB,mBAGbmD,EAHa,KAGL+C,EAHK,OAIgBlG,mBAAS,GAJzB,mBAIbmG,EAJa,KAIDC,EAJC,OAKQpG,mBAAS,GALjB,mBAKbsD,EALa,KAKL+C,EALK,OAMQrG,mBAAS,GANjB,mBAMbsG,EANa,KAMLC,EANK,KA0CpB,OAlCA1F,qBAAU,WACRmF,EAAQjG,EAAMpB,QACb,CAACoB,EAAMpB,OAEVkC,qBAAU,YACU,WAChB,IAAIa,EAAY,EACZyB,EAAS,EACTgD,EAAa,EACb7C,EAAS,EACTgD,EAAS,GACb3H,EAAKkD,SAAQ,SAAC5B,EAAOsC,GACL,IAAVA,GACFb,GAAaD,SAASxB,EAAMyB,WAC5ByB,GAAU1B,SAASxB,EAAMkD,QACzBgD,GAAc1E,SAASxB,EAAMmD,WAC7BE,GAAU7B,SAASxB,EAAMqD,SAEzBgD,EAAS,CACP5E,UAAWD,SAASxB,EAAMiD,gBAC1BI,OAAQ7B,SAASxB,EAAMsD,aACvBH,UAAW3B,SAASxB,EAAMoD,oBAIhC4C,EAAavE,GACbwE,EAAU/C,GACViD,EAAcD,GACdE,EAAU/C,GACViD,EAAUD,GAEZE,KACC,CAAC7H,IAGF,yBAAKwD,UAAU,SACb,yBACEA,UAAU,gCACVQ,MAAO,CAACkD,eAAgB,OAExB,yCACA,gCAEGS,EACGA,EAAO5E,UAAY,EACjB,IAAMnC,EAAa+G,EAAO5E,WAC1B,KACF,GANN,KASA,4BAAKnC,EAAamC,GAAlB,MAGF,yBACES,UAAU,8BACVQ,MAAO,CAACkD,eAAgB,SAExB,wBAAI1D,UAAU,WAAd,UACA,oCAEA,wBAAIA,UAAU,uBAAuB5C,EAAa4D,KAGpD,yBACEhB,UAAU,+BACVQ,MAAO,CAACkD,eAAgB,SAExB,wBAAI1D,UAAU,WAAd,aACA,gCAEGmE,EACGA,EAAOlD,UAAY,EACjB,IAAM7D,EAAa+G,EAAOlD,WAC1B,KACF,GANN,KASA,wBAAIjB,UAAU,0BAA0B5C,EAAa4G,GAArD,MAGF,yBACEhE,UAAU,8BACVQ,MAAO,CAACkD,eAAgB,SAExB,wBAAI1D,UAAU,WAAd,YACA,gCAEGmE,EACGA,EAAOhD,OAAS,EACd,IAAM/D,EAAa+G,EAAOhD,QAC1B,KACF,GANN,KASA,wBAAInB,UAAU,uBAAuB5C,EAAa+D,O,yBCzG7CmD,EACF,UADEA,EAEJ,QCIHC,EAAmB,CACvBC,QAAS,QACT1G,MAAO,YA0OM2G,MAvOf,YAQI,IAPFC,EAOC,EAPDA,UACAC,EAMC,EANDA,QACAC,EAKC,EALDA,iBACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,UACAC,EAEC,EAFDA,eACAC,EACC,EADDA,kBAEMC,EAAgBC,iBAAO,MAD5B,EAE2CrH,mBAAS,GAFpD,mBAEMsH,EAFN,KAEsBC,EAFtB,KAIKC,EAAQxG,uBACZ,SAACyG,GACCC,IAAa,iBAAiBC,SAC9B,IAAMC,EAAgBlB,EAAiBM,EAAQa,SAEzCC,EAAMJ,IAAUN,EAAcW,SAC9BC,GAASF,EAAIG,KAAK,SAClBC,GAAUJ,EAAIG,KAAK,UAWnBE,EAAWC,IACfX,EACAA,EAAQY,QAAQrB,EAAQsB,kBAGpBC,EAAab,MAEfV,EAAQa,UAAYpB,EACtB8B,EAAWC,QAAQ,CAACR,EAAOE,GAASC,GAEpCI,EAAWE,UACT,CACE,CAAC,GAAI,IACL,CAACT,EAAOE,IAEVC,GAGJ,IAAMO,EAAOhB,IAAWa,GAEpBI,EAAoB,KAExBb,EACGc,OAAO,KACPX,KAAK,QAAS,UACdY,UAAU,QACVlK,KAAKwJ,EAASW,UACdC,QACAH,OAAO,QACPX,KAAK,QAAS,eACdA,KAAK,QAAQ,SAAUhJ,GACtB,IAAM+J,EAAIvH,SAASqF,EAAQ7H,EAAEgK,WAAWrB,MAAoB,EAO5D,OALQ,IAANoB,EACI,UACAtB,IAjDe,GAkDOsB,GAAMnC,EAAUqC,cAAgB,UAI7DjB,KAAK,IAAKS,GACVT,KAAK,iBAAkB,OACvBkB,GAAG,aAAa,SAAClK,IAnDI,SAACmK,GACvB,IACErC,EAAiBqC,EAAMpC,GACvBG,EAAkBiC,GAClB,MAAOC,GACPC,QAAQC,IAAI,MAAOF,IA+CnBG,CAAgBvK,EAAEgK,WAAWrB,OAE9BuB,GAAG,cAAc,SAAClK,GACjBkI,EAAkB,MACdwB,IAAsB1J,IAAG0J,EAAoB,SAElDQ,GAAG,cAAc,SAAClK,GACY0J,EAAzBA,IAAsB1J,EAAuB,KACxBA,KAE1BkK,GAAG,SAAS,SAAClK,GACR0J,GAGA3B,EAAQa,UAAYpB,GAGxBQ,EAAUhI,EAAEgK,WAAWrB,GAAgBZ,EAAQa,YAEhDlF,MAAM,SAAU,WAChBiG,OAAO,SACPa,MAAK,SAAUxK,GACd,IAAMO,EAAQsH,EAAQ7H,EAAEgK,WAAWrB,KAAmB,EACtD,OACEvI,OACEqK,WAAkBlK,GAASqH,EAAUzE,OAAS,MAAnC,KAA4CuH,QAAQ,IAC/DC,WACF,UACAC,EAAY5K,EAAEgK,WAAWrB,OAI/BE,EACGc,OAAO,QACPX,KAAK,SAAU,aACfA,KAAK,OAAQ,QACbA,KAAK,eAAgB,GACrBA,KACC,IACAS,EAAKN,IAAcX,EAASA,EAAQY,QAAQrB,EAAQsB,sBAG1D,CACExB,EACAE,EACAH,EAAUzE,MACVyE,EAAUqC,aACVjC,EACAF,EACAI,IAIE0C,EAAc,SAACC,GACnBA,EAAMA,EAAI7F,cAAc8F,MAAM,KAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAI9E,OAAQgF,IAC9BF,EAAIE,GAAKF,EAAIE,GAAGC,OAAO,GAAGC,cAAgBJ,EAAIE,GAAG3L,MAAM,GAEzD,OAAOyL,EAAIK,KAAK,MAGZC,EAAapJ,uBAAY,WAC7B,IAQIqJ,EACAC,EATExC,EAAMJ,IAAUN,EAAcW,SAI9B9E,EAAQyE,IACKA,KAChB6C,OAAO,CAAC,EAAG1D,EAAUqC,aAHC,IAGkC,KAK3DoB,EAAQ,YAAsD,IAApDN,EAAmD,EAAnDA,EAAGQ,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,gBAAqC,EAApBC,eACvC,GAAIV,IAAMQ,EAAY,EAAG,CACvB,IAAMxB,EAAI2B,KAAKC,MAAMH,EAAgBT,IACrC,MAAM,GAAN,OAAUhB,EAAV,KAEA,IAAM6B,EAAK,EAAIF,KAAKC,MAAMH,EAAgBT,IACpCc,EAAKH,KAAKC,MAAMH,EAAgBT,EAAI,IAC1C,MAAM,GAAN,OAAUa,EAAV,cAAkBC,IAItB,IACM1G,EAAQuG,KAAKC,OAChB/D,EAAUqC,aAFI,IAEiCrC,EAAUqC,cAA1D,GAIFmB,EAAQU,MAAMC,KAAKD,MANF,GAMkB3J,QAAQ8C,KAAI,SAAC8F,GAAD,OAAOA,EAAI5F,KAE1D0D,EACGc,OAAO,KACPX,KAAK,QAAS,gBACdA,KAAK,YAAa,qBAErB,IAAMgD,EAAeC,cAClBC,WAAW,IACXC,YAAY,IACZf,MAAMA,GACNgB,WAAW,GACXC,OAAOhB,GACP7G,MAAM,mBACN8H,OAAO,YACPC,MAAMvI,GAET6E,EACG2D,OAAO,iBACPC,KAAKT,GACLpC,UAAU,QACVlG,MAAM,YAAa,UACrB,CAACkE,EAAUqC,eAgCd,OA9BArI,qBAAU,WACR,sBAAC,4BAAAkE,EAAA,sEACoB2C,IAAQV,EAAQ2E,aADpC,OACOhN,EADP,OAEKkI,GAAaO,EAAcW,UAC7BP,EAAM7I,GACNyL,IACA7C,GAAkB,SAACqE,GAAD,OAAeA,EAAY,MALhD,0CAAD,KAQC,CAAC5E,EAAQ2E,YAAa9E,EAAWuD,EAAY5C,IAiBhD3G,qBAAU,WAfmB,IAACuI,IAgBPlC,EAfPQ,IAAa,gBACrBmE,QAAQ,aAAa,SAAC5M,EAAG+K,EAAG8B,GAChC,IAAMlE,EACJ,aAAc3I,EAAEgK,WACZvC,EAAgB,MAChBA,EAAgB,QACtB,OAAI0C,IAASnK,EAAEgK,WAAWrB,KACxBkE,EAAM9B,GAAG+B,WAAWC,YAAYF,EAAM9B,KAC/B,QAQV,CAAC1C,EAAgBJ,IAGlB,yBAAK/E,UAAU,sBAAsBQ,MAAO,CAACkD,eAAgB,SAC3D,yBACEoG,GAAG,QACHjE,MAAM,MACNE,OAAO,MACPgE,QAAQ,cACRC,oBAAoB,gBACpBC,IAAKhF,M,kBCpOPJ,EAAU,CACdqF,MAAO,CACLjD,KAAM,QACNuC,YAAY,GAAD,OFNS,QEMT,eACX9D,QAASpB,EACT6B,gBAAiB,SAEnB,8BAA+B,CAC7Bc,KAAM,8BACNuC,YAAY,GAAD,OFZS,QEYT,+BACX9D,QAASpB,EACT6B,gBAAiB,kCAEnB,oBAAqB,CACnBc,KAAM,oBACNuC,YAAY,GAAD,OFlBS,QEkBT,0BACX9D,QAASpB,EACT6B,gBAAiB,6BAEnB,iBAAkB,CAChBc,KAAM,iBACNuC,YAAY,GAAD,OFxBS,QEwBT,uBACX9D,QAASpB,EACT6B,gBAAiB,0BAGnBgE,MAAO,CACLlD,KAAM,QACNuC,YAAY,GAAD,OF/BS,QE+BT,eACX9D,QAASpB,EACT6B,gBAAiB,kBAEnBiE,MAAO,CACLnD,KAAM,QACNuC,YAAY,GAAD,OFrCS,QEqCT,eACX9D,QAASpB,EACT6B,gBAAiB,kBAEnBkE,WAAY,CACVpD,KAAM,aACNuC,YAAY,GAAD,OF3CS,QE2CT,oBACX9D,QAASpB,EACT6B,gBAAiB,uBAEnBmE,aAAc,CACZrD,KAAM,eACNuC,YAAY,GAAD,OFjDS,QEiDT,sBACX9D,QAASpB,EACT6B,gBAAiB,yBAEnB,yBAA0B,CACxBc,KAAM,yBACNuC,YAAY,GAAD,OFvDS,QEuDT,0BACX9D,QAASpB,EACT6B,gBAAiB,6BAEnBoE,MAAO,CACLtD,KAAM,QACNuC,YAAY,GAAD,OF7DS,QE6DT,eACX9D,QAASpB,EACT6B,gBAAiB,kBAEnBqE,UAAW,CACTvD,KAAM,YACNuC,YAAY,GAAD,OFnES,QEmET,mBACX9D,QAASpB,EACT6B,gBAAiB,sBAEnBsE,OAAQ,CACNxD,KAAM,SACNuC,YAAY,GAAD,OFzES,QEyET,gBACX9D,QAASpB,EACT6B,gBAAiB,mBAEnBuE,IAAK,CACHzD,KAAM,MACNuC,YAAY,GAAD,OF/ES,QE+ET,aACX9D,QAASpB,EACT6B,gBAAiB,gBAEnBwE,QAAS,CACP1D,KAAM,UACNuC,YAAY,GAAD,OFrFS,QEqFT,iBACX9D,QAASpB,EACT6B,gBAAiB,oBAEnByE,QAAS,CACP3D,KAAM,UACNuC,YAAY,GAAD,OF3FS,QE2FT,iBACX9D,QAASpB,EACT6B,gBAAiB,oBAEnB,mBAAoB,CAClBc,KAAM,mBACNuC,YAAY,GAAD,OFjGS,QEiGT,yBACX9D,QAASpB,EACT6B,gBAAiB,4BAEnB,oBAAqB,CACnBc,KAAM,oBACNuC,YAAY,GAAD,OFvGS,QEuGT,sBACX9D,QAASpB,EACT6B,gBAAiB,yBAEnB0E,UAAW,CACT5D,KAAM,YACNuC,YAAY,GAAD,OF7GS,QE6GT,mBACX9D,QAASpB,EACT6B,gBAAiB,sBAEnB2E,OAAQ,CACN7D,KAAM,SACNuC,YAAY,GAAD,OFnHS,QEmHT,gBACX9D,QAASpB,EACT6B,gBAAiB,mBAEnB4E,YAAa,CACX9D,KAAM,cACNuC,YAAY,GAAD,OFzHS,QEyHT,qBACX9D,QAASpB,EACT6B,gBAAiB,wBAEnB,iBAAkB,CAChBc,KAAM,iBACNuC,YAAY,GAAD,OF/HS,QE+HT,uBACX9D,QAASpB,EACT6B,gBAAiB,0BAEnB6E,YAAa,CACX/D,KAAM,cACNuC,YAAY,GAAD,OFrIS,QEqIT,qBACX9D,QAASpB,EACT6B,gBAAiB,wBAEnB8E,QAAS,CACPhE,KAAM,UACNuC,YAAY,GAAD,OF3IS,QE2IT,iBACX9D,QAASpB,EACT6B,gBAAiB,oBAEnB+E,UAAW,CACTjE,KAAM,YACNuC,YAAY,GAAD,OFjJS,QEiJT,mBACX9D,QAASpB,EACT6B,gBAAiB,sBAEnBgF,QAAS,CACPlE,KAAM,UACNuC,YAAY,GAAD,OFvJS,QEuJT,iBACX9D,QAASpB,EACT6B,gBAAiB,oBAEnBiF,SAAU,CACRnE,KAAM,WACNuC,YAAY,GAAD,OF7JS,QE6JT,kBACX9D,QAASpB,EACT6B,gBAAiB,qBAEnBkF,OAAQ,CACNpE,KAAM,SACNuC,YAAY,GAAD,OFnKS,QEmKT,gBACX9D,QAASpB,EACT6B,gBAAiB,mBAEnBmF,WAAY,CACVrE,KAAM,aACNuC,YAAY,GAAD,OFzKS,QEyKT,oBACX9D,QAASpB,EACT6B,gBAAiB,uBAEnBoF,OAAQ,CACNtE,KAAM,SACNuC,YAAY,GAAD,OF/KS,QE+KT,gBACX9D,QAASpB,EACT6B,gBAAiB,mBAEnBqF,UAAW,CACTvE,KAAM,YACNuC,YAAY,GAAD,OFrLS,QEqLT,mBACX9D,QAASpB,EACT6B,gBAAiB,sBAEnBsF,OAAQ,CACNxE,KAAM,SACNuC,YAAY,GAAD,OF3LS,QE2LT,gBACX9D,QAASpB,EACT6B,gBAAiB,mBAEnB,aAAc,CACZc,KAAM,aACNuC,YAAY,GAAD,OFjMS,QEiMT,oBACX9D,QAASpB,EACT6B,gBAAiB,sBAEnBuF,UAAW,CACTzE,KAAM,YACNuC,YAAY,GAAD,OFvMS,QEuMT,mBACX9D,QAASpB,EACT6B,gBAAiB,sBAEnBwF,QAAS,CACP1E,KAAM,UACNuC,YAAY,GAAD,OF7MS,QE6MT,iBACX9D,QAASpB,EACT6B,gBAAiB,oBAEnByF,YAAa,CACX3E,KAAM,cACNuC,YAAY,GAAD,OFnNS,QEmNT,qBACX9D,QAASpB,EACT6B,gBAAiB,wBAEnB,gBAAiB,CACfc,KAAM,gBACNuC,YAAY,GAAD,OFzNS,QEyNT,sBACX9D,QAASpB,EACT6B,gBAAiB,yBAGnB,cAAe,CACbc,KAAM,cACNuC,YAAY,GAAD,OFhOS,QEgOT,oBACX9D,QAASpB,EACT6B,gBAAiB,wBAIN,cAKX,IAAD,EAJD/D,EAIC,EAJDA,OACAW,EAGC,EAHDA,sBACA8I,EAEC,EAFDA,cACAC,EACC,EADDA,kBACC,EAC2CjO,mBAAS,IADpD,mBACMkH,EADN,KACsBC,EADtB,OAEuDnH,mBAAS,IAFhE,mBAEMkO,EAFN,KAE4BC,EAF5B,OAGqCnO,mBAAS,IAH9C,mBAGMoO,EAHN,KAGmBC,EAHnB,OAI6BrO,mBAAS,IAJtC,mBAIMsO,EAJN,KAIeC,EAJf,OAKmCvO,mBAASgH,EAAQqF,OALpD,mBAKMmC,EALN,KAKkBC,EALlB,KAaD,GANA5N,qBAAU,WACR,IAAM6N,EAASC,EAAmBpK,EAAO,IACzC8J,EAAeK,GACfP,EAAwBO,KACvB,CAACnK,KAEC6J,EACH,OAAO,KAdR,MAiBmCQ,mBAAQ,WAC1C,IAAM/H,EAAY,CAACzE,MAAO,EAAG8G,aAAc,GACvC2F,EAAiB,GAErB,GAAIL,EAAW3G,UAAYpB,EACzBoI,EAAiBtK,EAAOO,QAAO,SAACgK,EAAK7O,GACnC,GAAoB,UAAhBA,EAAMA,MACR,OAAO6O,EAET,IAAMpN,EAAYD,SAASxB,EAAMyB,WAOjC,OANAmF,EAAUzE,OAASV,EACfA,EAAYmF,EAAUqC,eACxBrC,EAAUqC,aAAexH,GAG3BoN,EAAI7O,EAAMA,OAASA,EAAMyB,UAClBoN,IACN,SACE,GAAIN,EAAW3G,UAAYpB,EAAiB,CACjD,IAAMsI,GACJ7J,EAAsBsJ,EAAWpF,OAAS,CAACtD,aAAc,KACzDA,aACF+I,EAAiB1N,OAAOC,KAAK2N,GAAkBjK,QAAO,SAACgK,EAAK9K,GAC1D,IAAMtC,EAAYD,SAASsN,EAAiB/K,GAAUtC,WAMtD,OALAmF,EAAUzE,OAASV,EACfA,EAAYmF,EAAUqC,eACxBrC,EAAUqC,aAAexH,GAE3BoN,EAAI9K,GAAY+K,EAAiB/K,GAAUtC,UACpCoN,IACN,IAEL,MAAO,CAACjI,EAAWgI,KAClB,CAACL,EAAYjK,EAAQW,IAlDvB,mBAiBM2B,EAjBN,KAiBiBgI,EAjBjB,KAoDK9H,EAAmB/F,uBACvB,SAACoI,EAAMoF,GACL,GAAIA,EAAW3G,UAAYpB,EAAmB,CAC5C,IAAMiI,EAASC,EACbpK,EAAOvF,QAAO,SAACiB,GAAD,OAAWmJ,IAASnJ,EAAMA,SAAO,IAEjDkO,EAAwBO,GACxBL,EAAeK,QACV,GAAIF,EAAW3G,UAAYpB,EAAiB,CACjD,IAGIX,GAHUZ,EAAsBsJ,EAAWpF,OAAS,CACtDtD,aAAc,KAESA,aAAasD,GACjCtD,IACHA,EAAe,CACbpE,UAAW,EACXyB,OAAQ,EACRG,OAAQ,EACRF,UAAW,IAGf+K,EAAwBa,EAAsBlJ,EAAcsD,IAC5D,IAAMgF,EAAcO,EAClBpK,EAAOvF,QAAO,SAACiB,GAAD,OAAWuO,EAAWpF,OAASnJ,EAAMA,SAAO,IAE5DoO,EAAeD,MAGnB,CAAC7J,EAAQW,IAGXrE,qBAAU,WACR,QAA0BoO,IAAtBhB,EAEG,GAA0B,OAAtBA,EAKX,KADkB,aAAcA,GACnB,CACX,IAAMiB,EAASlI,EAAO,MACtByH,EAAcS,GACd,IAAMR,EAASC,EAAmBV,EAAkBhO,OACpD8G,EAAiB2H,EAAOtF,KAAM8F,GAC9B/H,EAAkBuH,EAAOtF,UACpB,CACL,IAAM8F,EAASlI,EAAQiH,EAAkBhO,MAAMA,OAC/C,IAAKiP,EACH,OAEFT,EAAcS,GACdnI,EAAiBkH,EAAkBjK,SAAUkL,GAC7C/H,EAAkB8G,EAAkBjK,eAjBpCmD,EAAkB,QAmBnB,CAAC8G,EAAmBO,EAAW3G,QAASd,IAE3C,IAAMiI,EAAwB,SAAClJ,EAAcsD,GAC3C,GAAKtD,EAAL,CAGA,IAAM4I,EAAM,eAAO5I,GAInB,OAHK4I,EAAOtF,OACVsF,EAAOtF,KAAOA,GAETsF,IAGHC,EAAqB,SAAC1O,GAC1B,GAAKA,EAAL,CAGA,IAAMyO,EAAM,eAAOzO,GAInB,OAHKyO,EAAOtF,OACVsF,EAAOtF,KAAOsF,EAAOzO,OAEhByO,IAGHS,EAAmBnO,uBACvB,SAACoI,GACC,IAAM8F,EAASlI,EAAQoC,GACvB,GAAK8F,EAIL,GADAT,EAAcS,GACVA,EAAOrH,UAAYpB,EACrBM,EAAiBxC,EAAO,GAAGtE,MAAOiP,QAC7B,GAAIA,EAAOrH,UAAYpB,EAAiB,CAC7C,IAAMX,GAAgBZ,EAAsBkE,IAAS,CAACtD,aAAc,KACjEA,aACGsJ,EAAcjO,OAAOC,KAAK0E,GAC7B9G,QAAO,SAACoK,GAAD,MAAmB,YAATA,KACjB/H,MAAK,SAAC0D,EAAGsK,GACR,OAAOvJ,EAAauJ,GAAG3N,UAAYoE,EAAaf,GAAGrD,aAClD,GACLqF,EAAiBqI,EAAaF,MAGlC,CAACnI,EAAkB7B,EAAuBX,IAGrC6E,EAAyB8E,EAAzB9E,KAAMzF,EAAmBuK,EAAnBvK,gBAUb,OARA9C,qBAAU,WACR0N,EACEP,EAAcsB,MACZ,SAACC,GAAD,OAASA,EAAItP,QAAUmO,EAAYhF,MAA4B,KAApBmG,EAAIC,kBAGlD,CAACpB,EAAaJ,EAAeM,IAG9B,yBAAKnM,UAAU,uBAAuBQ,MAAO,CAACkD,eAAgB,SAC5D,yBAAK1D,UAAU,UACb,4BAAKqM,EAAWpF,MAChB,4BACGtF,OAAOC,YAAc,IAAM,MAAQ,QADtC,UACsD,IACnDyK,EAAW3G,UAAYpB,EAAoB,WAAa,WAAY,IAFvE,qBAOF,yBAAKtE,UAAU,aACb,yBAAKA,UAAU,iBAAiBQ,MAAO,CAACkD,eAAgB,OACtD,4BAAK/B,OAAOC,YAAc,IAAM,QAAU,aAC1C,yBAAK5B,UAAU,gBACb,4BAAK5C,EAAa6O,EAAY1M,YAC9B,+BAIJ,yBACES,UAAU,yBACVQ,MAAO,CAACkD,eAAgB,SAExB,4BAAK/B,OAAOC,YAAc,IAAM,OAAS,UACzC,yBAAK5B,UAAU,gBACb,4BAAK5C,EAAa6O,EAAYjL,SAC9B,+BAIJ,yBACEhB,UAAU,0BACVQ,MAAO,CAACkD,eAAgB,SAExB,4BAAK/B,OAAOC,YAAc,IAAM,QAAU,aAC1C,yBAAK5B,UAAU,gBACb,4BAAK5C,EAAa6O,EAAYhL,YAC9B,+BAIJ,yBACEjB,UAAU,yBACVQ,MAAO,CAACkD,eAAgB,SAExB,4BAAK/B,OAAOC,YAAc,IAAM,OAAS,YACzC,yBAAK5B,UAAU,gBACb,4BAAK5C,EAAa6O,EAAY9K,SAC9B,+BAKF,yBACEnB,UAAU,kCACVQ,MAAO,CAACkD,eAAgB,SAExB,6BAAK/B,OAAOC,WAAoB,WAChC,yBAAK5B,UAAU,gBACb,4BAAK5C,EAAY,OAAC+O,QAAD,IAACA,OAAD,EAACA,EAASkB,eAE7B,wBAAIrN,UAAU,aACVvC,MAAM,IAAIf,KAAJ,OAASyP,QAAT,IAASA,OAAT,EAASA,EAASmB,YAKtB,GALH,gBACY5P,YACP6D,YAAK,OAAC4K,QAAD,IAACA,OAAD,EAACA,EAASmB,UAAW,aAAc,IAAI5Q,MAC5C,aAIA,OAAPyP,QAAO,IAAPA,GAAA,UAAAA,EAASkB,mBAAT,eAAsBxK,QAAS,GAC9B,uBAAG0K,KAAMpB,EAAQqB,OAAQC,OAAO,YAC9B,kBAAC,IAAD,SAOV,yBAAKzN,UAAU,gBAAgBQ,MAAO,CAACkD,eAAgB,SACrD,4BAAKuD,GACJzF,GACC,yBACExB,UAAS,sBACPqM,EAAW3G,UAAYpB,EACnB,uBACA,sBAGN,4CACA,wBACEhD,MACE7D,MAAMf,KAAK6E,MAAMxF,EAAWyF,KACxB,GACAlF,EAAmBkF,IAGxB/D,MAAMf,KAAK6E,MAAMxF,EAAWyF,KACzB,GACAC,YACE,IAAI/E,KAAKX,EAAWyF,IACpB,IAAI9E,MACF,SAKb2P,EAAW3G,UAAYpB,EACtB,wBAAItE,UAAU,sBAAd,mBACmB,IAChB0M,EAAeX,EAAqB9E,MACjCyF,EAAeX,EAAqB9E,MACpC,GAEJ,KAEHoF,EAAW3G,UAAYpB,GACxBoI,EAAexK,QAAU,EACvB,wBAAIlC,UAAU,WAAd,yBACyB0M,EAAexK,QADxC,WAGE,KAEHmK,EAAW3G,UAAYpB,EACtB,yBACEtE,UAAU,qBACVO,QAAS,kBAAMyM,EAAiB,WAFlC,QAME,MAGN,kBAAC,EAAD,CACEtI,UAAWA,EACXG,QAASwH,EACT1H,QAAS+H,EACT9H,iBAAkBA,EAClBE,UAAWkI,EACXjI,eAAgBA,EAChBC,kBAAmBA,M,kBCvFZ0I,MA/bf,SAAoB9P,GAAQ,IAAD,EACiBC,mBACxC8D,OAAOC,WAAa,IAAM+L,IAAW,IAFd,mBAClBC,EADkB,KACHC,EADG,OAIWhQ,mBAAS,IAJpB,mBAIlBiQ,EAJkB,KAINC,EAJM,OAKSlQ,mBAAS,IALlB,mBAKlBmQ,EALkB,KAKPC,EALO,OAMCpQ,mBAAS,IANV,mBAMlBuC,EANkB,KAMX8N,EANW,OAODrQ,mBAASD,EAAMuQ,MAPd,mBAOlBA,EAPkB,KAOZC,EAPY,OAQKvQ,mBAASD,EAAMyQ,SARpB,mBAQlBA,EARkB,KAQTC,EARS,OASSzQ,mBAASD,EAAM2Q,MATxB,mBASlBC,EATkB,KASPC,EATO,OAUG5Q,oBAAS,GAVZ,mBAUlB6Q,EAVkB,KAUVC,EAVU,KAYnBC,EAAU1J,mBACV2J,EAAU3J,mBACV4J,EAAU5J,mBAEV6J,EAAa7J,mBACb8J,ECvByB,SAAC/E,GAAS,IAAD,EACJpM,mBAAS,MADL,mBACjCmR,EADiC,KACrBC,EADqB,KAcxC,OAZAvQ,qBAAU,WACR,IAAMwQ,EAAgBjF,EAAIrE,QACpBuJ,EAAiB,IAAIC,KAAe,SAACC,EAASC,GAClDD,EAAQ3P,SAAQ,SAAC6P,EAAOnP,GACtB6O,EAAcM,EAAMC,mBAIxB,OADAL,EAAeM,QAAQP,GAChB,WACLC,EAAeO,UAAUR,MAE1B,CAACjF,IACG+E,EDSYW,CAAkBZ,GAErCrQ,qBAAU,WACR,GAAId,EAAMkQ,WAAWjL,OAAS,EAAG,CAC/B,IAAM+M,EPmFL,SAAgC9B,EAAY+B,GACjD,OAAO/B,EAAW5R,MAAM4R,EAAWjL,OAASgN,GOpFfC,CACvBlS,EAAMkQ,WACNF,GAEFM,EAAS0B,EAAiB/M,OAAS,GACnCkL,EAAc6B,MAEf,CAAChS,EAAMkQ,WAAYF,IAEtBlP,qBAAU,WACR0P,EAAQxQ,EAAMuQ,QACb,CAACvQ,EAAMuQ,OAEVzP,qBAAU,WACR4P,EAAW1Q,EAAMyQ,WAChB,CAACzQ,EAAMyQ,UAEV3P,qBAAU,WACR+P,EAAa7Q,EAAM2Q,QAClB,CAAC3Q,EAAM2Q,OAEV,IAAMwB,EAAYlR,uBAChB,SAACiP,GACC,GAAKkB,EAAL,CACA,IAAMnJ,EAAQmJ,EAAWnJ,MACnBE,EAASiJ,EAAWjJ,OAGpBiK,EAAe,GAAfA,EAAgD,GAChDC,EAAapK,EADa,GAE1BqK,EAAcnK,EAFwB,GAItCoK,EPgCwB,SAACrC,GACnC,OAAOA,EAAW/L,KAAI,SAACqO,GAAD,MAAW,CAC/BnT,KAAM,IAAIP,KAAK0T,EAAKnT,KAAO,SAC3BoT,gBAAiBD,EAAKC,eACtBC,gBAAiBF,EAAKE,eACtBC,eAAgBH,EAAKG,cACrBC,gBAAiBJ,EAAKI,eACtBC,gBAAiBL,EAAKK,eACtBC,eAAgBN,EAAKM,kBOxCRC,CAAqB7C,GAC1B8C,EAAIT,EAAGtN,OAGboL,EAAaH,EAAW8C,EAAI,IAC5B1C,EAAS0C,EAAI,GAEb,IAAMC,EAAOtL,IAAUqJ,EAAQhJ,SACzBkL,EAAOvL,IAAUsJ,EAAQjJ,SACzBmL,EAAOxL,IAAUuJ,EAAQlJ,SAEzBoL,EAAU,IAAItU,KAAKyT,EAAG,GAAH,MACzBa,EAAQC,QAAQD,EAAQE,UAAY,GACpC,IAAMC,EAAU,IAAIzU,KAAKyT,EAAGS,EAAI,GAAP,MACzBO,EAAQF,QAAQE,EAAQD,UAAY,GAEpC,IAqCIE,EArCEC,EAAS9L,MAEZ+L,OAAM,GACNlJ,OAAO,CAAC4I,EAASG,IACjBI,MAAM,CAACvB,EAAaC,IAGjBuB,EAAY3L,EAAQ,IAAM,EAAI,EAE9B4L,EAAQ,SAACC,GAAD,OACZA,EACG5L,KAAK,QAAS,UACdyD,KAAKhE,IAAc8L,GAAQM,MAAMH,IACjChR,MAAM,YAHT,qBAGoC0P,EAHpC,SAKI0B,EAAQ,SAACF,EAAGG,GAAJ,OACZH,EACG5L,KAAK,QAAS,UACdyD,KAAKhE,IAAasM,GAAQF,MAAM,EAAG,OAAOG,YAAY,IACtDtR,MAAM,YAHT,qBAGoCyP,EAHpC,SAMI8B,EAAW,CAAClB,EAAMC,EAAMC,GACxBiB,EAA0B,IAAdxD,EACZyD,EAAiB,CACrB,iBACA,iBACA,iBAEIC,EAAiB,CACrB,iBACA,iBACA,iBAGIC,EAAS,CAAC,UAAW,UAAW,WAGtC,GAAIH,EAAW,CACb,IAAII,EAAkBzE,IACtBsE,EAAevS,SAAQ,SAAC6O,GACtB6D,EAAkB5J,KAAK6J,IACrBD,EACA7M,IAAO4K,GAAI,SAACrT,GAAD,OAAOA,EAAEyR,UAGxB,IAAM+D,EAAsB/M,MAEzB+L,OAAM,GACNlJ,OAAO,CACNgK,EAhEU,IAiEA7M,IAAO4K,GAAI,SAACrT,GAAD,OAAOA,EAAEuT,oBAE/BkC,OACAhB,MAAM,CAACrB,EAAaF,IAEjBwC,EAAmBjN,MAEtB+L,OAAM,GACNlJ,OAAO,CACNI,KAAKiK,IAAI,EAAGL,GACZ5J,KAAKiK,IAAI,EA3EC,IA2EYlN,IAAO4K,GAAI,SAACrT,GAAD,OAAOA,EAAEuT,qBAE3CkC,OACAhB,MAAM,CAACrB,EAAaF,IAEvBoB,EAAUa,EAAelQ,KAAI,SAACwM,GAC5B,IAAMmE,EAAenN,MAElB+L,OAAM,GACNlJ,OAAO,CACN7C,IAAO4K,GAAI,SAACrT,GAAD,OAAOA,EAAEyR,MArFZ,IAsFEhJ,IAAO4K,GAAI,SAACrT,GAAD,OAAOA,EAAEyR,QAE/BgE,OACAhB,MAAM,CAACrB,EAAaF,IACjB2C,EAAYpN,MAEf+L,OAAM,GACNlJ,OAAO,CACNI,KAAKiK,IACH,EACAlN,IAAO4K,GAAI,SAACrT,GAAD,OAAOA,EAAEyR,OAEtB/F,KAAKiK,IAAI,EAlGD,IAkGclN,IAAO4K,GAAI,SAACrT,GAAD,OAAOA,EAAEyR,SAE3CgE,OACAhB,MAAM,CAACrB,EAAaF,IACvB,OAAI3B,EAAgBF,EAAOqE,EAAmBG,EAClCxE,EAAOmE,EAAsBI,SAEtC,CACL,IAAME,EAAqBrN,MAExB+L,OAAM,GACNlJ,OAAO,CAAC,EA7GG,IA6GU7C,IAAO4K,GAAI,SAACrT,GAAD,OAAOA,EAAE0T,oBACzC+B,OACAhB,MAAM,CAACrB,EAAaF,IAEvBoB,EAAUc,EAAenQ,KAAI,SAACwM,GAC5B,IAAMmE,EAAenN,MAElB+L,OAAM,GACNlJ,OAAO,CAAC,EArHC,IAqHY7C,IAAO4K,GAAI,SAACrT,GAAD,OAAOA,EAAEyR,QACzCgE,OACAhB,MAAM,CAACrB,EAAaF,IACvB,OAAO7B,EAAOyE,EAAqBF,KAKvC,IAAMG,EAAQd,EAAShQ,KAAI,SAAC4D,EAAKkC,GAC/B,OAAOlC,EACJe,UAAU,UACVlK,KAAK,CAAC2T,EAAGS,EAAI,KAAK,SAAC9T,GAAD,OAAOA,EAAEG,QAC3B+K,KAAK,UACLlC,KAAK,QAAS,SACdA,KAAK,OAAQqM,EAAOtK,IACpB/B,KAAK,SAAUqM,EAAOtK,IACtB/B,KAAK,IAAK,MAqCfiM,EAASrS,SAAQ,SAACiG,EAAKkC,GAErB,IAAMiL,EAAInN,EAAIoN,aAAaC,SAAS,KAC9BC,EAAYhB,EAAepK,GAC3BqL,EAAYhB,EAAerK,GAC3B0G,EAAOyD,EAAYiB,EAAYC,EAE/BpS,EAAQqR,EAAOtK,GACfgK,EAAST,EAAQvJ,GAmCvB,GAhCIlC,EAAI2D,OAAO,WAAW6J,QACxBxN,EAAIc,OAAO,KAAKX,KAAK,QAAS,UAAUyD,KAAKkI,GAE7C9L,EAAI2D,OAAO,WAAWyJ,WAAWD,GAAGvJ,KAAKkI,GAGvC9L,EAAI2D,OAAO,WAAW6J,QACxBxN,EAAIc,OAAO,KAAK8C,KAAKqI,EAAOC,GAE5BlM,EAAI2D,OAAO,WAAWyJ,WAAWD,GAAGvJ,KAAKqI,EAAOC,GAMlDlM,EACGe,UAAU,QACVlK,KAAK2T,GAAI,SAACrT,GAAD,OAAOA,EAAEG,QAClB+K,MAAK,SAACpB,GAAD,OAAWA,EAAMH,OAAO,UAAUX,KAAK,KAAMoK,MAClDpK,KAAK,QAAS,OACdA,KAAK,OAAQhF,GACbgF,KAAK,SAAUhF,GACfgF,KAAK,IAAK,GACViN,WAAWD,GACXhN,KAAK,MAAM,SAAChJ,GAAD,OAAOuU,EAAOvU,EAAEG,SAC3B6I,KAAK,MAAM,SAAChJ,GAAD,OAAO+U,EAAO/U,EAAEyR,OAE9BsE,EAAMhL,GACHkL,WAAWD,GACXhN,KAAK,MAAM,SAAChJ,GAAD,OAAOuU,EAAOvU,EAAEG,SAC3B6I,KAAK,MAAM,SAAChJ,GAAD,OAAO+U,EAAO/U,EAAEyR,OAE1ByD,EAAW,CAEbrM,EAAIe,UAAU,SAASlB,SACvB,IAAMe,EAAOZ,EACVe,UAAU,UACVlK,KAAK,CAAC,YAAI2T,GAAIiD,YACdpL,KAAK,QACLlC,KAAK,QAAS,SACdA,KAAK,OAAQ,QACbA,KAAK,SAAUhF,EAAQ,MACvBgF,KAAK,eAAgB,GAMxB,GAAIS,EAAKT,KAAK,KAAM,CAClB,IAAMe,EAAIN,EAAK8M,OAAOC,iBAChBC,EAAIhN,EAAK8M,OAAOG,iBAAiB3M,GAEvCN,EAAKT,KACH,KACA,kBAAMS,EAAKT,KAAK,KAAO,WAAIyN,EAAEE,EAAN,YAAWF,EAAEG,GAAIC,OAAO,EAAI/C,MAGvDrK,EACGwM,WAAWD,GACXhN,KAAK,UAAWkM,EAAY,EAAI,GAChClM,KACC,IACAP,MAEGkO,GAAE,SAAC3W,GAAD,OAAOuU,EAAOvU,EAAEG,SAClByW,GAAE,SAAC5W,GAAD,OAAO+U,EAAO/U,EAAEmW,OAClBW,MAAMrO,WAUbI,EAAIe,UAAU,UAAUlB,SACxBG,EACGe,UAAU,SACVlK,KAAK2T,GAAI,SAACrT,GAAD,OAAOA,EAAEG,QAClB+K,MAAK,SAACpB,GAAD,OACJA,EACGH,OAAO,QACPX,KAAK,MAAM,SAAChJ,GAAD,OAAOuU,EAAOvU,EAAEG,SAC3B6I,KAAK,MAAM,SAAChJ,GAAD,OAAOuU,EAAOvU,EAAEG,SAC3B6I,KAAK,KAAMoK,MAEfpK,KAAK,QAAS,QACdtF,MAAM,SAAUM,EAAQ,MACxBN,MAAM,eAAgB,GACtBsF,KAAK,KAAMoK,GACX6C,WAAWD,GACXhN,KAAK,MAAM,SAAChJ,GAAD,OAAOuU,EAAOvU,EAAEG,SAC3B6I,KAAK,MAAM,SAAChJ,GAAD,OAAOuU,EAAOvU,EAAEG,SAC3B6I,KAAK,MAAM,SAAChJ,GAAD,OAAO+U,EAAO/U,EAAEoW,OAGhCvN,EACGqB,GAAG,YAAa6M,GAChB7M,GAAG,YAAa6M,GAChB7M,GAAG,WAAY8M,GACf9M,GAAG,WAAY8M,MAlJpB,SAASD,IACP,IAAME,EAAKxO,IAASyO,MAAM,GACpB/W,EAAOoU,EAAO4C,OAAOF,GAEvBlM,GAAIqM,EADW3O,KAAY,SAACzI,GAAD,OAAOA,EAAEG,QAAMkX,MAC3BhE,EAAIlT,EAAM,GAC7B,GAAI,GAAK4K,GAAKA,EAAI+I,EAAG,CACf3T,EAAOkT,EAAGtI,EAAI,GAAG5K,KAAOkT,EAAGtI,GAAG5K,KAAOA,KAAQ4K,EACjDoG,EAAaH,EAAWjG,IACxBqG,EAASrG,GACT8G,GAAU,GACV,IAAM7R,EAAIqT,EAAGtI,GACbgL,EAAMnT,SAAQ,SAAC0U,EAAGC,GAChB,IAAMxC,EAAST,EAAQiD,GACjB9F,EAAOyD,EAAYC,EAAeoC,GAAKnC,EAAemC,GAC5DD,EAAEtO,KAAK,KAAMuL,EAAOvU,EAAEG,OAAO6I,KAAK,KAAM+L,EAAO/U,EAAEyR,SAKvD,SAASuF,IACP7F,EAAaH,EAAW8C,EAAI,IAC5B1C,EAAS0C,EAAI,GACbjC,GAAU,GACVkE,EAAMnT,SAAQ,SAAC0U,EAAGC,GAChB,IAAMxC,EAAST,EAAQiD,GACjB9F,EAAOyD,EAAYC,EAAeoC,GAAKnC,EAAemC,GAC5DD,EAAEtO,KAAK,KAAMuL,EAAOlB,EAAGS,EAAI,GAAG3T,OAAO6I,KACnC,KACA+L,EAAO1B,EAAGS,EAAI,GAAGrC,WAyHzB,CAACS,EAAYR,EAAWH,EAASF,IAGnCzP,qBAAU,WACJoP,EAAWjL,OAAS,GACtBkN,EAAUjC,KAEX,CAACA,EAAYiC,IAEhB,IAAMuE,EAAgB,IAAI5X,KAC1B4X,EAAcrD,QAAQqD,EAAcpD,UAAY,GAChD,IAAMqD,EAAW,IAAI7X,KAAKsR,EAAS,KAAW,QACxCwG,EACJD,EAASE,aAAeH,EAAcG,YACtCF,EAASrD,YAAcoD,EAAcpD,UAEjCwD,EAA0B,IAAdlG,EAAkB,iBAAmB,iBACjDmG,EAA0B,IAAdnG,EAAkB,iBAAmB,iBACjDoG,EAA0B,IAAdpG,EAAkB,gBAAkB,gBAGhDqG,EAAqB,SAACrG,GAC1B,GAAIV,EAAWjL,QAAU,GAAe,IAAVzC,EAAa,MAAO,GAClD,IAAM0U,EACJhH,EAAW1N,GAAOoO,GAAaV,EAAW1N,EAAQ,GAAGoO,GACjDuG,EAAe3X,EAAa0X,GAClC,OAAOA,GAAe,EAAf,WAAuBC,GAAiBA,GAGjD,OACE,yBACE/U,UAAU,6BACVQ,MAAO,CAACkD,eAAgB,SAExB,yBAAK1D,UAAU,cACb,yBAAKA,UAAU,aAAaiK,IAAK8E,GAC/B,yBAAK/O,UAAU,SACb,wBAAIA,UAAS,UAAM0O,EAAmB,GAAV,UAA5B,aACA,wBAAI1O,UAAS,UAAK0O,EAAS,QAAU,KAArC,UACMV,EAAS,MADf,OAC0BwG,EAAc,cAAgB,MAExD,yBAAKxU,UAAU,gBACb,4BAAK5C,EAAa4Q,EAAU0G,KAC5B,4BAAKG,EAAmBH,MAG5B,yBAAKzK,IAAK2E,EAAS5E,oBAAoB,mBAGzC,yBAAKhK,UAAU,uBACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAS,UAAM0O,EAAmB,GAAV,UAA5B,aACA,wBAAI1O,UAAS,UAAK0O,EAAS,QAAU,KAArC,UACMV,EAAS,MADf,OAC0BwG,EAAc,cAAgB,MAExD,yBAAKxU,UAAU,gBACb,4BAAK5C,EAAa4Q,EAAU2G,KAC5B,4BAAKE,EAAmBF,MAG5B,yBAAK1K,IAAK4E,EAAS7E,oBAAoB,mBAGzC,yBAAKhK,UAAU,sBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAS,UAAM0O,EAAmB,GAAV,UAA5B,YACA,wBAAI1O,UAAS,UAAK0O,EAAS,QAAU,KAArC,UACMV,EAAS,MADf,OAC0BwG,EAAc,cAAgB,MAExD,yBAAKxU,UAAU,gBACb,4BAAK5C,EAAa4Q,EAAU4G,KAC5B,4BAAKC,EAAmBD,MAG5B,yBAAK3K,IAAK6E,EAAS9E,oBAAoB,oBAI3C,yBAAKhK,UAAU,SACb,4BACEuO,KAAK,SACLhO,QAAS,kBAAMsN,EAAiBF,MAChC3N,UAAW4N,IAAkBD,IAAW,WAAa,IAHvD,OAOA,4BACEY,KAAK,SACLhO,QAAS,kBAAMsN,EAAiB,KAChC7N,UAA6B,KAAlB4N,EAAuB,WAAa,GAC/CoH,aAAW,WAJb,MAQA,4BACEzG,KAAK,SACLhO,QAAS,kBAAMsN,EAAiB,KAChC7N,UAA6B,KAAlB4N,EAAuB,WAAa,GAC/CoH,aAAW,WAJb,UExFOC,MAhWf,SAAmBrX,GAAQ,IAAD,EACYC,mBAAS,IADrB,mBACjBiQ,EADiB,KACLC,EADK,KAElBmH,EAAgBhQ,iBAAO,MACvBiQ,EAAgBjQ,iBAAO,MACvBkQ,EAAgBlQ,iBAAO,MACvBmQ,EAAgBnQ,iBAAO,MAE7BxG,qBAAU,WACJd,EAAMkQ,WAAWjL,OAAS,GAC5BkL,EAAcnQ,EAAMkQ,WAAW5R,MAAM0B,EAAMkQ,WAAWjL,OAAS,OAEhE,CAACjF,EAAMkQ,aAEV,IAAMiC,EAAYlR,uBAChB,SAACiP,GACC,GAAIA,EAAWjL,QAAU,EAAG,OAAO,EACnC,IAAMrG,EAAOsR,EACP+C,EAAOtL,IAAU2P,EAActP,SAE/BC,EAAQ,IADwC,EAAtB,GAE1BE,EAAS,IAFM,GAAuB,GAItC+K,EAAOvL,IAAU4P,EAAcvP,SAC/BmL,EAAOxL,IAAU6P,EAAcxP,SAC/B0P,EAAO/P,IAAU8P,EAAczP,SAE/B6N,EAAIlO,MAEP6C,OACC7C,IAAU/I,GAAM,SAAUM,GACxB,OAAO,IAAIJ,KAAKI,EAAC,KAAW,YAG/ByU,MAAM,CAAC,EAAG1L,IAEP0P,EAAKhQ,MAER6C,OAAO,CACN,EACA7C,IAAO/I,GAAM,SAAUM,GACrB,OAAQA,EAAC,oBAGZyU,MAAM,CAACxL,EAAQ,IAEZyP,EAAQ3E,EACXpK,OAAO,QACPgP,MAAMjZ,GACNsJ,KAAK,OAAQ,QACbA,KAAK,SAAU,aACfA,KAAK,eAAgB,GACrBA,KAAK,SAAU,WACfA,KACC,IACAP,MAEGkO,GAAE,SAAU3W,GACX,OAAO2W,EAAE,IAAI/W,KAAKI,EAAC,KAAW,YAE/B4W,GAAE,SAAU5W,EAAG+K,GACd,OAAO0N,EAAGzY,EAAC,mBAEZ8W,MAAMrO,MAGPmQ,EAAeF,EAAMnC,OAAOC,iBAClCkC,EACG1P,KAAK,mBAAoB4P,EAAe,IAAMA,GAC9C5P,KAAK,oBAAqB4P,GAC1B3C,aACAC,SAASpV,EAAM+X,QAAU,IAAO,GAChC7P,KAAK,oBAAqB,GAE7B+K,EACGnK,UAAU,QACVlK,KAAKA,EAAKN,MAAMM,EAAKqG,OAAS,IAC9B+D,QACAH,OAAO,UACPX,KAAK,OAAQ,WACbA,KAAK,SAAU,WACfA,KAAK,IAAK,GACVA,KAAK,SAAU,WACfA,KAAK,MAAM,SAAUhJ,GACpB,OAAO2W,EAAE,IAAI/W,KAAKI,EAAC,KAAW,YAE/BgJ,KAAK,MAAM,SAAUhJ,GACpB,OAAOyY,EAAGzY,EAAC,mBAEZkK,GAAG,aAAa,SAAClK,GAChByI,IAAUA,IAASkI,QAAQ3H,KAAK,IAAK,QAEtCkB,GAAG,YAAY,SAAClK,GACfyI,IAAUA,IAASkI,QAAQ3H,KAAK,IAAK,QAEtCtF,MAAM,UAAW,GACjBuS,aACAC,SAASpV,EAAM+X,QAAU,IAAO,GAChCnV,MAAM,UAAW,GAEpB,IAAMoV,EAAQ9E,EACXrK,OAAO,QACPgP,MAAMjZ,GACNsJ,KAAK,OAAQ,QACbA,KAAK,SAAU,WACfA,KAAK,SAAU,aACfA,KAAK,eAAgB,GACrBA,KAAK,SAAU,WACfA,KAAK,SAAU,WACfA,KACC,IACAP,MAEGkO,GAAE,SAAU3W,GACX,OAAO2W,EAAE,IAAI/W,KAAKI,EAAC,KAAW,YAE/B4W,GAAE,SAAU5W,EAAG+K,GACd,OACS0N,EACLzY,EAAC,eAAqBA,EAAC,eAAqBA,EAAC,kBAQlD8W,MAAMrO,MAGPsQ,EAAeD,EAAMvC,OAAOC,iBAClCsC,EACG9P,KAAK,mBAAoB+P,EAAe,IAAMA,GAC9C/P,KAAK,oBAAqB+P,GAC1B9C,aACAC,SAASpV,EAAM+X,QAAU,IAAO,GAChC7P,KAAK,oBAAqB,GAE7BgL,EACGpK,UAAU,QACVlK,KAAKA,EAAKN,MAAMM,EAAKqG,OAAS,IAC9B+D,QACAH,OAAO,UACPX,KAAK,OAAQ,WACbA,KAAK,SAAU,WACfA,KAAK,IAAK,GACVA,KAAK,SAAU,WACfA,KAAK,MAAM,SAAUhJ,GACpB,OAAO2W,EAAE,IAAI/W,KAAKI,EAAC,KAAW,YAE/BgJ,KAAK,MAAM,SAAUhJ,GASpB,OAAOyY,EACLzY,EAAC,eAAqBA,EAAC,eAAqBA,EAAC,kBAGhDkK,GAAG,aAAa,SAAClK,GAChByI,IAAUA,IAASkI,QAAQ3H,KAAK,IAAK,QAEtCkB,GAAG,YAAY,SAAClK,GACfyI,IAAUA,IAASkI,QAAQ3H,KAAK,IAAK,QAEtCtF,MAAM,UAAW,GACjBuS,aACAC,SAASpV,EAAM+X,QAAU,IAAO,GAChCnV,MAAM,UAAW,GAEpB,IAAMsV,EAAQ/E,EACXtK,OAAO,QACPgP,MAAMjZ,GACNsJ,KAAK,OAAQ,QACbA,KAAK,SAAU,aACfA,KAAK,eAAgB,GACrBA,KAAK,SAAU,WACfA,KACC,IACAP,MAEGkO,GAAE,SAAU3W,GACX,OAAO2W,EAAE,IAAI/W,KAAKI,EAAC,KAAW,YAE/B4W,GAAE,SAAU5W,EAAG+K,GACd,OACS0N,EAAGzY,EAAC,mBAKd8W,MAAMrO,MAGPwQ,EAAeP,EAAMnC,OAAOC,iBAClCwC,EACGhQ,KAAK,mBAAoBiQ,EAAe,IAAMA,GAC9CjQ,KAAK,oBAAqBiQ,GAC1BhD,aACAC,SAASpV,EAAM+X,QAAU,IAAO,GAChC7P,KAAK,oBAAqB,GAE7BiL,EACGrK,UAAU,QACVlK,KAAKA,EAAKN,MAAMM,EAAKqG,OAAS,IAC9B+D,QACAH,OAAO,UACPX,KAAK,OAAQ,WACbA,KAAK,SAAU,WACfA,KAAK,IAAK,GACVA,KAAK,SAAU,WACfA,KAAK,MAAM,SAAUhJ,GACpB,OAAO2W,EAAE,IAAI/W,KAAKI,EAAC,KAAW,YAE/BgJ,KAAK,MAAM,SAAUhJ,GACpB,OAAOyY,EAAGzY,EAAC,mBAEZkK,GAAG,aAAa,SAAClK,GAChByI,IAAUA,IAASkI,QAAQ3H,KAAK,IAAK,QAEtCkB,GAAG,YAAY,SAAClK,GACfyI,IAAUA,IAASkI,QAAQ3H,KAAK,IAAK,QAEtCtF,MAAM,UAAW,GACjBuS,aACAC,SAASpV,EAAM+X,QAAU,IAAO,GAChCnV,MAAM,UAAW,GAEpB,IAAMwV,EAAQV,EACX7O,OAAO,QACPgP,MAAMjZ,GACNsJ,KAAK,OAAQ,QACbA,KAAK,SAAU,WACfA,KAAK,SAAU,aACfA,KAAK,eAAgB,GACrBA,KAAK,SAAU,WACfA,KAAK,SAAU,WACfA,KACC,IACAP,MAEGkO,GAAE,SAAU3W,GACX,OAAO2W,EAAE,IAAI/W,KAAKI,EAAC,KAAW,YAE/B4W,GAAE,SAAU5W,EAAG+K,GACd,OACS0N,EAAGzY,EAAC,kBAKd8W,MAAMrO,MAGP0Q,EAAeD,EAAM3C,OAAOC,iBAClC0C,EACGlQ,KAAK,mBAAoBmQ,EAAe,IAAMA,GAC9CnQ,KAAK,oBAAqBmQ,GAC1BlD,aACAC,SAASpV,EAAM+X,QAAU,IAAO,GAChC7P,KAAK,oBAAqB,GAE7BwP,EACG5O,UAAU,QACVlK,KAAKA,EAAKN,MAAMM,EAAKqG,OAAS,IAC9B+D,QACAH,OAAO,UACPX,KAAK,OAAQ,WACbA,KAAK,SAAU,WACfA,KAAK,IAAK,GACVA,KAAK,SAAU,WACfA,KAAK,MAAM,SAAUhJ,GACpB,OAAO2W,EAAE,IAAI/W,KAAKI,EAAC,KAAW,YAE/BgJ,KAAK,MAAM,SAAUhJ,GACpB,OAAOyY,EAAGzY,EAAC,kBAEZkK,GAAG,aAAa,SAAClK,GAChByI,IAAUA,IAASkI,QAAQ3H,KAAK,IAAK,QAEtCkB,GAAG,YAAY,SAAClK,GACfyI,IAAUA,IAASkI,QAAQ3H,KAAK,IAAK,QAEtCtF,MAAM,UAAW,GACjBuS,aACAC,SAASpV,EAAM+X,QAAU,IAAO,GAChCnV,MAAM,UAAW,KAEtB,CAAC5C,EAAM+X,UAOT,OAJAjX,qBAAU,WACRqR,EAAUjC,KACT,CAACA,EAAYiC,IAGd,yBAAK/P,UAAU,aACb,yBAAKA,UAAU,sBAAsBQ,MAAO,CAACkD,eAAgB,SAC3D,yBACEuG,IAAKiL,EACLrP,MAAM,MACNE,OAAO,MACPgE,QAAQ,cACRC,oBAAoB,mBAIxB,yBACEhK,UAAU,8BACVQ,MAAO,CAACkD,eAAgB,SAExB,yBACEuG,IAAKkL,EACLtP,MAAM,MACNE,OAAO,MACPgE,QAAQ,cACRC,oBAAoB,mBAIxB,yBACEhK,UAAU,+BACVQ,MAAO,CAACkD,eAAgB,SAExB,yBACEuG,IAAKmL,EACLvP,MAAM,MACNE,OAAO,MACPgE,QAAQ,cACRC,oBAAoB,mBAIxB,yBACEhK,UAAU,8BACVQ,MAAO,CAACkD,eAAgB,SAExB,yBACEuG,IAAKoL,EACLxP,MAAM,MACNE,OAAO,MACPgE,QAAQ,cACRC,oBAAoB,qBC7EfkM,MA9Pf,SAActY,GAAQ,IAAD,EACSC,mBAAS,IADlB,mBACZuE,EADY,KACJC,EADI,OAEuCxE,mBAAS,IAFhD,mBAEZkF,EAFY,KAEWoT,EAFX,OAGuBtY,mBAAS,IAHhC,mBAGZgO,EAHY,KAGGuK,EAHH,OAIWvY,oBAAS,GAJpB,mBAIZwY,EAJY,KAIHC,EAJG,OAKmBzY,mBAAS,GAL5B,mBAKZ0Y,EALY,KAKCC,EALD,OAMmB3Y,mBAAS,IAN5B,mBAMZ4Y,EANY,KAMCC,EAND,OAOiB7Y,mBAAS,IAP1B,mBAOZiQ,EAPY,KAOAC,EAPA,OAQmBlQ,mBAAS,IAR5B,mBAQZ8Y,EARY,KAQCC,EARD,OASyB/Y,oBAAS,GATlC,mBASZgZ,EATY,KASIC,GATJ,QAU+BjZ,oBAAS,GAVxC,qBAUZkZ,GAVY,MAUOC,GAVP,SAW+BnZ,wBAASiP,GAXxC,qBAWZhB,GAXY,MAWOmL,GAXP,MAanBvY,qBAAU,YACQ,IAAZ2X,GACFa,OAED,CAACb,IAEJ,IAAMa,GAAS,uCAAG,sCAAAtU,EAAA,+EAOJuU,QAAQC,IAAI,CACpBC,IAAMC,IAAI,0CACVD,IAAMC,IAAI,yDACVD,IAAMC,IAAI,mDACVD,IAAMC,IAAI,uDAXE,mCAGZC,EAHY,KAIZC,EAJY,KAKZC,EALY,KAMZC,EANY,KAadrV,EAAUkV,EAAS/a,KAAKmb,WACxB5J,EAAcxR,EAAYgb,EAAS/a,KAAKob,oBACxClB,EAAea,EAAS/a,KAAKmb,UAAU,GAAGnW,iBAC1C4U,EAAiBsB,EAAkBlb,KAAKqb,mBAAmBzE,WAC3D+C,EAAyBqB,EAA0Bhb,MACnDoa,EAAea,EAAkBjb,MAEjC8Z,GAAW,GApBG,kDAsBdnP,QAAQC,IAAR,MAtBc,0DAAH,qDAmCf,OACE,kBAAC,IAAMrH,SAAP,KACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBAAkBQ,MAAO,CAACkD,eAAgB,OACvD,yBAAK1D,UAAU,cACb,yBAAKA,UAAU,UACb,sDACA,wBAAIQ,MAAO,CAACE,WAAY,MAAxB,8BAEF,yBAAKV,UAAU,eACb,4CACA,wBAAIQ,MAAO,CAACM,MAAO,UAAWJ,WAAY,MACvCjD,MAAMf,KAAK6E,MAAMxF,EAAW0a,KACzB,GACAhV,YACE,IAAI/E,KAAKX,EAAW0a,IACpB,IAAI/Z,MACF,QAEV,wBAAI8D,MAAO,CAACM,MAAO,UAAWJ,WAAY,MACvCjD,MAAMf,KAAK6E,MAAMxF,EAAW0a,KACzB,GACAna,EAAmBma,OAM9BrU,EAAOS,OAAS,GAAK,kBAAC,EAAD,CAAOrG,KAAM4F,IACnC,kBAAC,EAAD,CAAW0L,WAAYA,EAAY6H,SAAS,IAC5C,kBAAC,EAAD,CACEvT,OAAQA,EACRM,SAAS,EACTK,sBAAuBA,EACvB5C,iBA5Ce,SAACrC,EAAOsC,GAE1B6W,GADAnZ,GAAUsC,EACW,CAACtC,QAAOsC,SADS,OA4CnC4B,oBAzCkB,SAACH,EAAU/D,EAAOsC,GAEvC6W,GADAnZ,GAAUsC,GAAUyB,EACC,CAACA,WAAU/D,QAAOsC,SADY,UA4CpD,yBAAKJ,UAAU,cACZqW,GACC,kBAAC,IAAMtW,SAAP,KACE,kBAAC,EAAD,CACEqC,OAAQA,EACRW,sBAAuBA,EACvB8I,cAAeA,EACfC,kBAAmBA,KAGrB,yBACE9L,UAAU,6BACVQ,MAAO,CAACkD,eAAgB,SAExB,6CACA,yBAAK1D,UAAU,QACb,yBACEA,UAAS,cAAyB,IAAhBuW,EAAoB,UAAY,IAClDhW,QAAS,WACPiW,EAAe,KAGjB,2CAEF,yBACExW,UAAS,cAAyB,IAAhBuW,EAAoB,UAAY,IAClDhW,QAAS,WACPiW,EAAe,KAGjB,uCAIJ,yBAAKxW,UAAU,eACb,8CACA,yBAAKA,UAAU,mBACb,2BAAO8X,QAAQ,mBAAf,WACA,2BACEvJ,KAAK,WACLwJ,QAASlB,EACT7W,UAAU,SACVgV,aAAW,yCACXgD,SAAU,SAACC,GACTnB,IAAmBD,OAIzB,yBACE7W,UAAS,6BACS,IAAhBuW,EAAoB,WAAa,KAGnC,2BAAOuB,QAAQ,sBAAf,eACA,2BACEvJ,KAAK,WACLwJ,QAAyB,IAAhBxB,GAAqBQ,GAC9B/W,UAAU,SACVkY,SAA0B,IAAhB3B,EACVyB,SAAU,SAACC,GACTjB,IAAsBD,UAOhC,kBAAC,EAAD,CACEjJ,WAAYA,EACZS,KAAMgI,EACNpI,KAAM0I,EACNxI,QAAS0I,QA0CnB,yBAAK/W,UAAU,QACb,yBAAKA,UAAU,aACb,yBACEA,UAAU,0BACVQ,MAAO,CAACkD,eAAgB,SAExB,uCACA,4BAAKhG,YAAO,IAAIhB,KAAQ,WAG1B,yBAAKsD,UAAU,mBAAmBQ,MAAO,CAACkD,eAAgB,SACvDiT,EACEza,OAAO,GACPkX,UACArR,KAAI,SAAUoW,EAAU/X,GAEvB,OADA+X,EAASC,OAASD,EAASC,OAAOC,QAAQ,KAAM,SAE9C,yBAAK1Y,IAAKS,EAAOJ,UAAU,UACzB,4BACGyB,YACC,IAAI/E,KAA0B,IAArByb,EAASG,WAClB,IAAI5b,MACF,QAEN,wBACE6b,wBAAyB,CACvBC,OAAQL,EAASC,cAM7B,4BAAQpY,UAAU,UAChB,kBAAC,IAAD,CAAMa,GAAG,iBACP,kBAAC,IAAD,MACA,0DAMR,yBAAKb,UAAU,kBC5LRyY,MA1Ef,SAAgB7a,GAAQ,IAAD,EACiBC,oBAAS,GAD1B,mBACd6a,EADc,KACDC,EADC,KAWrB,MAAiC,aAA7BhX,OAAOiX,SAASC,SAEhB,yBACE7Y,UAAU,SACVQ,MAAO,CACLkD,eAAgB,OAChBqP,WAAY,yBAGd,kBAAC,IAAD,CAAMlS,GAAG,KACP,yBACEb,UAAU,gBACV8Y,IAAI,yBACJC,IAAI,YACJvY,MAAO,CACLkD,eAAgB,OAChBqP,WAAY,2BAKlB,yBAAK/S,UAAU,eACb,yBAAKA,UAAS,sBAAkB0Y,EAAyB,GAAX,WAC3C9a,EAAMob,MAAMjX,KAAI,SAACkX,EAAMpR,GACtB,OACE,kBAAC,IAAD,CACEtH,QAAS,kBAAMoY,GAAe,IAC9B9X,GAAIoY,EAAKC,SACTvZ,IAAKkI,GAEL,0BArCMtB,EAuCF0S,EAAKC,SAvCGxV,EAwCRuV,EAAKE,wBAxCuB,CAC9CnZ,UAAU,YAAD,OAAc2B,OAAOiX,SAASC,WAAatS,EAAO,UAAY,IACvE/F,MAAO,CACLkD,eAAe,GAAD,OAAKA,EAAL,QAwCCuV,EAAKG,cA3CH,IAAC7S,EAAM7C,OAmDtB,yBAAK1D,UAAU,gBACb,yBACEA,UAAU,gBACVO,QAAS,WACPoY,GAAgBD,KAGlB,8BACA,8BACA,iCAMD,+B,uICrEPW,GAAO,KACLC,G,sLAGF,IAAMvX,EAAMiS,KAAKpW,MAAM2b,QAAQxX,IACzByX,GAAgB,IAAIC,cAAgBC,MAAM3X,GAC1C4X,GAAU,IAAIC,KAAEC,YAAaH,MAAM3X,GACzCyX,EAAcxS,GAAG,WAAW,SAASxK,GACnCmd,EAAQG,cAELtd,EAAKmd,QAAQ,KAChBN,GAAO7c,EAAKmd,QAAQ,GAAGI,QACrBJ,EAAQK,SAASJ,KAAEK,OAAOzd,EAAKmd,QAAQ,GAAGI,e,+BAO9C,OADDV,GAAQrF,KAAKpW,MAAMyb,OACX,S,GAlBUa,aAsBNC,gBAAYb,I,6BCfnBc,I,OAAYC,IAAZD,SAEFE,GAAO,IAAIV,KAAEW,KAAK,CACtBC,QAAQC,EAAQ,KAChBC,cAAeD,EAAQ,KACvBE,SAAS,CAAC,GAAG,MAIf,SAASC,GAAUC,GACf,OAAQA,EAAQ/T,WAAWgU,SAE/B,SAASC,GAAaF,GAClB,OAASA,EAAQ/T,WAAWgU,SAsBhB,SAASE,GAASpd,GAahC,IAEIqd,EACAC,EAHEC,EAASvd,EAAMwd,WAAWxd,EAAMyd,iBAAiB,CAAC,QAAQ,SAC1DC,EAAO1d,EAAM2d,OAAQ3d,EAAM2d,OAAO,EAAE,GAAG,GAAI,EAI3CC,EAAe5d,EAAMwd,WAAWxd,EAAMyd,gBAKxCG,IACJP,EAAS,IAAIQ,GAAI7B,KAAE8B,QAAQC,GAAS,CAAC9e,OAAQ+d,MAAcgB,aAAa,CAACJ,EAAa,GAAGA,EAAa,IAL5F,GAMVN,EAAU,IAAIO,GAAI7B,KAAE8B,QAAQC,GAAS,CAAC9e,OAAQke,MAAgBc,QAAQ,CAACL,EAAa,GAAGA,EAAa,IAL1F,GACE,MAOZ,IAAIM,EAAQ,CACV,KAAO,sBACP,KAAO,oBACP,SAAW,IAOb,GAAIb,EACF,IAAI,IAAIpT,EAAE,EAAGA,EAAIoT,EAAOpY,OAASgF,IAC7BiU,EAAMnV,SAASoV,KAAK,CAAC,KAAQ,UACT,SAAY,CAAC,KAAQ,QAAQ,YAAed,EAAOpT,GAAGmU,MAAMnB,QAAQoB,SAASC,aAC7E,WAAc,CAAE,KAAQjB,EAAOpT,GAAGmU,MAAMnB,QAAQ/T,WAAWG,KAC3C,KAAQgU,EAAOpT,GAAGmU,MAAMnB,QAAQ/T,WAAWqV,KAC3C,KAAQlB,EAAOpT,GAAGmU,MAAMnB,QAAQ/T,WAAWsV,KAC3C,MAASnB,EAAOpT,GAAGmU,MAAMnB,QAAQ/T,WAAWuV,MAC5C,QAAWpB,EAAOpT,GAAGmU,MAAMnB,QAAQ/T,WAAWwV,QAC9C,KAAe,IAAI1C,KAAEW,KAAK,CAChBC,QAAQC,MAAQ,KAAWQ,EAAOpT,GAAGmU,MAAMnB,QAAQ/T,WAAWyV,KAAK,QACnE7B,cAAeD,MAAQ,KAAWQ,EAAOpT,GAAGmU,MAAMnB,QAAQ/T,WAAWyV,KAAK,QAC1E5B,SAAS,CAAC,GAAG,MAEvB,GAAM9S,EAAE,KAOlD,GAAIqT,EACF,IAAI,IAAI7G,EAAE,EAAGA,EAAI6G,EAAQrY,OAASwR,IAC9ByH,EAAMnV,SAASoV,KAAK,CAAC,KAAQ,UACT,SAAY,CAAC,KAAQ,QAAQ,YAAeb,EAAQ7G,GAAG2H,MAAMnB,QAAQoB,SAASC,aAC9E,WAAc,CAAE,KAAQhB,EAAQ7G,GAAG2H,MAAMnB,QAAQ/T,WAAWG,KAC5C,KAAQiU,EAAQrT,GAAGmU,MAAMnB,QAAQ/T,WAAWqV,KAC5C,KAAQjB,EAAQrT,GAAGmU,MAAMnB,QAAQ/T,WAAWsV,KAC5C,MAASlB,EAAQrT,GAAGmU,MAAMnB,QAAQ/T,WAAWuV,MAC7C,QAAWnB,EAAQrT,GAAGmU,MAAMnB,QAAQ/T,WAAWwV,QAC/C,KAAe,IAAI1C,KAAEW,KAAK,CAChBC,QAAQC,MAAQ,KAAWS,EAAQrT,GAAGmU,MAAMnB,QAAQ/T,WAAWyV,KAAK,QACpE7B,cAAeD,MAAQ,KAAWS,EAAQrT,GAAGmU,MAAMnB,QAAQ/T,WAAWyV,KAAK,QAC3E5B,SAAS,CAAC,GAAG,MAEvB,GAAMtG,EAAE,OAMlD,OACI,6BAkBA,kBAAC,IAAD,CAAK8G,OAAQA,EAAQG,KAAMA,GACzB,kBAACjB,EAAA,EAAD,CAAemC,SAAS,YAEpB,kBAACC,GAAA,EAAD,CACEC,YAAY,0EACZC,IAAI,6EAGN,kBAAC,GAAD,CAAStD,OAAQzb,EAAMgf,YACrBhf,EAAMyd,iBACN,kBAACwB,GAAA,EAAD,CAASL,SAAU5e,EAAMyd,gBAAiBkB,KAAQjC,GAAM3a,IAAI,WACxD,kBAACmd,GAAA,EAAD,+BAIR,kBAAC1C,GAAD,CAASrC,SAAO,EAAC9Q,KAAO,sBACtB,kBAAC4S,GAAA,EAAD,KAGGiC,EAAMnV,SAAS5E,KAAI,SAAAjF,GAAC,OACnB,kBAAC+f,GAAA,EAAD,CACEld,IAAK7C,EAAEgK,WAAWgD,GAClB0S,SAAU,CAAC1f,EAAEmf,SAASC,YAAY,GAAIpf,EAAEmf,SAASC,YAAY,IAC7DK,KAAQzf,EAAEgK,WAAWyV,MAErB,kBAACO,GAAA,EAAD,KACE,6BACE,4BAAKhgB,EAAEgK,WAAWG,MAClB,2BACE,2CADF,IACuBnK,EAAEgK,WAAWqV,KAAK,6BACvC,uCAFF,IAEmBrf,EAAEgK,WAAWsV,KAAK,6BACnC,uCAHF,IAGmBtf,EAAEgK,WAAWwV,QAAQ,6BACtC,qCAJF,IAIiBxf,EAAEgK,WAAWuV,QAEzB,cCtK3B,IAoIeU,GAjIC,SAACnf,GAAS,IAAD,EACIC,mBAAS,IADb,gCAEkBA,mBAAS,OAF3B,mBAElBwd,EAFkB,KAEF2B,EAFE,OAGDnf,oBAAS,GAHR,mBAGlBof,EAHkB,KAGZC,EAHY,OAKUrf,mBAAS,MALnB,mBAKlBsf,EALkB,UAkFvB,OACA,yBAAKnd,UAAU,WACf,yBAAKQ,MAAO,CAACM,MAAM,OAAOsc,UAAU,WACpC,kDAECH,EAAM,uBAAGzc,MAAO,CAACM,MAAM,MAAMsc,UAAU,WAAjC,2BAAwE,KAI7E,yBAAKpd,UAAU,eACf,4BAAQA,UAAU,SACjBO,QAAS,SAAC0X,GAAD,OAtDa,SAACA,IACpB,EACJA,EAAMoF,iBACNC,UAAUC,YAAYC,oBAAmB,SAAAhB,GACzCQ,EAAmB,CAACR,EAASiB,OAAOC,SAASlB,EAASiB,OAAOE,YAC7DT,GAAS,MACP,SAAAD,GACE9V,QAAQC,IAAI6V,GACZC,GAAS,MA8CMU,CAAmB3F,KADtC,iBAqBA,6BACA,kBAAC+C,GAAD,CACE4B,UAAW,SAACpgB,GAAD,OAvCK,SAACA,IACf,EACR2K,QAAQC,IAAI,aAAa5K,EAAKqhB,IAAIrhB,EAAKshB,KACvCd,EAAmB,CAACxgB,EAAKqhB,IAAIrhB,EAAKshB,MAoCTC,CAAcvhB,IACjC6e,gBAAiBA,EACjBrb,UAAU,oBACVob,UAAW+B,EAAY,CAACA,EAAYU,IAAIV,EAAYW,KAAK,KACzDvC,OAAQ4B,GAAaA,EAAYa,QAAQ,KACzCC,MAAOd,EAAYA,EAAYc,MAAM,UC9D5BC,OAxEf,SAAetgB,GACb,OACE,yBAAKoC,UAAU,SACb,yBAAKA,UAAU,gBAAgBQ,MAAO,CAACkD,eAAgB,SACrD,2DACA,uBACE6J,KAAK,8DACLE,OAAO,SACP0Q,IAAI,uBAHN,gEASF,yBAAKne,UAAU,gBAAgBQ,MAAO,CAACkD,eAAgB,SACrD,oFACA,uBACE6J,KAAK,4BACLE,OAAO,SACP0Q,IAAI,uBAHN,8BASF,yBAAKne,UAAU,gBAAgBQ,MAAO,CAACkD,eAAgB,SACrD,wDACA,uBACE6J,KAAK,kEACLE,OAAO,SACP0Q,IAAI,uBAHN,oEASF,yBAAKne,UAAU,gBAAgBQ,MAAO,CAACkD,eAAgB,SACrD,mCACA,uBACE6J,KAAK,qDACLE,OAAO,SACP0Q,IAAI,uBAHN,uDASF,yBAAKne,UAAU,gBAAgBQ,MAAO,CAACkD,eAAgB,SACrD,6FACA,uBACE6J,KAAK,qCACLE,OAAO,SACP0Q,IAAI,uBAHN,uCASF,yBAAKne,UAAU,gBAAgBQ,MAAO,CAACkD,eAAgB,SACrD,uDACA,uBACE6J,KAAK,sCACLE,OAAO,SACP0Q,IAAI,uBAHN,0CChBOC,OA3Cf,SAAaxgB,GAAQ,IAAD,EACIC,mBAAS,IADb,mBACXwgB,EADW,KACNC,EADM,KAGlB5f,qBAAU,WACR6f,MACC,IAEH7f,qBAAU,WACRiD,OAAO6c,SAAS,EAAG,KAClB,IAEH,IAAMD,EAAU,WACdlH,IACGC,IAAI,kDACJmH,MAAK,SAAClH,GACL+G,EAAO/G,EAAS/a,KAAT,QAERkiB,OAAM,SAACzB,GACN9V,QAAQC,IAAI6V,OAIlB,OACE,yBAAKjd,UAAU,OACZqe,EAAItc,KAAI,SAACsc,EAAKje,GACb,OACE,yBACET,IAAKS,EACLJ,UAAU,eACVQ,MAAO,CAACkD,eAAe,GAAD,OAAK,GAAc,GAARtD,EAAX,OAEtB,wBAAIJ,UAAU,YAAYqe,EAAIM,UAC9B,wBACE3e,UAAU,SACVuY,wBAAyB,CAACC,OAAQ6F,EAAIO,gBCkBrCC,OApDf,SAAgBjhB,GAAQ,IAAD,EACWC,mBAAS,IADpB,mBACdihB,EADc,KACJC,EADI,OAESlhB,qBAFT,mBAEdmhB,EAFc,KAELC,EAFK,KAIrBvgB,qBAAU,WACR2Y,IACGC,IAAI,kDACJmH,MAAK,SAAClH,GACLwH,EAAYxH,EAAS/a,KAAK0iB,UAAY,IACtCD,EACE1H,EAAS/a,KAAK0iB,SACZ1W,KAAKC,MACHD,KAAK2W,UAAY5H,EAAS/a,KAAK0iB,SAASrc,OAAS,EAAI,GAAK,KAEzD,OAGR6b,OAAM,SAACxX,GACNC,QAAQC,IAAIF,QAEf,IAEH,IAAMkY,EAAiBvgB,uBACrB,SAACwT,EAAKI,GACJ,IAAMrS,EAAQoI,KAAK2W,UAAY1M,EAAMJ,GAAOA,EAC5C4M,EAAWH,EAAStW,KAAKC,MAAMrI,OAEjC,CAAC0e,IAUH,OAPApgB,qBAAU,WACR,IAAM2gB,EAAWC,aAAY,WAC3BF,EAAe,EAAGN,EAASjc,OAAS,KACnC,KACH,OAAO,kBAAM0c,cAAcF,MAC1B,CAACD,EAAgBN,IAEa,cAA7Bnd,OAAOiX,SAASC,SAEhB,yBACEtY,QAAS,kBAAM6e,EAAe,EAAGN,EAASjc,OAAS,IACnD7C,UAAU,kBACVQ,MAAO,CAACkD,eAAgB,SAExB,yBAAK1D,UAAU,WAAWgf,EAAUA,EAAQQ,OAAS,GAArD,UAIG,+B,oBCAIC,OAhDf,SAAsB7hB,GACpB,IAAM8hB,EAAO9hB,EAAM8hB,KAEnB,OACE,yBAAK1f,UAAU,oBAAoBQ,MAAO,CAACkD,eAAgB,OACxD1E,OAAOC,KAAKygB,GACVxjB,MAAM0B,EAAM8E,SAAW,EAAI,GAC3BX,KAAI,SAAC9F,EAAKmE,GACT,MAAY,iBAARnE,EAEA,kBAAC,IAAM8D,SAAP,CAAgBJ,IAAKS,GACnB,wBAAIJ,UAAU,YACXtC,YAAO,IAAIhB,KAAKT,GAAM,gBAAiB,IACvC,IAAMyjB,EAAKzjB,GAAK4G,OAAS,KAE5B,yBACElD,IAAKS,EACLJ,UAAS,cAASpC,EAAM8E,QAAU,UAAY,KAE7Cgd,EAAKzjB,GACHC,MAAM0B,EAAM8E,SAAW,GAAK,GAC5BX,KAAI,SAAC4d,EAASC,GACb,OACE,yBACEjgB,IAAKigB,EACL5f,UAAWpC,EAAMiiB,WAAWF,GAC5Bpf,QAAS,WACP3C,EAAMkiB,UAAS,GACfliB,EAAMmiB,WAAWJ,KAGnB,4BACG/hB,EAAMoiB,OAAN,WAAmBL,EAAQM,eAAkB,UASvD,UCyLJC,OAhOf,SAAkBtiB,GAAQ,IAAD,EACSC,mBAASD,EAAMuiB,UADxB,mBAChBA,EADgB,KACNC,EADM,OAEOviB,mBAASD,EAAMuiB,SAASjkB,OAAO,IAFtC,mBAEhByjB,EAFgB,KAEPI,EAFO,OAGCliB,mBAAS,IAHV,mBAGhB6hB,EAHgB,KAGVW,EAHU,OAIGxiB,oBAAS,GAJZ,mBAIhByiB,EAJgB,KAITR,EAJS,KAOvBne,OAAO4e,QAAU,SAAUtI,GACzB,IAAMqI,EAAQE,SAASC,eAAe,SAClCxI,EAAMxK,SAAW6S,GACnBR,GAAS,IAIbphB,qBAAU,WACR0hB,EAAYxiB,EAAMuiB,YACjB,CAACviB,EAAMuiB,WAEVzhB,qBAAU,WACJ4hB,EAAOE,SAASE,KAAKC,UAAUC,IAAI,cAClCJ,SAASE,KAAKC,UAAUnb,OAAO,gBACnC,CAAC8a,IAEJ,IAAMO,EAAchiB,uBAAY,SAACshB,GAE/B,IADA,IAAM/Y,EAAM,GACHS,EAAI,EAAGA,EAAIsY,EAAStd,OAAQgF,IAAK,CACxC,IAAM5L,EAAM,IAAIS,KACd6E,YAAM4e,EAAStY,GAAGiZ,cAAe,aAAc,IAAIpkB,OAErD,GAAMT,KAAOmL,EAIN,CACL,IAAM2Z,EAAO3Z,EAAInL,GACjB8kB,EAAKhF,KAAKoE,EAAStY,IACnBT,EAAInL,GAAO8kB,MAPM,CACjB,IAAMA,EAAO,GACbA,EAAKhF,KAAKoE,EAAStY,IACnBT,EAAInL,GAAO8kB,GAOfV,EAAQjZ,KACP,IA8EH,OA5EA1I,qBAAU,WACJyhB,EAAStd,QACXge,EAAYV,KAEb,CAACU,EAAaV,IAyEf,kBAAC,IAAMpgB,SAAP,KACE,kBAAC,GAAD,CACE2f,KAAMA,EACNI,SAAUA,EACVC,WAAYA,EACZC,OAAQpiB,EAAMoiB,OACdH,WAhEiB,SAACmB,GACtB,OAAQA,GACN,IAAK,UACH,OAAO,SAACrB,GACN,MAAM,gBAAN,OACqB,MAAnBA,EAAQsB,OACJ,WACmB,MAAnBtB,EAAQsB,OACR,UACA,GALN,YAMIrjB,EAAMoiB,OAAS,GAAK,aAE5B,IAAK,eACH,OAAO,SAACL,GACN,MAAM,gBAAN,OACiC,UAA/BA,EAAQuB,mBACJ,WAC+B,aAA/BvB,EAAQuB,mBACR,cACA,GALN,YAMItjB,EAAMoiB,OAAS,GAAK,aAE5B,IAAK,cACH,OAAO,SAACL,GACN,MAAM,gBAAN,OAC0B,UAAxBA,EAAQwB,YACJ,QACwB,YAAxBxB,EAAQwB,YACR,QACwB,cAAxBxB,EAAQwB,YACR,QACwB,mBAAxBxB,EAAQwB,YACR,QACwB,6BAAxBxB,EAAQwB,YACR,QACwB,aAAxBxB,EAAQwB,YACR,QACwB,gBAAxBxB,EAAQwB,YACR,QACwB,UAAxBxB,EAAQwB,YACR,QACwB,WAAxBxB,EAAQwB,YACR,QACA,GAnBN,YAoBIvjB,EAAMoiB,OAAS,GAAK,aAE5B,IAAK,MAIL,QACE,OAAO,SAACL,GACN,MAAM,gBAAN,OAAuB/hB,EAAMoiB,OAAS,GAAK,cAYjCoB,CAAexjB,EAAMojB,aAGlCV,GACC,yBAAKtgB,UAAU,QAAQ8J,GAAG,SACxB,yBACE9J,UAAS,wBAAmBsgB,EAAQ,WAAa,gBAEjD,yBAAKtgB,UAAU,gBACb,kBAAC,KAAD,CACEO,QAAS,WACPuf,GAAS,OAKf,yBAAK9f,UAAU,aACb,gCAAM2f,EAAQM,gBAGhB,yBAAKjgB,UAAU,QACb,8CACA,4BAAK2f,EAAQmB,cAAgBnB,EAAQmB,cAAgB,KAErD,+CACA,wBACE9gB,UAAU,kBACVO,QAAS,YAxGD,SAAC8gB,GACrB,GAAwB,KAApBA,EACJ,IACE,IAAMC,EAAeD,EAAgBnlB,MAAM,GAE3CikB,EAASpe,KAAI,SAAC4d,EAASvf,GACjBuf,EAAQM,gBAAkBqB,GAAcvB,EAAWJ,MAEzD,MAAOzY,GACPC,QAAQC,IAAIF,IAgGAqa,CAAc5B,EAAQ6B,uCAGvB7B,EAAQ6B,oCACL7B,EAAQ6B,oCACR,KAGN,6CACA,4BAAK7B,EAAQ8B,aAAe9B,EAAQ8B,aAAe,KAEnD,iDACA,4BACG9B,EAAQ+B,iBAAmB/B,EAAQ+B,iBAAmB,KAGzD,8CACA,4BAAK/B,EAAQgC,cAAgBhC,EAAQgC,cAAgB,KAErD,2CACA,4BAAKhC,EAAQwB,YAAcxB,EAAQwB,YAAc,KAEjD,mCACA,4BAAKxB,EAAQiC,WAAajC,EAAQiC,WAAa,KAE/C,sCACA,4BAAKjC,EAAQsB,OAAStB,EAAQsB,OAAS,KAEvC,oDACA,4BACGtB,EAAQkC,mBAAqBlC,EAAQkC,mBAAqB,KAG7D,oDACA,4BACGlC,EAAQuB,mBAAqBvB,EAAQuB,mBAAqB,MAI/D,yBAAKlhB,UAAU,SACb,qCACA,4BAAK2f,EAAQmC,QAGf,wCACA,yBAAK9hB,UAAU,QACb,uBAAGuN,KAAMoS,EAAQoC,QAAStU,OAAO,YAC9BkS,EAAQoC,UAIb,wCACA,yBAAK/hB,UAAU,QACb,uBAAGuN,KAAMoS,EAAQqC,QAASvU,OAAO,YAC9BkS,EAAQqC,UAIb,wCACA,yBAAKhiB,UAAU,QACb,uBAAGuN,KAAMoS,EAAQsC,QAASxU,OAAO,YAC9BkS,EAAQsC,c,oBCvNzB,SAASC,GAAgBtkB,GACvB,IAAKA,EAAMuiB,SACT,MAAO,GAET,IACE,IACMgC,EADS,IAAIC,UAAOpjB,OAAOC,KAAKrB,EAAMuiB,SAAS,KAClC5e,MAAM3D,EAAMuiB,UACzB3jB,EAAO,+BAAiC6lB,mBAAmBF,GACjE,OACE,uBAAG5U,KAAM/Q,EAAM8lB,SAAS,gBACtB,sCAGJ,MAAO5gB,GAEP,OADAyF,QAAQC,IAAI1F,GAEV,uBAAG6L,KAAK,KACN,uCA+BOgV,OAzBf,SAAuB3kB,GACrB,IAAKA,EAAMuiB,SACT,MAAO,GAGT,IAAMqC,EACJ,gCACAH,mBAAmBI,KAAKC,UAAU9kB,EAAMuiB,WAE1C,OACE,yBAAKngB,UAAU,yBAAyBQ,MAAO,CAACkD,eAAgB,SAC9D,4BAAQ1D,UAAU,UAChB,kBAAC,KAAD,MACA,kBAACkiB,GAAD,CAAiB/B,SAAUviB,EAAMuiB,YAEnC,4BAAQngB,UAAU,UAChB,kBAAC,KAAD,MACA,uBAAGuN,KAAMiV,EAAUF,SAAS,iBAA5B,WCpCR,SAASK,GAAevV,EAAKwV,GAC3B,IAAM3jB,EAAOD,OAAOC,KAAK2jB,GACzB,OAAOxV,EAAIvQ,QAAO,SAAC0W,GACjB,OAAOtU,EAAKlC,OAAM,SAAC4C,GACjB,OAAKijB,EAAQjjB,GAAKkD,QACX0Q,EAAE5T,KAASijB,EAAQjjB,SAqWjBkjB,OAhWf,SAAmBjlB,GAAQ,IAAD,EACMC,oBAAS,GADf,mBACjBwY,EADiB,KACRC,EADQ,OAEQzY,mBAAS,IAFjB,mBAEjBsiB,EAFiB,KAEPC,EAFO,OAGwBviB,mBAAS,IAHjC,mBAGjBilB,EAHiB,KAGCC,EAHD,OAIEllB,mBAAS,IAJX,mBAIjBof,EAJiB,KAIVC,EAJU,KAKjBrE,EAAYmK,cAAZnK,SALiB,EAMUhb,mBAAS,WANnB,mBAMjBmjB,EANiB,KAMNiC,EANM,OAOUplB,oBAAS,GAPnB,mBAOjBqlB,EAPiB,KAONC,EAPM,OAQMtlB,mBAAS,CACrC8jB,cAAe,GACfD,iBAAkB,GAClBD,aAAc,GACdX,cAAepjB,YAAO0lB,aAAQ,IAAI1mB,KAAQ,GAAI,gBAZxB,mBAQjBkmB,EARiB,KAQRS,EARQ,KAexB3kB,qBAAU,WACRiD,OAAO6c,SAAS,EAAG,KAClB,CAAC3F,IAEJna,qBAAU,WAAM,4CACd,4BAAAkE,EAAA,sEACyByU,IAAMC,IAC3B,8CAFJ,QACQC,EADR,QAIe/a,MACX4jB,EAAY7I,EAAS/a,KAAK8mB,SAASlQ,WACnCkD,GAAW,KAEX4G,EAAS,0DACT/V,QAAQC,IAAImQ,IAThB,4CADc,sBAcTlB,GAdU,WAAD,wBAeZkN,KAED,CAAClN,IAEJ,IAAMmN,EAAgB,SAACrb,EAAO9K,GAC5BgmB,GAAW,SAACjP,GAEV,IAAMqP,EAAU,eAAOrP,GAEvB,GADAqP,EAAWtb,GAAS9K,EACN,kBAAV8K,EAA2B,CAC7B,IAAMtG,EAAW2e,SAASC,eAAe,YACnCiD,EAAOlD,SAASC,eAAe,QAEnB5e,EAASrB,MAAMI,QAAnB,KAAVvD,EAAuC,OACb,SAC9BqmB,EAAKljB,MAAMI,QAAU,OAErBiB,EAAS8hB,cAAgB,EACzBD,EAAKC,cAAgB,EACrBF,EAAU,iBAAuB,GACjCA,EAAU,aAAmB,QACxB,GAAc,qBAAVtb,EAA8B,CACvC,IAAMub,EAAOlD,SAASC,eAAe,QAEnBiD,EAAKljB,MAAMI,QAAf,KAAVvD,EAAmC,OACb,SAE1BqmB,EAAKC,cAAgB,EACrBF,EAAU,aAAmB,GAE/B,OAAOA,MAQX,SAASG,EAAgBxW,EAAKzN,GAC5B,IAAMkkB,EAAY,IAAIC,IAAI1W,EAAIrL,KAAI,SAACwR,GAAD,OAAOA,EAAE5T,OAE3C,OADIkkB,EAAUE,KAAO,GAAGF,EAAUjD,IAAI,IAC1B,kBAARjhB,EAAgCiJ,MAAMC,KAAKgb,GACxCjb,MAAMC,KAAKgb,GAAW3kB,OAG/B,OAXAR,qBAAU,WACRqkB,EAAoBJ,GAAexC,EAAUyC,MAC5C,CAACzC,EAAUyC,IAUZ,yBAAK5iB,UAAU,cACZid,EAAQ,yBAAKjd,UAAU,sBAAsBid,GAAe,GAE7D,yBAAKjd,UAAU,mBAAmBQ,MAAO,CAACkD,eAAgB,SACxD,yBAAK1D,UAAU,gBACb,yBAAKA,UAAU,UACb,4BACEQ,MAAO,CAACkD,eAAgB,QACxBoG,GAAG,QACHkO,SAAU,SAACC,GACTuL,EAAc,gBAAiBvL,EAAMxK,OAAOpQ,SAG9C,4BAAQA,MAAM,GAAG6a,UAAQ,EAAC8L,UAAQ,GAAlC,gBAGCJ,EAAgBzD,EAAU,iBAAiBpe,KAC1C,SAACjE,EAAOsC,GACN,OACE,4BAAQT,IAAKS,EAAO/C,MAAOS,GACd,KAAVA,EAAe,MAAQA,QAQpC,yBAAKkC,UAAU,UACb,4BACEQ,MAAO,CAACkD,eAAgB,OAAQ9C,QAAS,QACzCkJ,GAAG,WACHkO,SAAU,SAACC,GACTuL,EAAc,mBAAoBvL,EAAMxK,OAAOpQ,SAGjD,4BAAQA,MAAM,GAAG6a,UAAQ,EAAC8L,UAAQ,GAAlC,mBAGCJ,EACCjB,GAAexC,EAAU,CACvBwB,cAAeiB,EAAQjB,gBAEzB,oBACA5f,KAAI,SAACF,EAAUzB,GACf,OACE,4BAAQT,IAAKS,EAAO/C,MAAOwE,GACX,KAAbA,EAAkB,MAAQA,QAOrC,yBAAK7B,UAAU,UACb,4BACEQ,MAAO,CAACkD,eAAgB,OAAQ9C,QAAS,QACzCkJ,GAAG,OACHkO,SAAU,SAACC,GACTuL,EAAc,eAAgBvL,EAAMxK,OAAOpQ,SAG7C,4BAAQA,MAAM,GAAG6a,UAAQ,EAAC8L,UAAQ,GAAlC,eAGCJ,EACCjB,GAAexC,EAAU,CACvBwB,cAAeiB,EAAQjB,cACvBD,iBAAkBkB,EAAQlB,mBAE5B,gBACA3f,KAAI,SAAC2hB,EAAMtjB,GACX,OACE,4BAAQT,IAAKS,EAAO/C,MAAOqmB,GACf,KAATA,EAAc,MAAQA,QAOjC,yBAAK1jB,UAAU,UACb,4BACEQ,MAAO,CAACkD,eAAgB,OAAQ9C,QAAS,QACzCkJ,GAAG,OACHkO,SAAU,SAACC,GACTuL,EAAc,eAAgBvL,EAAMxK,OAAOpQ,SAG7C,4BAAQA,MAAM,GAAG6a,UAAQ,EAAC8L,UAAQ,GAAlC,eAGCJ,EACCjB,GAAexC,EAAU,CACvBwB,cAAeiB,EAAQjB,cACvBD,iBAAkBkB,EAAQlB,mBAE5B,gBACA3f,KAAI,SAAC2hB,EAAMtjB,GACX,OACE,4BAAQT,IAAKS,EAAO/C,MAAOqmB,GACf,KAATA,EAAc,MAAQA,QAOjC,yBAAK1jB,UAAU,UACb,4BACEQ,MAAO,CAACkD,eAAgB,QACxBoG,GAAG,WACHkO,SAAU,SAACC,GACTuL,EAAc,gBAAiBvL,EAAMxK,OAAOpQ,SAG9C,4BAAQA,MAAM,GAAG6a,UAAQ,EAAC8L,UAAQ,GAAlC,cAGCJ,EACCjB,GAAexC,EAAU,CACvBwB,cAAeiB,EAAQjB,gBAEzB,iBACA5f,KAAI,SAAC9E,EAAMmD,GACX,OACE,4BAAQT,IAAKS,EAAO/C,MAAOJ,GACf,KAATA,EACG,MACAS,YACE6D,YAAMtE,EAAM,aAAc,IAAIP,MAC9B,uBA4BlB,yBAAKsD,UAAU,UACE,YAAdghB,GACC,yBAAKhhB,UAAU,eACb,yBAAKA,UAAU,qBACf,wBAAIA,UAAU,aAAd,UACA,yBAAKA,UAAU,mBACf,wBAAIA,UAAU,WAAd,QACA,yBAAKA,UAAU,WACf,wBAAIA,UAAU,IAAd,YAIW,iBAAdghB,GACC,yBAAKhhB,UAAU,eACb,yBAAKA,UAAU,oBACf,wBAAIA,UAAU,YAAd,SACA,yBAAKA,UAAU,uBACf,wBAAIA,UAAU,eAAd,YACA,yBAAKA,UAAU,WACf,wBAAIA,UAAU,IAAd,QAIW,gBAAdghB,GACC,yBAAKhhB,UAAU,2BACb,yBAAKA,UAAU,iBACf,wBAAIA,UAAU,SAAd,MACA,yBAAKA,UAAU,iBACf,wBAAIA,UAAU,SAAd,MACA,yBAAKA,UAAU,iBACf,wBAAIA,UAAU,SAAd,MACA,yBAAKA,UAAU,iBACf,wBAAIA,UAAU,eAAd,MACA,yBAAKA,UAAU,iBACf,wBAAIA,UAAU,SAAd,MACA,yBAAKA,UAAU,iBACf,wBAAIA,UAAU,SAAd,MACA,yBAAKA,UAAU,iBACf,wBAAIA,UAAU,SAAd,MACA,yBAAKA,UAAU,iBACf,wBAAIA,UAAU,SAAd,MACA,yBAAKA,UAAU,iBACf,wBAAIA,UAAU,SAAd,OAIJ,yBAAKA,UAAS,iBAAYghB,IACxB,4BACExgB,MAAO,CAACkD,eAAgB,QACxBsU,SAAU,SAACC,GACTgL,EAAahL,EAAMxK,OAAOpQ,SAG5B,4BAAQA,MAAM,GAAG6a,UAAQ,EAAC8L,UAAQ,GAAlC,eAGA,4BAAQ3mB,MAAM,WAAd,WACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,eAAd,mBAOR,yBAAK2C,UAAU,kBAAkBQ,MAAO,CAACkD,eAAgB,SACvD,6BACE,4CAGA,yBAAK1D,UAAU,aACb,sCACA,2BACEuO,KAAK,WACLwJ,QAASmL,EACTlL,SAAU,SAACC,GACTkL,GAAcD,IAEhBljB,UAAU,aAIhB,wBAAIA,UAAU,cAAd,6HAMF,yBAAKA,UAAU,oBAAoBQ,MAAO,CAACkD,eAAgB,OACzD,0SAME,6BACA,6BAPF,gCAYF,yBAAK1D,UAAU,qBACb,kBAAC,GAAD,CACEmgB,SAAU2C,EACV9B,UAAWA,EACXhB,OAAQkD,KAGZ,kBAAC,GAAD,CAAe/C,SAAUA,M,QC9QhB8D,OA5Ff,SAAqBrmB,GACnBsmB,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAASjW,KAAO,UAChC+V,KAASC,OAAOC,SAAS5H,SAAW,UACpC0H,KAASC,OAAOC,SAASE,gBAAkB,2BAC3CJ,KAASC,OAAOC,SAASG,eAAgB,EACzCL,KAASC,OAAOC,SAASI,YAAc,UACvCN,KAASC,OAAOC,SAASK,YAAc,EACvCP,KAASC,OAAOC,SAASM,eAAiB,OAC1CR,KAASC,OAAOC,SAASO,cAAgB,OACzCT,KAASC,OAAOC,SAASQ,aAAe,EACxCV,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAASjW,KAAO,UAChC+V,KAASC,OAAOC,SAAS5H,SAAW,UAEpC0H,KAASC,OAAOU,OAAOjkB,SAAU,EACjCsjB,KAASC,OAAOU,OAAOrI,SAAW,SAElC0H,KAASC,OAAOW,MAAMT,WAAY,EAElC,IAAIU,EAAO,EACPC,EAAS,EACTC,EAAU,EAEd,IAAKrnB,EAAMpB,MAA8B,IAAtBoB,EAAMpB,KAAKqG,OAC5B,OAAO,8BAGTjF,EAAMpB,KAAKkD,SAAQ,SAACigB,GACK,MAAnBA,EAAQsB,OACV8D,IAC4B,MAAnBpF,EAAQsB,OACjB+D,IAEAC,OAIJ,IAAMC,EAAY,CAChBC,SAAU,CACR,CACE3oB,KAAM,CAACuoB,EAAMC,EAAQC,GACrBX,gBAAiB,CAAC,OAAQ,OAAQ,QAClCnc,MAAO,SAGXgB,OAAQ,CAAC,OAAQ,SAAU,qBAGvBic,EAAe,CACnBC,OAAQ,CACNC,QAAS,CACPnR,KAAM,GACNoR,MAAO,GACPC,IAAK,EACLC,OAAQ,KAGZC,OAAQ,CAAC,YAAa,WAAY,aAAc,YAAa,YAC7DC,YAAY,EACZC,qBAAqB,EACrBxB,SAAU,CACRjW,KAAM,QACNqO,SAAU,UACVqJ,UAAW,CACT1d,MAAO,SAAU2d,EAAatpB,GAC5B,IAAMupB,EAAUvpB,EAAK2oB,SAASW,EAAYE,cAEpC/lB,EADO8lB,EAAQE,MAAMjnB,OAAOC,KAAK8mB,EAAQE,OAAO,IACnChmB,MACbimB,EAAeH,EAAQvpB,KAAKspB,EAAY1lB,OAI9C,OAAO8lB,EAAe,KAHH3e,YACf2e,EAAejmB,EAAS,KAAKuH,QAAQ,IAEC,MAE5ClG,MAAO,SAAUwkB,EAAatpB,GAC5B,OAAOA,EAAK2M,OAAO2c,EAAY,GAAG1lB,WAM1C,OACE,yBAAKJ,UAAU,iBACb,yBAAKA,UAAU,eAAepC,EAAM0D,OACpC,yBAAKtB,UAAU,0BACb,kBAAC,KAAD,CAAUxD,KAAM0oB,EAAWiB,QAASf,OC2C7BgB,OAjIf,SAAkBxoB,GAChBsmB,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAASjW,KAAO,UAChC+V,KAASC,OAAOC,SAAS5H,SAAW,UACpC0H,KAASC,OAAOC,SAASE,gBAAkB,2BAC3CJ,KAASC,OAAOC,SAASG,eAAgB,EACzCL,KAASC,OAAOC,SAASI,YAAc,UACvCN,KAASC,OAAOC,SAASK,YAAc,EACvCP,KAASC,OAAOC,SAASM,eAAiB,OAC1CR,KAASC,OAAOC,SAASO,cAAgB,OACzCT,KAASC,OAAOC,SAASQ,aAAe,EACxCV,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAASjW,KAAO,UAChC+V,KAASC,OAAOC,SAAS5H,SAAW,UAEpC0H,KAASC,OAAOU,OAAOjkB,SAAU,EACjCsjB,KAASC,OAAOU,OAAOrI,SAAW,SAElC0H,KAASC,OAAOW,MAAMT,WAAY,EAElC,IAAMgC,EAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACrCpB,EAAU,EACd,IAAKrnB,EAAMpB,MAA8B,IAAtBoB,EAAMpB,KAAKqG,OAC5B,OAAO,8BAGTjF,EAAMpB,KAAKkD,SAAQ,SAACigB,GAClB,GAAIA,EAAQiC,WAAY,CACtB,IAAM0E,EAAMhnB,SAASqgB,EAAQiC,YACzB0E,GAAO,GAAKA,GAAO,IACrBD,EAAK,KAEHC,EAAM,IAAMA,GAAO,IACrBD,EAAK,KAEHC,EAAM,IAAMA,GAAO,IACrBD,EAAK,KAEHC,EAAM,IAAMA,GAAO,IACrBD,EAAK,KAEHC,EAAM,IAAMA,GAAO,IACrBD,EAAK,KAEHC,EAAM,IAAMA,GAAO,IACrBD,EAAK,KAEHC,EAAM,IAAMA,GAAO,IACrBD,EAAK,KAEHC,EAAM,IAAMA,GAAO,IACrBD,EAAK,KAEHC,EAAM,IAAMA,GAAO,IACrBD,EAAK,KAEHC,EAAM,IAAMA,GAAO,KACrBD,EAAK,UAGPpB,OAIJ,IAAMC,EAAY,CAChB/b,OAAQ,CACN,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UAEFgc,SAAU,CACR,CACE3oB,KAAM6pB,EACNle,MAAO,QACPmc,gBAAiB,aAqCvB,OACE,yBAAKtkB,UAAU,iBACb,yBAAKA,UAAU,eAAepC,EAAM0D,OACpC,yBAAKtB,UAAU,0BACb,kBAAC,KAAD,CAAKxD,KAAM0oB,EAAWiB,QApCP,CACnBT,OAAQ,CAAC,YAAa,WAAY,aAAc,YAAa,YAC7DC,YAAY,EACZC,qBAAqB,EACrBf,OAAQ,CACNjkB,SAAS,GAEXykB,OAAQ,CACNC,QAAS,CACPnR,KAAM,GACNoR,MAAO,GACPC,IAAK,GACLC,OAAQ,IAGZc,OAAQ,CACNC,MAAO,CACL,CACEC,SAAS,EACTC,UAAW,CACT5lB,MAAO,sBAIb6lB,MAAO,CACL,CACEF,SAAS,SAYb,yBAAKzmB,UAAU,cAAf,yBAAmDilB,EAAnD,eCFS2B,OA1Hf,SAA0BhpB,GAoBxB,GAnBAsmB,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAASjW,KAAO,UAChC+V,KAASC,OAAOC,SAAS5H,SAAW,UACpC0H,KAASC,OAAOC,SAASE,gBAAkB,2BAC3CJ,KAASC,OAAOC,SAASG,eAAgB,EACzCL,KAASC,OAAOC,SAASI,YAAc,UACvCN,KAASC,OAAOC,SAASK,YAAc,EACvCP,KAASC,OAAOC,SAASM,eAAiB,OAC1CR,KAASC,OAAOC,SAASO,cAAgB,OACzCT,KAASC,OAAOC,SAASQ,aAAe,EACxCV,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAASjW,KAAO,UAChC+V,KAASC,OAAOC,SAAS5H,SAAW,UAEpC0H,KAASC,OAAOU,OAAOjkB,SAAU,EACjCsjB,KAASC,OAAOU,OAAOrI,SAAW,SAElC0H,KAASC,OAAOW,MAAMT,WAAY,GAE7BzmB,EAAMpB,MAA8B,IAAtBoB,EAAMpB,KAAKqG,OAC5B,OAAO,8BAGT,IAAMse,EAAc,GAChB8D,EAAU,EAEdrnB,EAAMpB,KAAKkD,SAAQ,SAACigB,GACbA,EAAQwB,aAIRA,EAAY0F,eAAelH,EAAQwB,YAAYrf,iBAClDqf,EAAYxB,EAAQwB,YAAYrf,eAAiB,GAEnDqf,EAAYxB,EAAQwB,YAAYrf,kBAN9BmjB,OAUJ,IAAMzoB,EAAO,GACP2M,EAAS,GAEfnK,OAAOC,KAAKkiB,GAAazhB,SAAQ,SAAC8E,GAC5BA,IACF2E,EAAO4S,KAAKvX,EAAQuD,eACpBvL,EAAKuf,KAAKoF,EAAY3c,QAI1B,IAAM0gB,EAAY,CAChBC,SAAU,CACR,CACE3oB,KAAMA,EACN8nB,gBAAiB,CACf,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,aAINnb,OAAQA,GAGJic,EAAe,CACnBC,OAAQ,CACNC,QAAS,CACPnR,KAAM,GACNoR,MAAO,GACPC,IAAK,EACLC,OAAQ,KAGZZ,OAAQ,CACNjkB,SAAS,GAEX+kB,YAAY,EACZC,qBAAqB,EACrBxB,SAAU,CACRjW,KAAM,QACNuX,OAAQ,CAAC,YAAa,WAAY,aAAc,YAAa,YAC7DG,UAAW,CACT1d,MAAO,SAAU2d,EAAatpB,GAC5B,IAAMupB,EAAUvpB,EAAK2oB,SAASW,EAAYE,cAEpC/lB,EADO8lB,EAAQE,MAAMjnB,OAAOC,KAAK8mB,EAAQE,OAAO,IACnChmB,MACbimB,EAAeH,EAAQvpB,KAAKspB,EAAY1lB,OAI9C,OAAO8lB,EAAe,KAHH3e,YACf2e,EAAejmB,EAAS,KAAKuH,QAAQ,IAEC,MAE5ClG,MAAO,SAAUwkB,EAAatpB,GAC5B,OAAOA,EAAK2M,OAAO2c,EAAY,GAAG1lB,WAM1C,OACE,yBAAKJ,UAAU,iBACb,yBAAKA,UAAU,eAAepC,EAAM0D,OACpC,yBAAKtB,UAAU,0BACb,kBAAC,KAAD,CAAUxD,KAAM0oB,EAAWiB,QAASf,KAEtC,yBAAKplB,UAAU,cAAf,yBAAmDilB,EAAnD,e,oBCoES6B,OAxLf,SAAwBlpB,GACtB,IAAMmpB,EAAQ,GAuBd,GArBA7C,KAASC,OAAO6C,SAASC,KAAKC,MAAO,EAErChD,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAASjW,KAAO,UAChC+V,KAASC,OAAOC,SAAS5H,SAAW,UACpC0H,KAASC,OAAOC,SAASE,gBAAkB,2BAC3CJ,KAASC,OAAOC,SAASG,eAAgB,EACzCL,KAASC,OAAOC,SAASI,YAAc,UACvCN,KAASC,OAAOC,SAASK,YAAc,EACvCP,KAASC,OAAOC,SAASM,eAAiB,OAC1CR,KAASC,OAAOC,SAASO,cAAgB,OACzCT,KAASC,OAAOC,SAASQ,aAAe,EACxCV,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAASjW,KAAO,UAChC+V,KAASC,OAAOC,SAAS5H,SAAW,UAEpC0H,KAASC,OAAOU,OAAOjkB,SAAU,EACjCsjB,KAASC,OAAOU,OAAOrI,SAAW,SAElC0H,KAASC,OAAOW,MAAMT,WAAY,GAE7BzmB,EAAMpB,MAA8B,IAAtBoB,EAAMpB,KAAKqG,OAC5B,OAAO,8BAGT,IAAMskB,EAAa,IAAIC,IAEvBxpB,EAAMpB,KAAKkD,SAAQ,SAAClD,EAAM4D,GACJ,cAAhB5D,EAAK6qB,QAITroB,OAAOC,KAAKzC,GAAMkD,SAAQ,SAACC,GAKzB,GAJY,SAARA,GACFonB,EAAMhL,KAAKuL,KAAO9qB,EAAKS,KAAKsqB,OAAQ,WAG1B,WAAR5nB,GAA4B,SAARA,EAAxB,CAIKwnB,EAAWK,IAAI7nB,IAClBwnB,EAAWM,IAAI9nB,EAAK,IAEtB,IAAM+nB,EACJP,EAAW7P,IAAI3X,GAAKkD,OAAS,EACzBvD,SAAS6nB,EAAW7P,IAAI3X,GAAKwnB,EAAW7P,IAAI3X,GAAKkD,OAAS,IAC1D,EACAqjB,EAA6B,KAAd1pB,EAAKmD,GAAcL,SAAS9C,EAAKmD,IAAQ,EAC9DwnB,EAAW7P,IAAI3X,GAAKoc,KAAK2L,EAAgBxB,UAI7C,IAAMyB,EAAY,IAAIP,IACpB,YAAID,EAAW9X,WAAWnQ,MAAK,SAAC0D,EAAGsK,GACjC,OAAOtK,EAAE,GAAGA,EAAE,GAAGC,OAAS,GAAKqK,EAAE,GAAGA,EAAE,GAAGrK,OAAS,GAAK,GAAK,MAI1DsP,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGE/R,EAAQ,EACN+kB,EAAW,GACjBwC,EAAUjoB,SAAQ,SAAClD,EAAMmD,GzB/BC,IAACioB,EyBgCb,OAARjoB,IAIAS,GAAS,KAIb+kB,EAASpJ,KAAK,CACZ0I,YAAa,IACbjoB,KAAM2qB,EAAW7P,IAAI3X,GACrBkoB,eAAgB,QAChBC,qBAAsB3V,EAAO/R,GAC7B+H,OzB7CuByf,EyB6CHjoB,EzB5CjBlG,EAAWmuB,EAAK7f,gByB6CnByc,YAAarS,EAAO/R,GACpB2nB,iBAAkB,KAGpB3nB,SAGF,IAAM2lB,EAAU,CACd5c,OAAQ4d,EACR5B,SAAUA,GAGNgB,EAAU,CACdR,YAAY,EACZD,OAAQ,CAAC,QAAS,YAAa,WAAY,aAAc,aACzDE,qBAAqB,EACrBxB,SAAU,CACRjW,KAAM,SAER6Y,SAAU,CACRgB,MAAO,CACLzM,OAAQ,GAEV0L,KAAM,CACJgB,QAAS,IAGb5C,OAAQ,CACNC,QAAS,CACPnR,KAAM,GACNoR,MAAO,GACPC,IAAK,EACLC,OAAQ,KAGZc,OAAQ,CACNI,MAAO,CACL,CACEpY,KAAM,SACNoD,MAAO,CACLuW,aAAa,EACbzV,SAAK3F,EACLqb,UAAW,GAEbC,WAAY,CACVxnB,SAAS,EACTynB,YAAa,iBAInB7B,MAAO,CACL,CACEjY,KAAM,OACNlS,KAAM,CACJisB,KAAM,MACNC,cAAe,SACfC,SAAU,EACVC,eAAgB,CACdC,YAAa,SACbC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACN5sB,IAAK,SACL6sB,KAAM,SACN3sB,MAAO,SACP4sB,QAAS,SACT3sB,KAAM,WAGVsqB,UAAW,CACT5lB,MAAO,wBAOjB,OACE,yBAAKd,UAAU,iBACb,yBAAKA,UAAU,eAAepC,EAAM0D,OACpC,yBAAKtB,UAAU,iBACb,kBAAC,KAAD,CAAMxD,KAAMupB,EAASI,QAASA,OCCvB6C,OAnLf,SAA6BprB,GAC3B,IAAMmpB,EAAQ,GACRxnB,EAAY,GACZ0B,EAAY,GACZgoB,EAAW,GAqBjB,GAnBA/E,KAASC,OAAO6C,SAASC,KAAKC,MAAO,EACrChD,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAASjW,KAAO,UAChC+V,KAASC,OAAOC,SAAS5H,SAAW,UACpC0H,KAASC,OAAOC,SAASE,gBAAkB,2BAC3CJ,KAASC,OAAOC,SAASG,eAAgB,EACzCL,KAASC,OAAOC,SAASI,YAAc,UACvCN,KAASC,OAAOC,SAASK,YAAc,EACvCP,KAASC,OAAOC,SAASM,eAAiB,OAC1CR,KAASC,OAAOC,SAASO,cAAgB,OACzCT,KAASC,OAAOC,SAASQ,aAAe,EACxCV,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAASjW,KAAO,UAChC+V,KAASC,OAAOC,SAAS5H,SAAW,UACpC0H,KAASC,OAAOU,OAAOjkB,SAAU,EACjCsjB,KAASC,OAAOU,OAAOrI,SAAW,SAElC0H,KAASC,OAAOW,MAAMT,WAAY,GAE7BzmB,EAAMkQ,YAA0C,IAA5BlQ,EAAMkQ,WAAWjL,OACxC,OAAO,8BAGTjF,EAAMkQ,WAAWpO,SAAQ,SAAClD,EAAM4D,GAC1BA,GAAS,KACX2mB,EAAMhL,KAAKuL,KAAO9qB,EAAKS,KAAKsqB,OAAQ,WACpChoB,EAAUwc,KAAKvf,EAAK6T,gBACpBpP,EAAU8a,KAAKvf,EAAK8T,gBACpB2Y,EAASlN,KAAKvf,EAAK+T,mBAIvB,IAAMwV,EAAU,CACd5c,OAAQ4d,EACR5B,SAAU,CACR,CACEV,YAAa,EACbjoB,KAAM+C,EACNsoB,eAAgB,QAChBC,qBAAsB,UACtB3f,MAAO,YACPqc,YAAa,UACbuD,iBAAkB,GAEpB,CACEtD,YAAa,EACbjoB,KAAMyE,EACN4mB,eAAgB,QAChBC,qBAAsB,UACtB3f,MAAO,YACPqc,YAAa,UACbuD,iBAAkB,GAEpB,CACEtD,YAAa,EACbjoB,KAAMysB,EACNpB,eAAgB,QAChBC,qBAAsB,UACtB3f,MAAO,WACPqc,YAAa,UACbuD,iBAAkB,KAKlB5B,EAAU,CACdR,YAAY,EACZD,OAAQ,CACN,QACA,YACA,WACA,aACA,YACA,YAEFE,qBAAqB,EACrBxB,SAAU,CACRjW,KAAM,SAER6Y,SAAU,CACRgB,MAAO,CACLzM,OAAQ,GAEV0L,KAAM,CACJgB,QAAS,KAGb5C,OAAQ,CACNC,QAAS,CACPnR,KAAM,GACNoR,MAAO,GACPC,IAAK,EACLC,OAAQ,KAGZc,OAAQ,CACNI,MAAO,CACL,CACEpY,KAAM,SACNoD,MAAO,CACLuW,aAAa,EACbzV,SAAK3F,EACLqb,UAAW,GAEbC,WAAY,CACVxnB,SAAS,EACTynB,YAAa,iBAInB7B,MAAO,CACL,CACEjY,KAAM,OACNlS,KAAM,CACJisB,KAAM,MACNC,cAAe,SACfC,SAAU,EACVC,eAAgB,CACdC,YAAa,SACbC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACN5sB,IAAK,SACL6sB,KAAM,SACN3sB,MAAO,SACP4sB,QAAS,SACT3sB,KAAM,WAGVsqB,UAAW,CACT5lB,MAAO,wBAiCjB,OA1BIlD,EAAMuQ,OACRgY,EAAQI,OAAOI,MAAQ,CACrB,CACEpY,KAAM,cACNoD,MAAO,CACLU,IAAK,EACLI,IAAK,IACLyW,SAAU,SAAU7rB,EAAO+C,EAAO+oB,GAChC,OAAc,MAAV9rB,EAAwB,QACd,MAAVA,EAAuB,OACb,MAAVA,EAAsB,MACZ,MAAVA,EAAsB,MACZ,KAAVA,EAAqB,KACX,IAAVA,EAAoB,IACV,IAAVA,EAAoB,IACjB,OAGX+qB,WAAY,CACVxnB,SAAS,EACTynB,YAAa,kBAOnB,yBAAKroB,UAAU,iBACb,yBAAKA,UAAU,eAAepC,EAAM0D,OACpC,yBAAKtB,UAAU,iBACb,kBAAC,KAAD,CAAMxD,KAAMupB,EAASI,QAASA,OCpEvBiD,OAzGf,SAA6BxrB,GAC3B,IAAMmpB,EAAQ,GACRxnB,EAAY,GACZ0B,EAAY,GACZgoB,EAAW,GAoBjB,GAlBA/E,KAASC,OAAO6C,SAASC,KAAKC,MAAO,EACrChD,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAASjW,KAAO,UAChC+V,KAASC,OAAOC,SAAS5H,SAAW,UACpC0H,KAASC,OAAOC,SAASE,gBAAkB,2BAC3CJ,KAASC,OAAOC,SAASG,eAAgB,EACzCL,KAASC,OAAOC,SAASI,YAAc,UACvCN,KAASC,OAAOC,SAASK,YAAc,EACvCP,KAASC,OAAOC,SAASM,eAAiB,OAC1CR,KAASC,OAAOC,SAASO,cAAgB,OACzCT,KAASC,OAAOC,SAASQ,aAAe,EACxCV,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAASjW,KAAO,UAChC+V,KAASC,OAAOC,SAAS5H,SAAW,UACpC0H,KAASC,OAAOU,OAAOjkB,SAAU,EACjCsjB,KAASC,OAAOU,OAAOrI,SAAW,SAClC0H,KAASC,OAAOW,MAAMT,WAAY,GAE7BzmB,EAAMkQ,YAA0C,IAA5BlQ,EAAMkQ,WAAWjL,OACxC,OAAO,8BAGTjF,EAAMkQ,WAAWpO,SAAQ,SAAClD,EAAM4D,GAC1BA,GAAS,KACX2mB,EAAMhL,KAAKuL,KAAO9qB,EAAKS,KAAKsqB,OAAQ,UAAU7pB,OAAO,WACrD6B,EAAUwc,KACRvf,EAAKgU,eAAiBhU,EAAKiU,eAAiBjU,EAAKkU,eAEnDzP,EAAU8a,KAAKvf,EAAKiU,gBACpBwY,EAASlN,KAAKvf,EAAKkU,mBAIvB,IAAM2Y,EAAa,CACjBlgB,OAAQ4d,EACR5B,SAAU,CACR,CACE3oB,KAAMyE,EACNkH,MAAO,YACPmc,gBAAiB,WAEnB,CACE9nB,KAAMysB,EACN9gB,MAAO,WACPmc,gBAAiB,WAEnB,CACE9nB,KAAM+C,EACN4I,MAAO,SACPmc,gBAAiB,aAwCvB,OACE,yBAAKtkB,UAAU,iBACb,yBAAKA,UAAU,eAAepC,EAAM0D,OACpC,yBAAKtB,UAAU,iBACb,kBAAC,KAAD,CAAKxD,KAAM6sB,EAAYlD,QAvCb,CACdR,YAAY,EACZvB,SAAU,CACRjW,KAAM,SAERuX,OAAQ,CAAC,YAAa,WAAY,aAAc,YAAa,YAC7DE,qBAAqB,EACrBf,OAAQ,CACNjkB,SAAS,GAEXykB,OAAQ,CACNC,QAAS,CACPnR,KAAM,GACNoR,MAAO,GACPC,IAAK,GACLC,OAAQ,KAGZc,OAAQ,CACNC,MAAO,CACL,CACEC,SAAS,EACTC,UAAW,CACT5lB,MAAO,sBAIb6lB,MAAO,CACL,CACEF,SAAS,WCZJ6C,OAxEf,SAAkB1rB,GAAQ,IAAD,EACOC,oBAAS,GADhB,mBAChBwY,EADgB,KACPC,EADO,OAEazY,mBAAS,IAFtB,mBAEhBiQ,EAFgB,KAEJC,EAFI,OAGOlQ,mBAAS,IAHhB,mBAGhB0rB,EAHgB,KAGPC,EAHO,OAIyB3rB,mBAAS,IAJlC,mBAIhB4rB,EAJgB,KAIEC,EAJF,KAMvBhrB,qBAAU,YACQ,IAAZ2X,GACFa,MAED,CAACb,IAEJ,IAAMa,EAAS,uCAAG,oCAAAtU,EAAA,+EAMJuU,QAAQC,IAAI,CACpBC,IAAMC,IAAI,0CACVD,IAAMC,IAAI,8CACVD,IAAMC,IAAI,oDATE,mCAGZC,EAHY,KAIZoS,EAJY,KAKZC,EALY,KAWd7b,EAAcwJ,EAAS/a,KAAKob,mBAC5B8R,EAAoBE,EAAmBptB,KAAKqtB,cAC5CL,EAAWG,EAAgBntB,KAAK8mB,UAChChN,GAAW,GAdG,kDAgBdnP,QAAQC,IAAR,MAhBc,0DAAH,qDAoBf,OACE,yBAAKpH,UAAU,mBACb,6BAASA,UAAU,SACjB,yBAAKA,UAAU,gBAAgBQ,MAAO,CAACkD,eAAgB,SACrD,kBAAC,GAAD,CACEpC,MAAM,sBACNwM,WAAYA,KAIhB,yBAAK9N,UAAU,gBAAgBQ,MAAO,CAACkD,eAAgB,SACrD,kBAAC,GAAD,CACEpC,MAAM,sBACNwM,WAAYA,KAIhB,yBAAK9N,UAAU,gBAAgBQ,MAAO,CAACkD,eAAgB,SACrD,kBAAC,GAAD,CACEpC,MAAM,uBACN9E,KAAMitB,KAIV,yBAAKzpB,UAAU,gBAAgBQ,MAAO,CAACkD,eAAgB,SACrD,kBAAC,GAAD,CAAapC,MAAM,iBAAiB9E,KAAM+sB,KAG5C,yBAAKvpB,UAAU,gBAAgBQ,MAAO,CAACkD,eAAgB,SACrD,kBAAC,GAAD,CAAUpC,MAAM,cAAc9E,KAAM+sB,KAGtC,yBAAKvpB,UAAU,gBAAgBQ,MAAO,CAACkD,eAAgB,SACrD,kBAAC,GAAD,CAAkBpC,MAAM,sBAAsB9E,KAAM+sB,Q,gFC/DxDO,GAAwBC,cAAW,SAACC,GAAD,MAAY,CACnDC,QAAS,CACPrpB,QAAS,OACTspB,cAAe,MACfC,eAAgB,iBAElBC,KAAM,CACJ9F,gBAAiB,YACjBve,OAAQ,YAINskB,GAAiBN,cAAW,SAACC,GAAD,MAAY,CAC5CI,KAAM,CACJvkB,MAAO,oBACPykB,aAAc,cAGZC,GAAoBR,cAAW,SAACC,GAAD,MAAY,CAC/CQ,QAAS,CACPC,WAAY,SACZ/pB,WAAY,IACZgqB,UAAW,SACXC,SAAU,OACVC,cAAe,aAEjBC,UAAW,CACTJ,WAAY,SACZ/pB,WAAY,IACZgqB,UAAW,SACXC,SAAU,YAKRG,GAAmB,SAACC,GACxB,IASMC,EALKD,EAAa1S,QAJT,yBAIyB,yCAC1BA,QAHE,0BAKd,6EAEYA,QAND,yBAQX,2EAEF,OACE,yBACErY,UAAU,gBACVuY,wBAAyB,CACvBC,OAAQwS,MAMVC,GAAgB,SAAC,GAAqC,IAA7BF,EAA4B,EAAnC1tB,MAAmC,KAAd6tB,SAEjBC,IAAMttB,SAASktB,IAFgB,mBAElD1tB,EAFkD,KAE3C+tB,EAF2C,KAGnDC,EAAS,yBAETC,EAAU,0BACVC,EAAO,yBAiBb,OAdAJ,IAAMzsB,WAAU,WACd,IAKMssB,EALKD,EAAa1S,QAAQgT,EAAQ,yCAC1BhT,QACZiT,EACA,6EAEYjT,QACZkT,EACA,2EAGFH,EAASJ,KACR,CAACD,EAAcM,EAAQE,EAAMD,IAG9B,yBACEtrB,UAAU,gBACVuY,wBAAyB,CACvBC,OAAQnb,MAuTDmuB,OAjTf,YAAoD,IAA5BC,EAA2B,EAA3BA,QAASjvB,EAAkB,EAAlBA,KAAMkvB,EAAY,EAAZA,UAC/BC,EAAuB7B,KACvB8B,EAAevB,KACfwB,EAAsBtB,KACtBuB,EAAgBX,IAAM1e,SAC1B,iBAAO,CACLsf,KAAMd,MAER,IAR+C,EA2B7Ce,oBACF,CACEP,UACAjvB,OACAsvB,gBACAG,aAAc,CAACC,UAAW,EAAGC,SAAU,IAEzCC,kBArBAC,EAb+C,EAa/CA,cACAC,EAd+C,EAc/CA,kBACAC,EAf+C,EAe/CA,aACAC,EAhB+C,EAgB/CA,WACAvT,EAjB+C,EAiB/CA,KACAwT,EAlB+C,EAkB/CA,gBACAC,EAnB+C,EAmB/CA,YACAC,EApB+C,EAoB/CA,YACAC,EArB+C,EAqB/CA,UACAC,EAtB+C,EAsB/CA,SACAC,EAvB+C,EAuB/CA,SACAC,EAxB+C,EAwB/CA,aACAC,EAzB+C,EAyB/CA,YAzB+C,IA0B/ClvB,MAAQouB,EA1BuC,EA0BvCA,UAAWC,EA1B4B,EA0B5BA,SAYrB,OAAkB,IAAdT,EAEA,yBAAK1rB,UAAU,oBACb,0BAAWqsB,IACT,+BACGE,EAAaxqB,KAAI,SAACkrB,GAAD,OAChB,sCAAIttB,IAAKstB,EAAYnjB,IAAQmjB,EAAYC,uBACtCD,EAAYE,QAAQprB,KAAI,SAAClC,GAAD,OACvB,sCAAIF,IAAKE,EAAOiK,IAAQjK,EAAOutB,kBAC5BvtB,EAAOwtB,OAAO,mBAMzB,0BAAWf,IACRrT,EAAKlX,KAAI,SAACurB,EAAKzlB,GAEd,OADA2kB,EAAWc,GAET,sCAAI3tB,IAAK2tB,EAAIxjB,IAAQwjB,EAAIC,eACtBD,EAAIplB,MAAMnG,KAAI,SAACyrB,GACd,OACE,sCAAI7tB,IAAK6tB,EAAK1jB,IAAQ0jB,EAAKC,gBACxBD,EAAKH,OAAO,OAAQ,CAACnC,UAAU,cAShD,yBAAKlrB,UAAU,cACb,yBAAKA,UAAU,oBACb,4BACEA,UAAU,mBACVO,QAAS,kBAAMssB,EAAS,IACxB3U,UAAWuU,GAEV,MACO,IACV,4BACEzsB,UAAU,mBACVO,QAAS,kBAAMwsB,KACf7U,UAAWuU,GAEV,KACO,IACV,4BACEzsB,UAAU,mBACVO,QAAS,kBAAMusB,KACf5U,UAAWwU,GAEV,KACO,IACV,4BACE1sB,UAAU,mBACVO,QAAS,kBAAMssB,EAASD,EAAY,IACpC1U,UAAWwU,GAEV,MACO,KAEZ,wBAAIlsB,MAAO,CAACM,MAAO,cAAnB,OACO,IACL,gCACGorB,EAAY,EADf,OACsBS,EAAY9pB,QACxB,KAKZ,2BACE0L,KAAK,SACLmf,aAAcxB,EAAY,EAC1BlU,SAAU,SAACtW,GACT,IAAMuX,EAAOvX,EAAE+L,OAAOpQ,MAAQH,OAAOwE,EAAE+L,OAAOpQ,OAAS,EAAI,EAC3DwvB,EAAS5T,MAIb,4BACEjZ,UAAU,SACV3C,MAAO8uB,EACPnU,SAAU,SAACtW,GACTsrB,EAAY9vB,OAAOwE,EAAE+L,OAAOpQ,UAG7B,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAI0E,KAAI,SAACoqB,GAAD,OAC3B,4BAAQxsB,IAAKwsB,EAAU9uB,MAAO8uB,GAA9B,QACQA,SAShB,yBAAKnsB,UAAU,sBACZiZ,EAAKlX,KAAI,SAACurB,EAAKzlB,GAEd,OADA2kB,EAAWc,GAET,kBAACK,GAAA,EAAD,CAAgBhuB,IAAK2tB,EAAIxjB,GAAI8jB,QAAS,CAACxD,KAAMwB,EAAaxB,OACxD,kBAACyD,GAAA,EAAD,CACED,QAAS,CACP3D,QAAS0B,EAAqB1B,QAC9BG,KAAMuB,EAAqBvB,OAQ7B,yBACEpqB,UAAU,UACVQ,MAAO,CACLstB,SAAU,QACV1Q,UAAW,QACXtc,MAAO,cAGT,4BAAKwsB,EAAInE,OAAJ,wBAEP,yBACEnpB,UAAU,cACVQ,MAAO,CAACstB,SAAU,UAAW1Q,UAAW,QAExC,4BAAKkQ,EAAInE,OAAJ,YAIT,kBAAC4E,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAMC,gBAAgB,EAAMC,OAAO,GACjC,kBAACC,GAAA,EAAD,CAAUC,WAAW,aAAaF,OAAO,EAAMG,SAAS,GACtD,kBAACC,GAAA,EAAD,CACE9D,QAAQ,oBACRK,UAAWyC,EAAInE,OAAJ,sBACXyE,QAAS,CACPpD,QAASqB,EAAoBrB,QAC7BK,UAAWgB,EAAoBhB,cAIrC,kBAACsD,GAAA,EAAD,CAAUC,WAAW,aAAaF,OAAO,EAAMG,SAAS,GACtD,kBAACC,GAAA,EAAD,CACE9D,QAAQ,WACRK,UAAWyC,EAAInE,OAAJ,KACXyE,QAAS,CACPpD,QAASqB,EAAoBrB,QAC7BK,UAAWgB,EAAoBhB,cAIrC,kBAACsD,GAAA,EAAD,CAAUC,WAAW,aAAaF,OAAO,EAAMG,SAAS,GACtD,kBAACC,GAAA,EAAD,CACE9D,QAAQ,cACRK,UAAWyC,EAAInE,OAAJ,gCACXyE,QAAS,CACPpD,QAASqB,EAAoBrB,QAC7BK,UAAWgB,EAAoBhB,cAIrC,kBAACsD,GAAA,EAAD,CAAUC,WAAW,aAAaF,OAAO,EAAMG,SAAS,GACtD,kBAACC,GAAA,EAAD,CACE9D,QAAQ,WACRK,UAAWyC,EAAInE,OAAJ,SACXyE,QAAS,CACPpD,QAASqB,EAAoBrB,QAC7BK,UAAWgB,EAAoBhB,cAIrC,kBAACsD,GAAA,EAAD,CAAUC,WAAW,aAAaF,OAAO,EAAMG,SAAS,GACtD,kBAACC,GAAA,EAAD,CACE9D,QAAQ,cACRK,UAAWC,GAAiBwC,EAAInE,OAAJ,aAC5ByE,QAAS,CACPpD,QAASqB,EAAoBrB,QAC7BK,UAAWgB,EAAoBhB,cAIrC,kBAACsD,GAAA,EAAD,CAAUC,WAAW,aAAaF,OAAO,EAAMG,SAAS,GACtD,kBAACC,GAAA,EAAD,CACE9D,QAAQ,UACRK,UAAWC,GAAiBwC,EAAInE,OAAJ,SAC5ByE,QAAS,CACPpD,QAASqB,EAAoBrB,QAC7BK,UAAWgB,EAAoBhB,oBAS/C,yBAAK7qB,UAAU,cACb,yBAAKA,UAAU,oBACb,4BACEA,UAAU,mBACVO,QAAS,kBAAMssB,EAAS,IACxB3U,UAAWuU,GAEV,MACO,IACV,4BACEzsB,UAAU,mBACVO,QAAS,kBAAMwsB,KACf7U,UAAWuU,GAEV,KACO,IACV,4BACEzsB,UAAU,mBACVO,QAAS,kBAAMusB,KACf5U,UAAWwU,GAEV,KACO,IACV,4BACE1sB,UAAU,mBACVO,QAAS,kBAAMssB,EAASD,EAAY,IACpC1U,UAAWwU,GAEV,MACO,KAEZ,wBAAIlsB,MAAO,CAACM,MAAO,cAAnB,OACO,IACL,gCACGorB,EAAY,EADf,OACsBS,EAAY9pB,QACxB,KAKZ,2BACE0L,KAAK,SACLmf,aAAcxB,EAAY,EAC1BlU,SAAU,SAACtW,GACT,IAAMuX,EAAOvX,EAAE+L,OAAOpQ,MAAQH,OAAOwE,EAAE+L,OAAOpQ,OAAS,EAAI,EAC3DwvB,EAAS5T,MAIb,4BACEjZ,UAAU,SACV3C,MAAO8uB,EACPnU,SAAU,SAACtW,GACTsrB,EAAY9vB,OAAOwE,EAAE+L,OAAOpQ,UAG7B,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAI0E,KAAI,SAACoqB,GAAD,OAC3B,4BAAQxsB,IAAKwsB,EAAU9uB,MAAO8uB,GAA9B,QACQA,UChHPoC,OA5Rf,SAAmB3wB,GAAQ,IAAD,EACAC,mBAAS,IADT,mBACjBrB,EADiB,KACXqH,EADW,OAEMhG,oBAAS,GAFf,mBAEjBwY,EAFiB,KAERC,EAFQ,OAGAzY,mBAAS,IAHT,mBAGjB6lB,EAHiB,KAGX8K,EAHW,OAIQ3wB,mBAAS,IAJjB,mBAIjB4wB,EAJiB,KAIPC,EAJO,OAKc7wB,mBAAS,IALvB,mBAKjB8wB,EALiB,KAKJC,EALI,OAMgB/wB,mBAAS,IANzB,mBAMjBgxB,EANiB,KAMHC,EANG,OAOUjxB,oBAAS,GAPnB,mBAOjBkxB,EAPiB,KAONC,EAPM,OAQUnxB,oBAAS,GARnB,mBAQjB6tB,EARiB,KAQNuD,EARM,KAUxBvwB,qBAAU,YACQ,IAAZ2X,GACF6Y,MAED,CAAC7Y,EAAS7Z,EAAMqyB,IACnB,IAAMM,EAAsBtwB,uBAAY,SAACoZ,GACnCtW,OAAOC,WAAa,IAAKqtB,GAAa,GACrCA,GAAa,KAEjB,IAEHvwB,qBAAU,WAIR,OAHIiD,OAAOC,WAAa,IAAKqtB,GAAa,GACrCA,GAAa,GAClBttB,OAAOytB,iBAAiB,SAAUD,GAC3B,WACLxtB,OAAO0tB,oBAAoB,SAAUF,MAEtC,CAACzD,EAAWyD,IAEf,IAAMD,EAAY,uCAAG,kCAAAtsB,EAAA,+EAEQuU,QAAQC,IAAI,CACnCC,IAAMC,IAAI,2DAHK,mCAEVC,EAFU,KASX+X,EAAU,GAChB/X,EAAS/a,KAAK+yB,UAAU7vB,SAAQ,SAAC+T,GAEI,qBAAxB6b,EAAQ7b,EAAC,SAClB6b,EAAQ7b,EAAC,OAAa,IACsB,qBAAnC6b,EAAQ7b,EAAC,OAAWA,EAAC,QAC9B6b,EAAQ7b,EAAC,OAAWA,EAAC,MAAY,IAEwB,qBAAlD6b,EAAQ7b,EAAC,OAAWA,EAAC,MAAUA,EAAC,YAEvC6b,EAAQ7b,EAAC,OAAWA,EAAC,MAAUA,EAAC,UAAgB,IAC9C7K,MAAM4mB,QAAQF,EAAQ7b,EAAC,OAAWA,EAAC,MAAUA,EAAC,YAChD6b,EAAQ7b,EAAC,OAAWA,EAAC,MAAUA,EAAC,UAAcsI,KAAKtI,MAGvDqb,EAAgBQ,GAGhBhZ,GAAW,GA3BM,4GAAH,qDAiCZmZ,EAAWtE,IAAM1e,SACrB,iBAAM,CACJ,CACEijB,OAAQ,OACRC,SAAU,QAEZ,CACED,OAAQ,WACRC,SAAU,YAEZ,CACED,OAAQ,eACRC,SAAU,yBAEZ,CACED,OAAQ,cACRC,SAAU,mCAEZ,CACED,OAAQ,QACRC,SAAU,eAEZ,CACED,OAAQ,UACRC,SAAU,cAGd,IAoHF,OACE,yBAAK3vB,UAAU,aACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,eACb,6DAEF,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kBAIb,4BACE8J,GAAG,eACHkO,SAvCc,SAAU4X,GAClChB,EAAegB,EAAkBniB,OAAOpQ,OAID,KAAnCuyB,EAAkBniB,OAAOpQ,OAC3BmxB,EAAQ,IACRhO,SAASC,eAAe,eAAekD,cAAgB,EACvD+K,EAAY,IACZlO,SAASC,eAAe,kBAAkBkD,cAAgB,IAE1D6K,EAAQ,OACRhO,SAASC,eAAe,eAAekD,cAAgB,EACvD+K,EAAY,OACZlO,SAASC,eAAe,kBAAkBkD,cAAgB,IA0BlD+J,aAAa,IAEb,4BAAQrwB,MAAM,GAAG6a,UAAQ,EAAC2X,QAAM,GAAhC,gBAlHH7wB,OAAOC,KAAK4vB,GAChB3vB,OACA6C,KAAI,SAAC0R,GAAD,OACH,4BAAQ9T,IAAK8T,EAAE3J,GAAIzM,MAAOoW,GACvBA,QAoHD,yBAAKzT,UAAU,kBAIb,4BACE8J,GAAG,cACHkO,SArCO,SAAU8X,GAC3BtB,EAAQsB,EAAiBriB,OAAOpQ,OAChCqxB,EAAY,OACZlO,SAASC,eAAe,kBAAkBkD,cAAgB,GAmChDzL,SAA0B,KAAhByW,EACVjB,aAAa,IAEb,4BAAQrwB,MAAM,GAAG6a,UAAQ,EAAC2X,QAAM,GAAhC,eAGA,4BAAQxyB,MAAM,OAAd,cAlJNsxB,EACK3vB,OAAOC,KAAK4vB,EAAaF,IAC7BzvB,OACA6C,KAAI,SAAC0R,GAAD,OACH,4BAAQ9T,IAAK8T,EAAE3J,GAAIzM,MAAOoW,GACvBA,MAGK,KA8IR,yBAAKzT,UAAU,kBAIb,4BACE8J,GAAG,iBACHkO,SAjDW,SAAU+X,GAC/BrB,EAAYqB,EAAqBtiB,OAAOpQ,QAiD9B6a,SAA0B,KAAhByW,EACVjB,aAAa,IAEb,4BAAQrwB,MAAM,GAAG6a,UAAQ,EAAC2X,QAAM,GAAhC,mBAGA,4BAAQxyB,MAAM,OAAd,kBA7INsxB,GAAejL,EACJ,QAATA,EAAuB,GAElB1kB,OAAOC,KAAK4vB,EAAaF,GAAajL,IAC1CxkB,OACA6C,KAAI,SAAC0R,GAAD,OACH,4BAAQ9T,IAAK8T,EAAE3J,GAAIzM,MAAOoW,GACvBA,MAIG,KAsIR,yBAAKzT,UAAU,kBACb,4BACEA,UAAU,mBACVkY,UAAWyW,EACXpuB,QAvIQ,WAGlB,IAAIqC,EAAI,GACS,QAAb6rB,EAEW,QAAT/K,EACF1kB,OAAOmqB,OAAO0F,EAAaF,IAAcjvB,SAAQ,SAACswB,GAChDhxB,OAAOmqB,OAAO6G,GAAUtwB,SAAQ,SAAC+uB,GAC/BA,EAAS/uB,SAAQ,SAAC+T,GAAD,OAAO7Q,EAAEmZ,KAAKtI,YAInCzU,OAAOmqB,OAAO0F,EAAaF,GAAajL,IAAOhkB,SAAQ,SAAC+T,GACtDA,EAAE/T,SAAQ,SAACgU,GAAD,OAAO9Q,EAAEmZ,KAAKrI,SAMf,QAATgQ,EACF1kB,OAAOmqB,OAAO0F,EAAaF,IAAcjvB,SAAQ,SAACswB,GAC5CvB,KAAYuB,GACdA,EAASvB,GAAU/uB,SAAQ,SAAC+T,GAC1B7Q,EAAEmZ,KAAKtI,SAKb7Q,EAAIisB,EAAaF,GAAajL,GAAM+K,GAGxC,IACM,cAAeI,GACjBA,EAAa,aAAb,SAAsC,wBAAwBnvB,SAC5D,SAACuwB,GACCrtB,EAAEmZ,KAAKkU,MAIb,MAAO/oB,IAGTrD,EAAQjB,GAGRosB,GAAa,IA0FHxuB,MAAQmuB,EAAwC,KAA1B,CAACuB,cAAe,SAJxC,aAWN,6BACA,yBAAKlwB,UAAU,uBACZ+uB,GACC,kBAAC,GAAD,CAAetD,QAASgE,EAAUjzB,KAAMA,EAAMkvB,UAAWA,OCnQ7DyE,GAAU1V,EAAQ,IAAW2V,qBA2IpBC,OAzIf,WACE,IAAMrX,EAAQ,CACZ,CACEE,SAAU,IACVoX,KAAMpa,EACNkD,YAAa,OACbD,wBAAyB,IAQ3B,CACED,SAAU,gBACVoX,KAAMzN,GACNzJ,YAAa,eACbD,wBAAyB,IAE3B,CACED,SAAU,YACVoX,KAAMhH,GACNlQ,YAAa,YACbD,wBAAyB,IAE3B,CACED,SAAU,SACVoX,KAAMpS,GACN9E,YAAa,gBACbD,wBAAyB,IAE3B,CACED,SAAU,OACVoX,KAAMlS,GACNhF,YAAa,QACbD,wBAAyB,IAE3B,CACED,SAAU,cACVoX,KAAM/B,GACNnV,YAAa,aACbD,wBAAyB,IAE3B,CACED,SAAU,WACVoX,KAAMvT,GACN3D,YAAa,iBACbD,wBAAyB,KAI7B,OACE,yBAAKnZ,UAAU,OACb,kBAAC,IAAD,CAAQmwB,QAASA,IACf,kBAAC,IAAD,CACE9C,OAAQ,gBAAEzU,EAAF,EAAEA,SAAF,OACN,yBAAK5Y,UAAU,mBACb,kBAAC,EAAD,CAAQgZ,MAAOA,IACf,kBAAC,GAAD,MACA,kBAAC,IAAD,CAAOuX,OAAK,EAAChqB,KAAK,IAAI8mB,OAAQ,kBAAM,kBAAC,IAAD,CAAUxsB,GAAG,SACjD,kBAAC,IAAD,CAAQ+X,SAAUA,GACfI,EAAMjX,KAAI,SAACkX,EAAMpR,GAChB,OACE,kBAAC,IAAD,CACE0oB,OAAK,EACLhqB,KAAM0S,EAAKC,SACXsX,UAAWvX,EAAKqX,KAChB3wB,IAAKkI,OAIX,kBAAC,IAAD,CAAUhH,GAAG,YAOvB,4BAAQb,UAAU,WAAWQ,MAAO,CAACkD,eAAgB,OAMnD,iFACA,yBAAK1D,UAAU,QACb,uBACEuN,KAAK,kCACLE,OAAO,SACP0Q,IAAI,uBAHN,iBAQF,uBACE5Q,KAAK,qDACLvN,UAAU,gBACVyN,OAAO,SACP0Q,IAAI,uBAEJ,kBAAC,IAAD,MACA,yDAEF,uBACEne,UAAU,eACVuN,KAAK,2BACLE,OAAO,SACP0Q,IAAI,uBAEJ,kBAAC,IAAD,MACA,oEAEF,uBACE5Q,KAAK,sCACLE,OAAO,SACP0Q,IAAI,sBACJne,UAAU,iBACVQ,MAAO,CAAC2pB,eAAgB,WAExB,kBAAC,IAAD,MACA,0DAEF,uBACE5c,KAAK,8BACLvN,UAAU,kBACVyN,OAAO,SACP0Q,IAAI,uBAEJ,kBAAC,IAAD,MACA,mEC7IUsS,QACW,cAA7B9uB,OAAOiX,SAAS8X,UAEe,UAA7B/uB,OAAOiX,SAAS8X,UAEhB/uB,OAAOiX,SAAS8X,SAASC,MACvB,2DCbNC,IAASvD,OAAO,kBAAC,GAAD,MAAS7M,SAASC,eAAe,SD8H3C,kBAAmBnD,WACrBA,UAAUuT,cAAcxrB,MACrBoZ,MAAK,SAACqS,GACLA,EAAaC,gBAEdrS,OAAM,SAACzB,GACN9V,QAAQ8V,MAAMA,EAAM+T,a,mBEzI5B,IAAIjvB,EAAM,CACT,kBAAmB,IACnB,iBAAkB,IAClB,aAAc,IACd,aAAc,IACd,aAAc,IACd,iBAAkB,IAClB,cAAe,IACf,iBAAkB,IAClB,mBAAoB,IACpB,mBAAoB,IACpB,aAAc,IACd,gBAAiB,IACjB,YAAa,IACb,sBAAuB,IACvB,aAAc,IACd,cAAe,IACf,eAAgB,IAChB,eAAgB,IAChB,cAAe,IACf,gBAAiB,IACjB,aAAc,KAIf,SAASkvB,EAAeC,GACvB,IAAIpnB,EAAKqnB,EAAsBD,GAC/B,OAAOE,EAAoBtnB,GAE5B,SAASqnB,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEtvB,EAAKmvB,GAAM,CACpC,IAAIxvB,EAAI,IAAI4vB,MAAM,uBAAyBJ,EAAM,KAEjD,MADAxvB,EAAEkmB,KAAO,mBACHlmB,EAEP,OAAOK,EAAImvB,GAEZD,EAAehyB,KAAO,WACrB,OAAOD,OAAOC,KAAK8C,IAEpBkvB,EAAeM,QAAUJ,EACzB73B,EAAOC,QAAU03B,EACjBA,EAAennB,GAAK,K","file":"static/js/main.d2e4794f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.c0697d5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/ambulance.4ce9786b.svg\";","module.exports = __webpack_public_path__ + \"static/media/delivery.166a768b.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire.d2b09926.svg\";","module.exports = __webpack_public_path__ + \"static/media/food.a50b1884.svg\";","module.exports = __webpack_public_path__ + \"static/media/fund.89e35ddb.svg\";","module.exports = __webpack_public_path__ + \"static/media/helpline.d2d04866.svg\";","module.exports = __webpack_public_path__ + \"static/media/homes.5d26365e.svg\";","module.exports = __webpack_public_path__ + \"static/media/hospital.ee786d76.svg\";","module.exports = __webpack_public_path__ + \"static/media/hospital_b.d9b5673e.svg\";","module.exports = __webpack_public_path__ + \"static/media/hospital_c.4756cba1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon.b81318db.svg\";","module.exports = __webpack_public_path__ + \"static/media/kitchen.5e0b972b.svg\";","module.exports = __webpack_public_path__ + \"static/media/lab.1ce20326.svg\";","module.exports = __webpack_public_path__ + \"static/media/mental-health.a2cd38bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/null.3d0c5526.svg\";","module.exports = __webpack_public_path__ + \"static/media/other.2590c4f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/police.d30a8b2b.svg\";","module.exports = __webpack_public_path__ + \"static/media/senior.f0ae6c8f.svg\";","module.exports = __webpack_public_path__ + \"static/media/thali.04767274.svg\";","module.exports = __webpack_public_path__ + \"static/media/unknown.3d0c5526.svg\";","const months = {\n  '01': 'Jan',\n  '02': 'Feb',\n  '03': 'Mar',\n  '04': 'Apr',\n  '05': 'May',\n  '06': 'Jun',\n  '07': 'Jul',\n  '08': 'Aug',\n  '09': 'Sep',\n  '10': 'Oct',\n  '11': 'Nov',\n  '12': 'Dec',\n};\n\nconst stateCodes = {\n  AP: 'Andhra Pradesh',\n  AR: 'Arunachal Pradesh',\n  AS: 'Assam',\n  BR: 'Bihar',\n  CT: 'Chhattisgarh',\n  GA: 'Goa',\n  GJ: 'Gujarat',\n  HR: 'Haryana',\n  HP: 'Himachal Pradesh',\n  JH: 'Jharkhand',\n  KA: 'Karnataka',\n  KL: 'Kerala',\n  MP: 'Madhya Pradesh',\n  MH: 'Maharashtra',\n  MN: 'Manipur',\n  ML: 'Meghalaya',\n  MZ: 'Mizoram',\n  NL: 'Nagaland',\n  OR: 'Odisha',\n  PB: 'Punjab',\n  RJ: 'Rajasthan',\n  SK: 'Sikkim',\n  TN: 'Tamil Nadu',\n  TG: 'Telangana',\n  TR: 'Tripura',\n  UT: 'Uttarakhand',\n  UP: 'Uttar Pradesh',\n  WB: 'West Bengal',\n  AN: 'Andaman and Nicobar Islands',\n  CH: 'Chandigarh',\n  DB: 'Dadra and Nagar Haveli',\n  DD: 'Daman and Diu',\n  DL: 'Delhi',\n  JK: 'Jammu and Kashmir',\n  LA: 'Ladakh',\n  LD: 'Lakshadweep',\n  PY: 'Puducherry',\n};\n\nexport const getStateName = (code) => {\n  return stateCodes[code.toUpperCase()];\n};\n\nexport const formatDate = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const year = unformattedDate.slice(6, 10);\n  const time = unformattedDate.slice(11);\n  return `${year}-${month}-${day}T${time}+05:30`;\n};\n\nexport const formatDateAbsolute = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const time = unformattedDate.slice(11);\n  return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\n};\n\nexport const validateCTS = (data = []) => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  const dataTypes = [\n    'dailyconfirmed',\n    'dailydeceased',\n    'dailyrecovered',\n    'totalconfirmed',\n    'totaldeceased',\n    'totalrecovered',\n  ];\n  return data\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\n    .filter((d) => {\n      const year = today.getFullYear();\n      return new Date(d.date + year) < today;\n    });\n};\n\nexport const preprocessTimeseries = (timeseries) => {\n  return timeseries.map((stat) => ({\n    date: new Date(stat.date + ' 2020'),\n    totalconfirmed: +stat.totalconfirmed,\n    totalrecovered: +stat.totalrecovered,\n    totaldeceased: +stat.totaldeceased,\n    dailyconfirmed: +stat.dailyconfirmed,\n    dailyrecovered: +stat.dailyrecovered,\n    dailydeceased: +stat.dailydeceased,\n  }));\n};\n\n/**\n * Returns the last `days` entries\n * @param {Array<Object>} timeseries\n * @param {number} days\n *\n * @return {Array<Object>}\n */\nexport function sliceTimeseriesFromEnd(timeseries, days) {\n  return timeseries.slice(timeseries.length - days);\n}\n\nexport const formatNumber = (value) => {\n  const numberFormatter = new Intl.NumberFormat('en-IN');\n  return isNaN(value) ? '-' : numberFormatter.format(value);\n};\n","import React, {useState, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {\n  formatDate,\n  formatDateAbsolute,\n  formatNumber,\n} from '../utils/common-functions';\nimport {formatDistance} from 'date-fns';\nimport {Link} from 'react-router-dom';\n\nfunction Row(props) {\n  const [state, setState] = useState(props.state);\n  const [districts, setDistricts] = useState(props.districts);\n  const [sortedDistricts, setSortedDistricts] = useState(props.districts);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('district.sortColumn')\n      ? localStorage.getItem('district.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('district.isAscending')\n      ? localStorage.getItem('district.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    setState(props.state);\n  }, [props.state]);\n\n  useEffect(() => {\n    setDistricts(props.districts);\n    setSortedDistricts(props.districts);\n  }, [props.districts]);\n\n  const handleReveal = () => {\n    props.handleReveal(props.state.state);\n  };\n\n  const sortDistricts = useCallback(\n    (aDistricts) => {\n      const sorted = {};\n      if (aDistricts) {\n        Object.keys(aDistricts)\n          .sort((district1, district2) => {\n            const sortColumn = sortData.sortColumn;\n            const value1 =\n              sortColumn === 'district'\n                ? district1\n                : parseInt(aDistricts[district1].confirmed);\n            const value2 =\n              sortColumn === 'district'\n                ? district2\n                : parseInt(aDistricts[district2].confirmed);\n            const comparisonValue =\n              value1 > value2\n                ? 1\n                : value1 === value2 && district1 > district2\n                ? 1\n                : -1;\n            return sortData.isAscending\n              ? comparisonValue\n              : comparisonValue * -1;\n          })\n          .forEach((key) => {\n            sorted[key] = aDistricts[key];\n          });\n        setSortedDistricts(sorted);\n      }\n    },\n    [sortData.isAscending, sortData.sortColumn]\n  );\n\n  const handleSort = (column) => {\n    const isAscending =\n      sortData.sortColumn === column\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'district';\n    setSortData({\n      sortColumn: column,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('district.sortColumn', column);\n    localStorage.setItem('district.isAscending', isAscending);\n  };\n\n  useEffect(() => {\n    sortDistricts(districts);\n  }, [districts, sortData, sortDistricts]);\n\n  return (\n    <React.Fragment>\n      <tr\n        className={props.total ? 'state is-total' : 'state'}\n        onMouseEnter={() => props.onHighlightState?.(state, props.index)}\n        onMouseLeave={() => props.onHighlightState?.()}\n        touchstart={() => props.onHighlightState?.(state, props.index)}\n        onClick={!props.total ? handleReveal : null}\n        style={{background: props.index % 2 === 0 ? '#f8f9fa' : ''}}\n      >\n        <td style={{fontWeight: 600}}>\n          <div className=\"table__title-wrapper\">\n            <span\n              className={`dropdown ${\n                props.reveal ? 'rotateRightDown' : 'rotateDownRight'\n              }`}\n              style={{display: !props.total ? '' : 'none'}}\n              onClick={() => {\n                handleReveal();\n              }}\n            >\n              <Icon.ChevronDown />\n            </span>\n            {state.state}\n            {state.state === 'West Bengal' && (\n              <Link to=\"/faq\">\n                <Icon.HelpCircle className=\"height-22\" />\n              </Link>\n            )}\n          </div>\n        </td>\n        <td>\n          <span className=\"deltas\" style={{color: '#ff073a'}}>\n            {state.deltaconfirmed > 0 && <Icon.ArrowUp />}\n            {state.deltaconfirmed > 0 ? `${state.deltaconfirmed}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.confirmed) === 0\n              ? '-'\n              : formatNumber(state.confirmed)}\n          </span>\n        </td>\n        <td\n          style={{color: parseInt(state.active) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          {/* <span className=\"deltas\" style={{color: '#007bff'}}>\n            {!state.delta.active==0 && <Icon.ArrowUp/>}\n            {state.delta.active>0 ? `${state.delta.active}` : ''}\n          </span>*/}\n          {parseInt(state.active) === 0 ? '-' : formatNumber(state.active)}\n        </td>\n        <td\n          style={{\n            color: parseInt(state.recovered) === 0 ? '#B5B5B5' : 'inherit',\n          }}\n        >\n          <span className=\"deltas\" style={{color: '#28a745'}}>\n            {state.deltarecovered > 0 && <Icon.ArrowUp />}\n            {state.deltarecovered > 0 ? `${state.deltarecovered}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.recovered) === 0\n              ? '-'\n              : formatNumber(state.recovered)}\n          </span>\n        </td>\n        <td\n          style={{color: parseInt(state.deaths) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          <span className=\"deltas\" style={{color: '#6c757d'}}>\n            {state.deltadeaths > 0 && <Icon.ArrowUp />}\n            {state.deltadeaths > 0 ? `${state.deltadeaths}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.deaths) === 0 ? '-' : formatNumber(state.deaths)}\n          </span>\n        </td>\n      </tr>\n\n      <tr\n        className={'state-last-update'}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td colSpan={2}>\n          <div className=\"last-update\">\n            <h6>Last Updated&nbsp;</h6>\n            <h6\n              title={\n                isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                  ? ''\n                  : formatDateAbsolute(props.state.lastupdatedtime)\n              }\n            >\n              {isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                ? ''\n                : `${formatDistance(\n                    new Date(formatDate(props.state.lastupdatedtime)),\n                    new Date()\n                  )} Ago`}\n            </h6>\n          </div>\n        </td>\n      </tr>\n\n      <tr\n        className={`district-heading`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td onClick={(e) => handleSort('district')}>\n          <div className=\"heading-content\">\n            <abbr title=\"District\">District</abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === 'district' ? 'initial' : 'none',\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n        <td onClick={(e) => handleSort('confirmed')}>\n          <div className=\"heading-content\">\n            <abbr\n              className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n              title=\"Confirmed\"\n            >\n              {window.innerWidth <= 769\n                ? window.innerWidth <= 375\n                  ? 'C'\n                  : 'Cnfmd'\n                : 'Confirmed'}\n            </abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n      </tr>\n\n      {sortedDistricts &&\n        Object.keys(sortedDistricts)\n          .filter((district) => district.toLowerCase() !== 'unknown')\n          .map((district, index) => {\n            if (district.toLowerCase() !== 'unknown') {\n              return (\n                <tr\n                  key={index}\n                  className={`district`}\n                  style={{\n                    display: props.reveal && !props.total ? '' : 'none',\n                    background: index % 2 === 0 ? '#f8f9fa' : '',\n                  }}\n                  onMouseEnter={() =>\n                    props.onHighlightDistrict?.(district, state, props.index)\n                  }\n                  onMouseLeave={() => props.onHighlightDistrict?.()}\n                  touchstart={() =>\n                    props.onHighlightDistrict?.(district, state, props.index)\n                  }\n                >\n                  <td style={{fontWeight: 600}}>{district}</td>\n                  <td>\n                    <span className=\"deltas\" style={{color: '#ff073a'}}>\n                      {sortedDistricts[district].delta.confirmed > 0 && (\n                        <Icon.ArrowUp />\n                      )}\n                      {sortedDistricts[district].delta.confirmed > 0\n                        ? `${sortedDistricts[district].delta.confirmed}`\n                        : ''}\n                    </span>\n                    <span className=\"table__count-text\">\n                      {formatNumber(sortedDistricts[district].confirmed)}\n                    </span>\n                  </td>\n                </tr>\n              );\n            }\n            return null;\n          })}\n\n      {sortedDistricts?.Unknown && (\n        <tr\n          className={`district`}\n          style={{display: props.reveal && !props.total ? '' : 'none'}}\n        >\n          <td style={{fontWeight: 600}}>Unknown</td>\n          <td>\n            <span className=\"deltas\" style={{color: '#ff073a'}}>\n              {sortedDistricts['Unknown'].delta.confirmed > 0 && (\n                <Icon.ArrowUp />\n              )}\n              {sortedDistricts['Unknown'].delta.confirmed > 0\n                ? `${sortedDistricts['Unknown'].delta.confirmed}`\n                : ''}\n            </span>\n            <span className=\"table__count-text\">\n              {formatNumber(sortedDistricts['Unknown'].confirmed)}\n            </span>\n          </td>\n        </tr>\n      )}\n\n      <tr\n        className={`spacer`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td></td>\n        <td></td>\n        <td></td>\n      </tr>\n    </React.Fragment>\n  );\n}\n\nexport default Row;\n","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport Row from './row';\n\nfunction Table(props) {\n  const [states, setStates] = useState(props.states);\n  const [revealedStates, setRevealedStates] = useState({});\n  const [districts, setDistricts] = useState({});\n  const [count, setCount] = useState(0);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('state.sortColumn')\n      ? localStorage.getItem('state.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('state.isAscending')\n      ? localStorage.getItem('state.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    if (props.summary === true) {\n      setStates(props.states.slice(0, 9));\n    } else {\n      setStates(props.states);\n    }\n  }, [props.states, props.summary]);\n\n  useEffect(() => {\n    if (props.states[0]) {\n      setRevealedStates(\n        props.states.reduce((a, state) => {\n          return {...a, [state.state]: false};\n        }, {})\n      );\n    }\n  }, [props.states]);\n\n  useEffect(() => {\n    if (states.length > 0) {\n      // slice to ignore the first item which is the total count\n      setCount(states.slice(1).filter((s) => s && s.confirmed > 0).length);\n    }\n  }, [states]);\n\n  useEffect(() => {\n    setDistricts(props.stateDistrictWiseData);\n  }, [props.stateDistrictWiseData]);\n\n  const doSort = (e, props) => {\n    const totalRow = states.splice(0, 1);\n    states.sort((StateData1, StateData2) => {\n      const sortColumn = sortData.sortColumn;\n      let value1 = StateData1[sortColumn];\n      let value2 = StateData2[sortColumn];\n\n      if (sortColumn !== 'state') {\n        value1 = parseInt(StateData1[sortColumn]);\n        value2 = parseInt(StateData2[sortColumn]);\n      }\n\n      if (sortData.isAscending) {\n        return value1 > value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      } else {\n        return value1 < value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      }\n    });\n    states.unshift(totalRow[0]);\n  };\n\n  const handleSort = (e, props) => {\n    const currentsortColumn = e.currentTarget\n      .querySelector('abbr')\n      .getAttribute('title')\n      .toLowerCase();\n    const isAscending =\n      sortData.sortColumn === currentsortColumn\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'state';\n    setSortData({\n      sortColumn: currentsortColumn,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('state.sortColumn', currentsortColumn);\n    localStorage.setItem('state.isAscending', isAscending);\n  };\n\n  const handleReveal = (state) => {\n    setRevealedStates({\n      ...revealedStates,\n      [state]: !revealedStates[state],\n    });\n  };\n\n  doSort();\n\n  return (\n    <React.Fragment>\n      <h5 className=\"table-fineprint fadeInUp\" style={{animationDelay: '1.5s'}}>\n        Compiled from State Govt. numbers <Link to=\"/faq\">Know More</Link>\n      </h5>\n      <table className=\"table fadeInUp\" style={{animationDelay: '1.8s'}}>\n        <thead>\n          <tr>\n            <th\n              className=\"sticky state-heading\"\n              onClick={(e) => handleSort(e, props)}\n            >\n              <div className=\"heading-content\">\n                <abbr title=\"State\">State/UT</abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'state' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n                  title=\"Confirmed\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'C'\n                      : 'Cnfmd'\n                    : 'Confirmed'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-blue' : ''}`}\n                  title=\"Active\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'A'\n                      : 'Actv'\n                    : 'Active'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'active' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-green' : ''}`}\n                  title=\"Recovered\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'R'\n                      : 'Rcvrd'\n                    : 'Recovered'}\n                </abbr>\n                <div\n                  className={\n                    sortData.sortColumn === 'recovered' ? 'sort-black' : ''\n                  }\n                ></div>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'recovered' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-gray' : ''}`}\n                  title=\"Deaths\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'D'\n                      : 'Dcsd'\n                    : 'Deceased'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'deaths' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {states.map((state, index) => {\n            if (index !== 0 && state.confirmed > 0) {\n              return (\n                <Row\n                  key={index}\n                  index={index}\n                  state={state}\n                  total={false}\n                  reveal={revealedStates[state.state]}\n                  districts={\n                    state.state in districts\n                      ? districts[state.state].districtData\n                      : []\n                  }\n                  onHighlightState={props.onHighlightState}\n                  onHighlightDistrict={props.onHighlightDistrict}\n                  handleReveal={handleReveal}\n                />\n              );\n            }\n            return null;\n          })}\n        </tbody>\n\n        <tbody>\n          {states.length > 1 && props.summary === false && (\n            <Row key={0} state={states[0]} total={true} />\n          )}\n        </tbody>\n      </table>\n      <h5 className=\"table-fineprint fadeInUp\" style={{animationDelay: '1s'}}>\n        {count} States/UTS Affected\n      </h5>\n    </React.Fragment>\n  );\n}\n\nexport default Table;\n","import React, {useState, useEffect} from 'react';\nimport {formatNumber} from '../utils/common-functions';\n\nfunction Level(props) {\n  const [data, setData] = useState(props.data);\n  const [confirmed, setConfirmed] = useState(0);\n  const [active, setActive] = useState(0);\n  const [recoveries, setRecoveries] = useState(0);\n  const [deaths, setDeaths] = useState(0);\n  const [deltas, setDeltas] = useState(0);\n\n  useEffect(() => {\n    setData(props.data);\n  }, [props.data]);\n\n  useEffect(() => {\n    const parseData = () => {\n      let confirmed = 0;\n      let active = 0;\n      let recoveries = 0;\n      let deaths = 0;\n      let deltas = {};\n      data.forEach((state, index) => {\n        if (index !== 0) {\n          confirmed += parseInt(state.confirmed);\n          active += parseInt(state.active);\n          recoveries += parseInt(state.recovered);\n          deaths += parseInt(state.deaths);\n        } else {\n          deltas = {\n            confirmed: parseInt(state.deltaconfirmed),\n            deaths: parseInt(state.deltadeaths),\n            recovered: parseInt(state.deltarecovered),\n          };\n        }\n      });\n      setConfirmed(confirmed);\n      setActive(active);\n      setRecoveries(recoveries);\n      setDeaths(deaths);\n      setDeltas(deltas);\n    };\n    parseData();\n  }, [data]);\n\n  return (\n    <div className=\"Level\">\n      <div\n        className=\"level-item is-cherry fadeInUp\"\n        style={{animationDelay: '1s'}}\n      >\n        <h5>Confirmed</h5>\n        <h4>\n          [\n          {deltas\n            ? deltas.confirmed > 0\n              ? '+' + formatNumber(deltas.confirmed)\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1>{formatNumber(confirmed)} </h1>\n      </div>\n\n      <div\n        className=\"level-item is-blue fadeInUp\"\n        style={{animationDelay: '1.1s'}}\n      >\n        <h5 className=\"heading\">Active</h5>\n        <h4>&nbsp;</h4>\n        {/* <h4>[{props.deltas ? props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta) >=0 ? '+'+(props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta)).toString() : '+0' : ''}]</h4>*/}\n        <h1 className=\"title has-text-info\">{formatNumber(active)}</h1>\n      </div>\n\n      <div\n        className=\"level-item is-green fadeInUp\"\n        style={{animationDelay: '1.2s'}}\n      >\n        <h5 className=\"heading\">Recovered</h5>\n        <h4>\n          [\n          {deltas\n            ? deltas.recovered > 0\n              ? '+' + formatNumber(deltas.recovered)\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1 className=\"title has-text-success\">{formatNumber(recoveries)} </h1>\n      </div>\n\n      <div\n        className=\"level-item is-gray fadeInUp\"\n        style={{animationDelay: '1.3s'}}\n      >\n        <h5 className=\"heading\">Deceased</h5>\n        <h4>\n          [\n          {deltas\n            ? deltas.deaths > 0\n              ? '+' + formatNumber(deltas.deaths)\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1 className=\"title has-text-grey\">{formatNumber(deaths)}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Level;\n","export const MAP_TYPES = {\n  COUNTRY: 'country',\n  STATE: 'state',\n};\n\nexport const MAPS_DIR = '/maps';\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport {legendColor} from 'd3-svg-legend';\nimport * as topojson from 'topojson';\nimport {MAP_TYPES} from '../constants';\n\nconst propertyFieldMap = {\n  country: 'st_nm',\n  state: 'district',\n};\n\nfunction ChoroplethMap({\n  statistic,\n  mapData,\n  setHoveredRegion,\n  mapMeta,\n  changeMap,\n  selectedRegion,\n  setSelectedRegion,\n}) {\n  const choroplethMap = useRef(null);\n  const [svgRenderCount, setSvgRenderCount] = useState(0);\n\n  const ready = useCallback(\n    (geoData) => {\n      d3.selectAll('svg#chart > *').remove();\n      const propertyField = propertyFieldMap[mapMeta.mapType];\n      const maxInterpolation = 0.8;\n      const svg = d3.select(choroplethMap.current);\n      const width = +svg.attr('width');\n      const height = +svg.attr('height');\n\n      const handleMouseover = (name) => {\n        try {\n          setHoveredRegion(name, mapMeta);\n          setSelectedRegion(name);\n        } catch (err) {\n          console.log('err', err);\n        }\n      };\n\n      const topology = topojson.feature(\n        geoData,\n        geoData.objects[mapMeta.graphObjectName]\n      );\n\n      const projection = d3.geoMercator();\n\n      if (mapMeta.mapType === MAP_TYPES.COUNTRY)\n        projection.fitSize([width, height], topology);\n      else\n        projection.fitExtent(\n          [\n            [90, 20],\n            [width, height],\n          ],\n          topology\n        );\n\n      const path = d3.geoPath(projection);\n\n      let onceTouchedRegion = null;\n\n      svg\n        .append('g')\n        .attr('class', 'states')\n        .selectAll('path')\n        .data(topology.features)\n        .enter()\n        .append('path')\n        .attr('class', 'path-region')\n        .attr('fill', function (d) {\n          const n = parseInt(mapData[d.properties[propertyField]]) || 0;\n          const color =\n            n === 0\n              ? '#ffffff'\n              : d3.interpolateReds(\n                  (maxInterpolation * n) / (statistic.maxConfirmed || 0.001)\n                );\n          return color;\n        })\n        .attr('d', path)\n        .attr('pointer-events', 'all')\n        .on('mouseover', (d) => {\n          handleMouseover(d.properties[propertyField]);\n        })\n        .on('mouseleave', (d) => {\n          setSelectedRegion(null);\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n        })\n        .on('touchstart', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n          else onceTouchedRegion = d;\n        })\n        .on('click', (d) => {\n          if (onceTouchedRegion) {\n            return;\n          }\n          if (mapMeta.mapType === MAP_TYPES.STATE) {\n            return;\n          }\n          changeMap(d.properties[propertyField], mapMeta.mapType);\n        })\n        .style('cursor', 'pointer')\n        .append('title')\n        .text(function (d) {\n          const value = mapData[d.properties[propertyField]] || 0;\n          return (\n            Number(\n              parseFloat(100 * (value / (statistic.total || 0.001))).toFixed(2)\n            ).toString() +\n            '% from ' +\n            toTitleCase(d.properties[propertyField])\n          );\n        });\n\n      svg\n        .append('path')\n        .attr('stroke', '#ff073a20')\n        .attr('fill', 'none')\n        .attr('stroke-width', 2)\n        .attr(\n          'd',\n          path(topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectName]))\n        );\n    },\n    [\n      mapData,\n      mapMeta,\n      statistic.total,\n      statistic.maxConfirmed,\n      changeMap,\n      setHoveredRegion,\n      setSelectedRegion,\n    ]\n  );\n\n  const toTitleCase = (str) => {\n    str = str.toLowerCase().split(' ');\n    for (let i = 0; i < str.length; i++) {\n      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n    }\n    return str.join(' ');\n  };\n\n  const renderData = useCallback(() => {\n    const svg = d3.select(choroplethMap.current);\n\n    // Colorbar\n    const maxInterpolation = 0.8;\n    const color = d3\n      .scaleSequential(d3.interpolateReds)\n      .domain([0, statistic.maxConfirmed / maxInterpolation || 10]);\n\n    let cells = null;\n    let label = null;\n\n    label = ({i, genLength, generatedLabels, labelDelimiter}) => {\n      if (i === genLength - 1) {\n        const n = Math.floor(generatedLabels[i]);\n        return `${n}+`;\n      } else {\n        const n1 = 1 + Math.floor(generatedLabels[i]);\n        const n2 = Math.floor(generatedLabels[i + 1]);\n        return `${n1} - ${n2}`;\n      }\n    };\n\n    const numCells = 6;\n    const delta = Math.floor(\n      (statistic.maxConfirmed < numCells ? numCells : statistic.maxConfirmed) /\n        (numCells - 1)\n    );\n\n    cells = Array.from(Array(numCells).keys()).map((i) => i * delta);\n\n    svg\n      .append('g')\n      .attr('class', 'legendLinear')\n      .attr('transform', 'translate(1, 335)');\n\n    const legendLinear = legendColor()\n      .shapeWidth(36)\n      .shapeHeight(10)\n      .cells(cells)\n      .titleWidth(3)\n      .labels(label)\n      .title('Confirmed Cases')\n      .orient('vertical')\n      .scale(color);\n\n    svg\n      .select('.legendLinear')\n      .call(legendLinear)\n      .selectAll('text')\n      .style('font-size', '10px');\n  }, [statistic.maxConfirmed]);\n\n  useEffect(() => {\n    (async () => {\n      const data = await d3.json(mapMeta.geoDataFile);\n      if (statistic && choroplethMap.current) {\n        ready(data);\n        renderData();\n        setSvgRenderCount((prevCount) => prevCount + 1);\n      }\n    })();\n  }, [mapMeta.geoDataFile, statistic, renderData, ready]);\n\n  const highlightRegionInMap = (name) => {\n    const paths = d3.selectAll('.path-region');\n    paths.classed('map-hover', (d, i, nodes) => {\n      const propertyField =\n        'district' in d.properties\n          ? propertyFieldMap['state']\n          : propertyFieldMap['country'];\n      if (name === d.properties[propertyField]) {\n        nodes[i].parentNode.appendChild(nodes[i]);\n        return true;\n      }\n      return false;\n    });\n  };\n\n  useEffect(() => {\n    highlightRegionInMap(selectedRegion);\n  }, [svgRenderCount, selectedRegion]);\n\n  return (\n    <div className=\"svg-parent fadeInUp\" style={{animationDelay: '2.5s'}}>\n      <svg\n        id=\"chart\"\n        width=\"480\"\n        height=\"450\"\n        viewBox=\"0 0 480 450\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        ref={choroplethMap}\n      ></svg>\n    </div>\n  );\n}\n\nexport default ChoroplethMap;\n","import React, {useState, useEffect, useMemo, useCallback} from 'react';\nimport ChoroplethMap from './choropleth';\nimport {MAP_TYPES, MAPS_DIR} from '../constants';\nimport {formatDate, formatDateAbsolute} from '../utils/common-functions';\nimport {formatDistance, format, parse} from 'date-fns';\nimport {formatNumber} from '../utils/common-functions';\nimport * as Icon from 'react-feather';\n\nconst mapMeta = {\n  India: {\n    name: 'India',\n    geoDataFile: `${MAPS_DIR}/india.json`,\n    mapType: MAP_TYPES.COUNTRY,\n    graphObjectName: 'india',\n  },\n  'Andaman and Nicobar Islands': {\n    name: 'Andaman and Nicobar Islands',\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'andamannicobarislands_district',\n  },\n  'Arunachal Pradesh': {\n    name: 'Arunachal Pradesh',\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'arunachalpradesh_district',\n  },\n  'Andhra Pradesh': {\n    name: 'Andhra Pradesh',\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'andhrapradesh_district',\n  },\n\n  Assam: {\n    name: 'Assam',\n    geoDataFile: `${MAPS_DIR}/assam.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'assam_district',\n  },\n  Bihar: {\n    name: 'Bihar',\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'bihar_district',\n  },\n  Chandigarh: {\n    name: 'Chandigarh',\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'chandigarh_district',\n  },\n  Chhattisgarh: {\n    name: 'Chhattisgarh',\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'chhattisgarh_district',\n  },\n  'Dadra and Nagar Haveli': {\n    name: 'Dadra and Nagar Haveli',\n    geoDataFile: `${MAPS_DIR}/dadranagarhaveli.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'dadranagarhaveli_district',\n  },\n  Delhi: {\n    name: 'Delhi',\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'delhi_district',\n  },\n  Karnataka: {\n    name: 'Karnataka',\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'karnataka_district',\n  },\n  Kerala: {\n    name: 'Kerala',\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'kerala_district',\n  },\n  Goa: {\n    name: 'Goa',\n    geoDataFile: `${MAPS_DIR}/goa.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'goa_district',\n  },\n  Gujarat: {\n    name: 'Gujarat',\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'gujarat_district',\n  },\n  Haryana: {\n    name: 'Haryana',\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'haryana_district',\n  },\n  'Himachal Pradesh': {\n    name: 'Himachal Pradesh',\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'himachalpradesh_district',\n  },\n  'Jammu and Kashmir': {\n    name: 'Jammu and Kashmir',\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'jammukashmir_district',\n  },\n  Jharkhand: {\n    name: 'Jharkhand',\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'jharkhand_district',\n  },\n  Ladakh: {\n    name: 'Ladakh',\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'ladakh_district',\n  },\n  Lakshadweep: {\n    name: 'Lakshadweep',\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'lakshadweep_district',\n  },\n  'Madhya Pradesh': {\n    name: 'Madhya Pradesh',\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'madhyapradesh_district',\n  },\n  Maharashtra: {\n    name: 'Maharashtra',\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'maharashtra_district',\n  },\n  Manipur: {\n    name: 'Manipur',\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'manipur_district',\n  },\n  Meghalaya: {\n    name: 'Meghalaya',\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'meghalaya_district',\n  },\n  Mizoram: {\n    name: 'Mizoram',\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'mizoram_district',\n  },\n  Nagaland: {\n    name: 'Nagaland',\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'nagaland_district',\n  },\n  Odisha: {\n    name: 'Odisha',\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'odisha_district',\n  },\n  Puducherry: {\n    name: 'Puducherry',\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'puducherry_district',\n  },\n  Punjab: {\n    name: 'Punjab',\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'punjab_district',\n  },\n  Rajasthan: {\n    name: 'Rajasthan',\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'rajasthan_district',\n  },\n  Sikkim: {\n    name: 'Sikkim',\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'sikkim_district',\n  },\n  'Tamil Nadu': {\n    name: 'Tamil Nadu',\n    geoDataFile: `${MAPS_DIR}/tamil-nadu.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tamilnadu_district',\n  },\n  Telangana: {\n    name: 'Telangana',\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'telangana_district',\n  },\n  Tripura: {\n    name: 'Tripura',\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tripura_district',\n  },\n  Uttarakhand: {\n    name: 'Uttarakhand',\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'uttarakhand_district',\n  },\n  'Uttar Pradesh': {\n    name: 'Uttar Pradesh',\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'uttarpradesh_district',\n  },\n\n  'West Bengal': {\n    name: 'West Bengal',\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'westbengal_district',\n  },\n};\n\nexport default function ({\n  states,\n  stateDistrictWiseData,\n  stateTestData,\n  regionHighlighted,\n}) {\n  const [selectedRegion, setSelectedRegion] = useState({});\n  const [currentHoveredRegion, setCurrentHoveredRegion] = useState({});\n  const [panelRegion, setPanelRegion] = useState({});\n  const [testObj, setTestObj] = useState({});\n  const [currentMap, setCurrentMap] = useState(mapMeta.India);\n\n  useEffect(() => {\n    const region = getRegionFromState(states[1]);\n    setPanelRegion(region);\n    setCurrentHoveredRegion(region);\n  }, [states]);\n\n  if (!panelRegion) {\n    return null;\n  }\n\n  const [statistic, currentMapData] = useMemo(() => {\n    const statistic = {total: 0, maxConfirmed: 0};\n    let currentMapData = {};\n\n    if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n      currentMapData = states.reduce((acc, state) => {\n        if (state.state === 'Total') {\n          return acc;\n        }\n        const confirmed = parseInt(state.confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n\n        acc[state.state] = state.confirmed;\n        return acc;\n      }, {});\n    } else if (currentMap.mapType === MAP_TYPES.STATE) {\n      const districtWiseData = (\n        stateDistrictWiseData[currentMap.name] || {districtData: {}}\n      ).districtData;\n      currentMapData = Object.keys(districtWiseData).reduce((acc, district) => {\n        const confirmed = parseInt(districtWiseData[district].confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n        acc[district] = districtWiseData[district].confirmed;\n        return acc;\n      }, {});\n    }\n    return [statistic, currentMapData];\n  }, [currentMap, states, stateDistrictWiseData]);\n\n  const setHoveredRegion = useCallback(\n    (name, currentMap) => {\n      if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n        const region = getRegionFromState(\n          states.filter((state) => name === state.state)[0]\n        );\n        setCurrentHoveredRegion(region);\n        setPanelRegion(region);\n      } else if (currentMap.mapType === MAP_TYPES.STATE) {\n        const state = stateDistrictWiseData[currentMap.name] || {\n          districtData: {},\n        };\n        let districtData = state.districtData[name];\n        if (!districtData) {\n          districtData = {\n            confirmed: 0,\n            active: 0,\n            deaths: 0,\n            recovered: 0,\n          };\n        }\n        setCurrentHoveredRegion(getRegionFromDistrict(districtData, name));\n        const panelRegion = getRegionFromState(\n          states.filter((state) => currentMap.name === state.state)[0]\n        );\n        setPanelRegion(panelRegion);\n      }\n    },\n    [states, stateDistrictWiseData]\n  );\n\n  useEffect(() => {\n    if (regionHighlighted === undefined) {\n      return;\n    } else if (regionHighlighted === null) {\n      setSelectedRegion(null);\n      return;\n    }\n    const isState = !('district' in regionHighlighted);\n    if (isState) {\n      const newMap = mapMeta['India'];\n      setCurrentMap(newMap);\n      const region = getRegionFromState(regionHighlighted.state);\n      setHoveredRegion(region.name, newMap);\n      setSelectedRegion(region.name);\n    } else {\n      const newMap = mapMeta[regionHighlighted.state.state];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setHoveredRegion(regionHighlighted.district, newMap);\n      setSelectedRegion(regionHighlighted.district);\n    }\n  }, [regionHighlighted, currentMap.mapType, setHoveredRegion]);\n\n  const getRegionFromDistrict = (districtData, name) => {\n    if (!districtData) {\n      return;\n    }\n    const region = {...districtData};\n    if (!region.name) {\n      region.name = name;\n    }\n    return region;\n  };\n\n  const getRegionFromState = (state) => {\n    if (!state) {\n      return;\n    }\n    const region = {...state};\n    if (!region.name) {\n      region.name = region.state;\n    }\n    return region;\n  };\n\n  const switchMapToState = useCallback(\n    (name) => {\n      const newMap = mapMeta[name];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      if (newMap.mapType === MAP_TYPES.COUNTRY) {\n        setHoveredRegion(states[1].state, newMap);\n      } else if (newMap.mapType === MAP_TYPES.STATE) {\n        const districtData = (stateDistrictWiseData[name] || {districtData: {}})\n          .districtData;\n        const topDistrict = Object.keys(districtData)\n          .filter((name) => name !== 'Unknown')\n          .sort((a, b) => {\n            return districtData[b].confirmed - districtData[a].confirmed;\n          })[0];\n        setHoveredRegion(topDistrict, newMap);\n      }\n    },\n    [setHoveredRegion, stateDistrictWiseData, states]\n  );\n\n  const {name, lastupdatedtime} = currentHoveredRegion;\n\n  useEffect(() => {\n    setTestObj(\n      stateTestData.find(\n        (obj) => obj.state === panelRegion.name && obj.totaltested !== ''\n      )\n    );\n  }, [panelRegion, stateTestData, testObj]);\n\n  return (\n    <div className=\"MapExplorer fadeInUp\" style={{animationDelay: '1.5s'}}>\n      <div className=\"header\">\n        <h1>{currentMap.name}</h1>\n        <h6>\n          {window.innerWidth <= 769 ? 'Tap' : 'Hover'} over a{' '}\n          {currentMap.mapType === MAP_TYPES.COUNTRY ? 'state/ut' : 'district'}{' '}\n          for more details\n        </h6>\n      </div>\n\n      <div className=\"map-stats\">\n        <div className=\"stats fadeInUp\" style={{animationDelay: '2s'}}>\n          <h5>{window.innerWidth <= 769 ? 'Cnfmd' : 'Confirmed'}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.confirmed)}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-blue fadeInUp\"\n          style={{animationDelay: '2.1s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? 'Actv' : 'Active'}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.active)}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-green fadeInUp\"\n          style={{animationDelay: '2.2s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? 'Rcvrd' : 'Recovered'}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.recovered)}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-gray fadeInUp\"\n          style={{animationDelay: '2.3s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? 'Dcsd' : 'Deceased'}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.deaths)}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        {\n          <div\n            className=\"stats is-purple tested fadeInUp\"\n            style={{animationDelay: '2.4s'}}\n          >\n            <h5>{window.innerWidth <= 769 ? 'Tested' : 'Tested'}</h5>\n            <div className=\"stats-bottom\">\n              <h1>{formatNumber(testObj?.totaltested)}</h1>\n            </div>\n            <h6 className=\"timestamp\">\n              {!isNaN(new Date(testObj?.updatedon))\n                ? `As of ${format(\n                    parse(testObj?.updatedon, 'dd/MM/yyyy', new Date()),\n                    'dd MMM'\n                  )}`\n                : ''}\n            </h6>\n            {testObj?.totaltested?.length > 1 && (\n              <a href={testObj.source} target=\"_noblank\">\n                <Icon.Link />\n              </a>\n            )}\n          </div>\n        }\n      </div>\n\n      <div className=\"meta fadeInUp\" style={{animationDelay: '2.4s'}}>\n        <h2>{name}</h2>\n        {lastupdatedtime && (\n          <div\n            className={`last-update ${\n              currentMap.mapType === MAP_TYPES.STATE\n                ? 'district-last-update'\n                : 'state-last-update'\n            }`}\n          >\n            <h6>Last Updated</h6>\n            <h3\n              title={\n                isNaN(Date.parse(formatDate(lastupdatedtime)))\n                  ? ''\n                  : formatDateAbsolute(lastupdatedtime)\n              }\n            >\n              {isNaN(Date.parse(formatDate(lastupdatedtime)))\n                ? ''\n                : formatDistance(\n                    new Date(formatDate(lastupdatedtime)),\n                    new Date()\n                  ) + ' Ago'}\n            </h3>\n          </div>\n        )}\n\n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <h4 className=\"district-confirmed\">\n            Confirmed cases:{' '}\n            {currentMapData[currentHoveredRegion.name]\n              ? currentMapData[currentHoveredRegion.name]\n              : 0}\n          </h4>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentMapData.Unknown > 0 ? (\n          <h4 className=\"unknown\">\n            Districts unknown for {currentMapData.Unknown} people\n          </h4>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <div\n            className=\"button back-button\"\n            onClick={() => switchMapToState('India')}\n          >\n            Back\n          </div>\n        ) : null}\n      </div>\n\n      <ChoroplethMap\n        statistic={statistic}\n        mapMeta={currentMap}\n        mapData={currentMapData}\n        setHoveredRegion={setHoveredRegion}\n        changeMap={switchMapToState}\n        selectedRegion={selectedRegion}\n        setSelectedRegion={setSelectedRegion}\n      />\n    </div>\n  );\n}\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport * as d3 from 'd3';\nimport {\n  preprocessTimeseries,\n  sliceTimeseriesFromEnd,\n} from '../utils/common-functions';\nimport {useResizeObserver} from '../utils/hooks';\nimport {formatNumber} from '../utils/common-functions';\n\nfunction TimeSeries(props) {\n  const [lastDaysCount, setLastDaysCount] = useState(\n    window.innerWidth > 512 ? Infinity : 30\n  );\n  const [timeseries, setTimeseries] = useState([]);\n  const [datapoint, setDatapoint] = useState({});\n  const [index, setIndex] = useState(10);\n  const [mode, setMode] = useState(props.mode);\n  const [logMode, setLogMode] = useState(props.logMode);\n  const [chartType, setChartType] = useState(props.type);\n  const [moving, setMoving] = useState(false);\n\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  useEffect(() => {\n    if (props.timeseries.length > 1) {\n      const slicedTimeseries = sliceTimeseriesFromEnd(\n        props.timeseries,\n        lastDaysCount\n      );\n      setIndex(slicedTimeseries.length - 1);\n      setTimeseries(slicedTimeseries);\n    }\n  }, [props.timeseries, lastDaysCount]);\n\n  useEffect(() => {\n    setMode(props.mode);\n  }, [props.mode]);\n\n  useEffect(() => {\n    setLogMode(props.logMode);\n  }, [props.logMode]);\n\n  useEffect(() => {\n    setChartType(props.type);\n  }, [props.type]);\n\n  const graphData = useCallback(\n    (timeseries) => {\n      if (!dimensions) return;\n      const width = dimensions.width;\n      const height = dimensions.height;\n\n      // Margins\n      const margin = {top: 15, right: 35, bottom: 25, left: 25};\n      const chartRight = width - margin.right;\n      const chartBottom = height - margin.bottom;\n\n      const ts = preprocessTimeseries(timeseries);\n      const T = ts.length;\n      const yBuffer = 1.1;\n\n      setDatapoint(timeseries[T - 1]);\n      setIndex(T - 1);\n\n      const svg1 = d3.select(svgRef1.current);\n      const svg2 = d3.select(svgRef2.current);\n      const svg3 = d3.select(svgRef3.current);\n\n      const dateMin = new Date(ts[0]['date']);\n      dateMin.setDate(dateMin.getDate() - 1);\n      const dateMax = new Date(ts[T - 1]['date']);\n      dateMax.setDate(dateMax.getDate() + 1);\n\n      const xScale = d3\n        .scaleTime()\n        .clamp(true)\n        .domain([dateMin, dateMax])\n        .range([margin.left, chartRight]);\n\n      // Number of x-axis ticks\n      const numTicksX = width < 480 ? 4 : 8;\n\n      const xAxis = (g) =>\n        g\n          .attr('class', 'x-axis')\n          .call(d3.axisBottom(xScale).ticks(numTicksX))\n          .style('transform', `translateY(${chartBottom}px)`);\n\n      const yAxis = (g, yScale) =>\n        g\n          .attr('class', 'y-axis')\n          .call(d3.axisRight(yScale).ticks(4, '0~s').tickPadding(5))\n          .style('transform', `translateX(${chartRight}px)`);\n\n      // Arrays of objects\n      const svgArray = [svg1, svg2, svg3];\n      const plotTotal = chartType === 1;\n      const dataTypesTotal = [\n        'totalconfirmed',\n        'totalrecovered',\n        'totaldeceased',\n      ];\n      const dataTypesDaily = [\n        'dailyconfirmed',\n        'dailyrecovered',\n        'dailydeceased',\n      ];\n\n      const colors = ['#ff073a', '#28a745', '#6c757d'];\n\n      let yScales;\n      if (plotTotal) {\n        let uniformScaleMin = Infinity;\n        dataTypesTotal.forEach((type) => {\n          uniformScaleMin = Math.min(\n            uniformScaleMin,\n            d3.min(ts, (d) => d[type])\n          );\n        });\n        const yScaleUniformLinear = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([\n            uniformScaleMin,\n            yBuffer * d3.max(ts, (d) => d.totalconfirmed),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        const yScaleUniformLog = d3\n          .scaleLog()\n          .clamp(true)\n          .domain([\n            Math.max(1, uniformScaleMin),\n            Math.max(1, yBuffer * d3.max(ts, (d) => d.totalconfirmed)),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesTotal.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              d3.min(ts, (d) => d[type]),\n              yBuffer * d3.max(ts, (d) => d[type]),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          const yScaleLog = d3\n            .scaleLog()\n            .clamp(true)\n            .domain([\n              Math.max(\n                1,\n                d3.min(ts, (d) => d[type])\n              ),\n              Math.max(1, yBuffer * d3.max(ts, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          if (logMode) return mode ? yScaleUniformLog : yScaleLog;\n          else return mode ? yScaleUniformLinear : yScaleLinear;\n        });\n      } else {\n        const yScaleDailyUniform = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([0, yBuffer * d3.max(ts, (d) => d.dailyconfirmed)])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesDaily.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([0, yBuffer * d3.max(ts, (d) => d[type])])\n            .nice()\n            .range([chartBottom, margin.top]);\n          return mode ? yScaleDailyUniform : yScaleLinear;\n        });\n      }\n\n      /* Focus dots */\n      const focus = svgArray.map((svg, i) => {\n        return svg\n          .selectAll('.focus')\n          .data([ts[T - 1]], (d) => d.date)\n          .join('circle')\n          .attr('class', 'focus')\n          .attr('fill', colors[i])\n          .attr('stroke', colors[i])\n          .attr('r', 4);\n      });\n\n      function mousemove() {\n        const xm = d3.mouse(this)[0];\n        const date = xScale.invert(xm);\n        const bisectDate = d3.bisector((d) => d.date).left;\n        let i = bisectDate(ts, date, 1);\n        if (0 <= i && i < T) {\n          if (date - ts[i - 1].date < ts[i].date - date) --i;\n          setDatapoint(timeseries[i]);\n          setIndex(i);\n          setMoving(true);\n          const d = ts[i];\n          focus.forEach((f, j) => {\n            const yScale = yScales[j];\n            const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n            f.attr('cx', xScale(d.date)).attr('cy', yScale(d[type]));\n          });\n        }\n      }\n\n      function mouseout() {\n        setDatapoint(timeseries[T - 1]);\n        setIndex(T - 1);\n        setMoving(false);\n        focus.forEach((f, j) => {\n          const yScale = yScales[j];\n          const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n          f.attr('cx', xScale(ts[T - 1].date)).attr(\n            'cy',\n            yScale(ts[T - 1][type])\n          );\n        });\n      }\n\n      /* Begin drawing charts */\n      svgArray.forEach((svg, i) => {\n        // Transition interval\n        const t = svg.transition().duration(500);\n        const typeTotal = dataTypesTotal[i];\n        const typeDaily = dataTypesDaily[i];\n        const type = plotTotal ? typeTotal : typeDaily;\n\n        const color = colors[i];\n        const yScale = yScales[i];\n        // WARNING: Bad code ahead.\n        /* X axis */\n        if (svg.select('.x-axis').empty()) {\n          svg.append('g').attr('class', 'x-axis').call(xAxis);\n        } else {\n          svg.select('.x-axis').transition(t).call(xAxis);\n        }\n        /* Y axis */\n        if (svg.select('.y-axis').empty()) {\n          svg.append('g').call(yAxis, yScale);\n        } else {\n          svg.select('.y-axis').transition(t).call(yAxis, yScale);\n        }\n        // ^This block of code should be written in a more d3 way following the\n        //  General Update Pattern. Can't find of a way to do that within React.\n\n        /* Path dots */\n        svg\n          .selectAll('.dot')\n          .data(ts, (d) => d.date)\n          .join((enter) => enter.append('circle').attr('cy', chartBottom))\n          .attr('class', 'dot')\n          .attr('fill', color)\n          .attr('stroke', color)\n          .attr('r', 2)\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        focus[i]\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        if (plotTotal) {\n          /* TOTAL TRENDS */\n          svg.selectAll('.stem').remove();\n          const path = svg\n            .selectAll('.trend')\n            .data([[...ts].reverse()])\n            .join('path')\n            .attr('class', 'trend')\n            .attr('fill', 'none')\n            .attr('stroke', color + '99')\n            .attr('stroke-width', 4);\n          // HACK\n          // Path interpolation is non-trivial. Ideally, a custom path tween\n          // function should be defined which takes care that old path dots\n          // transition synchronously along with the path transition. This hack\n          // simulates that behaviour.\n          if (path.attr('d')) {\n            const n = path.node().getTotalLength();\n            const p = path.node().getPointAtLength(n);\n            // Append points at end of path for better interpolation\n            path.attr(\n              'd',\n              () => path.attr('d') + `L${p.x},${p.y}`.repeat(3 * T)\n            );\n          }\n          path\n            .transition(t)\n            .attr('opacity', plotTotal ? 1 : 0)\n            .attr(\n              'd',\n              d3\n                .line()\n                .x((d) => xScale(d.date))\n                .y((d) => yScale(d[typeTotal]))\n                .curve(d3.curveCardinal)\n            );\n          // Using d3-interpolate-path\n          // .attrTween('d', function (d) {\n          //   var previous = path.attr('d');\n          //   var current = line(d);\n          //   return interpolatePath(previous, current);\n          // });\n        } else {\n          /* DAILY TRENDS */\n          svg.selectAll('.trend').remove();\n          svg\n            .selectAll('.stem')\n            .data(ts, (d) => d.date)\n            .join((enter) =>\n              enter\n                .append('line')\n                .attr('x1', (d) => xScale(d.date))\n                .attr('x2', (d) => xScale(d.date))\n                .attr('y2', chartBottom)\n            )\n            .attr('class', 'stem')\n            .style('stroke', color + '99')\n            .style('stroke-width', 4)\n            .attr('y1', chartBottom)\n            .transition(t)\n            .attr('x1', (d) => xScale(d.date))\n            .attr('x2', (d) => xScale(d.date))\n            .attr('y2', (d) => yScale(d[typeDaily]));\n        }\n\n        svg\n          .on('mousemove', mousemove)\n          .on('touchmove', mousemove)\n          .on('mouseout', mouseout)\n          .on('touchend', mouseout);\n      });\n    },\n    [dimensions, chartType, logMode, mode]\n  );\n\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries);\n    }\n  }, [timeseries, graphData]);\n\n  const yesterdayDate = new Date();\n  yesterdayDate.setDate(yesterdayDate.getDate() - 1);\n  const lastDate = new Date(datapoint['date'] + '2020');\n  const isYesterday =\n    lastDate.getMonth() === yesterdayDate.getMonth() &&\n    lastDate.getDate() === yesterdayDate.getDate();\n\n  const chartKey1 = chartType === 1 ? 'totalconfirmed' : 'dailyconfirmed';\n  const chartKey2 = chartType === 1 ? 'totalrecovered' : 'dailyrecovered';\n  const chartKey3 = chartType === 1 ? 'totaldeceased' : 'dailydeceased';\n\n  // Function for calculate increased/decreased count for each type of data\n  const currentStatusCount = (chartType) => {\n    if (timeseries.length <= 0 || index === 0) return '';\n    const currentDiff =\n      timeseries[index][chartType] - timeseries[index - 1][chartType];\n    const formatedDiff = formatNumber(currentDiff);\n    return currentDiff >= 0 ? `+${formatedDiff}` : formatedDiff;\n  };\n\n  return (\n    <div\n      className=\"TimeSeries-Parent fadeInUp\"\n      style={{animationDelay: '2.7s'}}\n    >\n      <div className=\"timeseries\">\n        <div className=\"svg-parent\" ref={wrapperRef}>\n          <div className=\"stats\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Confirmed</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>\n              {`${datapoint['date']}${isYesterday ? ' Yesterday ' : ' '}`}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey1])}</h2>\n              <h6>{currentStatusCount(chartKey1)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef1} preserveAspectRatio=\"xMidYMid meet\" />\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Recovered</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>\n              {`${datapoint['date']}${isYesterday ? ' Yesterday ' : ' '}`}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey2])}</h2>\n              <h6>{currentStatusCount(chartKey2)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef2} preserveAspectRatio=\"xMidYMid meet\" />\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Deceased</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>\n              {`${datapoint['date']}${isYesterday ? ' Yesterday ' : ' '}`}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey3])}</h2>\n              <h6>{currentStatusCount(chartKey3)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef3} preserveAspectRatio=\"xMidYMid meet\" />\n        </div>\n      </div>\n\n      <div className=\"pills\">\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(Infinity)}\n          className={lastDaysCount === Infinity ? 'selected' : ''}\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(30)}\n          className={lastDaysCount === 30 ? 'selected' : ''}\n          aria-label=\"1 month\"\n        >\n          1M\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(14)}\n          className={lastDaysCount === 14 ? 'selected' : ''}\n          aria-label=\"14 days\"\n        >\n          14D\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default TimeSeries;\n","import {useState, useEffect} from 'react';\nimport {ResizeObserver} from '@juggle/resize-observer';\n\nexport const useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries, observer) => {\n      entries.forEach((entry, index) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport * as d3 from 'd3';\n\nfunction Minigraph(props) {\n  const [timeseries, setTimeseries] = useState([]);\n  const graphElement1 = useRef(null);\n  const graphElement2 = useRef(null);\n  const graphElement3 = useRef(null);\n  const graphElement4 = useRef(null);\n\n  useEffect(() => {\n    if (props.timeseries.length > 1) {\n      setTimeseries(props.timeseries.slice(props.timeseries.length - 20));\n    }\n  }, [props.timeseries]);\n\n  const graphData = useCallback(\n    (timeseries) => {\n      if (timeseries.length <= 1) return 0;\n      const data = timeseries;\n      const svg1 = d3.select(graphElement1.current);\n      const margin = {top: 30, right: 10, bottom: 30, left: 0};\n      const width = 100 - margin.left - margin.right;\n      const height = 100 - margin.top - margin.bottom;\n\n      const svg2 = d3.select(graphElement2.current);\n      const svg3 = d3.select(graphElement3.current);\n      const svg4 = d3.select(graphElement4.current);\n\n      const x = d3\n        .scaleTime()\n        .domain(\n          d3.extent(data, function (d) {\n            return new Date(d['date'] + '2020');\n          })\n        )\n        .range([0, width]);\n\n      const y1 = d3\n        .scaleLinear()\n        .domain([\n          0,\n          d3.max(data, function (d) {\n            return +d['dailyconfirmed'];\n          }),\n        ])\n        .range([height, 0]);\n\n      const path1 = svg1\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', '#ff073a99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x(function (d) {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .y(function (d, i) {\n              return y1(d['dailyconfirmed']);\n            })\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength1 = path1.node().getTotalLength();\n      path1\n        .attr('stroke-dasharray', totalLength1 + ' ' + totalLength1)\n        .attr('stroke-dashoffset', totalLength1)\n        .transition()\n        .duration(props.animate ? 2000 : 0)\n        .attr('stroke-dashoffset', 0);\n\n      svg1\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#ff073a')\n        .attr('stroke', '#ff073a')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', function (d) {\n          return x(new Date(d['date'] + '2020'));\n        })\n        .attr('cy', function (d) {\n          return y1(d['dailyconfirmed']);\n        })\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .duration(props.animate ? 3000 : 0)\n        .style('opacity', 1);\n\n      const path2 = svg2\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('cursor', 'pointer')\n        .attr('stroke', '#007bff99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x(function (d) {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .y(function (d, i) {\n              if (i === 0) {\n                return y1(\n                  d['dailyconfirmed'] - d['dailyrecovered'] - d['dailydeceased']\n                );\n              } else {\n                return y1(\n                  d['dailyconfirmed'] - d['dailyrecovered'] - d['dailydeceased']\n                );\n              }\n            })\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength2 = path2.node().getTotalLength();\n      path2\n        .attr('stroke-dasharray', totalLength2 + ' ' + totalLength2)\n        .attr('stroke-dashoffset', totalLength2)\n        .transition()\n        .duration(props.animate ? 2000 : 0)\n        .attr('stroke-dashoffset', 0);\n\n      svg2\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#007bff')\n        .attr('stroke', '#007bff')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', function (d) {\n          return x(new Date(d['date'] + '2020'));\n        })\n        .attr('cy', function (d) {\n          /* const today =\n          data[data.length - 1]['dailyconfirmed'] -\n          data[data.length - 1]['dailyrecovered'] -\n          data[data.length - 1]['dailydeceased'];\n        const yesterday =\n          data[data.length - 2]['dailyconfirmed'] -\n          data[data.length - 2]['dailyrecovered'] -\n          data[data.length - 2]['dailydeceased'];*/\n          return y1(\n            d['dailyconfirmed'] - d['dailyrecovered'] - d['dailydeceased']\n          );\n        })\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .duration(props.animate ? 3000 : 0)\n        .style('opacity', 1);\n\n      const path3 = svg3\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', '#28a74599')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x(function (d) {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .y(function (d, i) {\n              if (i === 0) {\n                return y1(d['dailyrecovered']);\n              } else {\n                return y1(d['dailyrecovered']);\n              }\n            })\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength3 = path1.node().getTotalLength();\n      path3\n        .attr('stroke-dasharray', totalLength3 + ' ' + totalLength3)\n        .attr('stroke-dashoffset', totalLength3)\n        .transition()\n        .duration(props.animate ? 2000 : 0)\n        .attr('stroke-dashoffset', 0);\n\n      svg3\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#28a745')\n        .attr('stroke', '#28a745')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', function (d) {\n          return x(new Date(d['date'] + '2020'));\n        })\n        .attr('cy', function (d) {\n          return y1(d['dailyrecovered']);\n        })\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .duration(props.animate ? 3000 : 0)\n        .style('opacity', 1);\n\n      const path4 = svg4\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('cursor', 'pointer')\n        .attr('stroke', '#6c757d99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x(function (d) {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .y(function (d, i) {\n              if (i === 0) {\n                return y1(d['dailydeceased']);\n              } else {\n                return y1(d['dailydeceased']);\n              }\n            })\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength4 = path4.node().getTotalLength();\n      path4\n        .attr('stroke-dasharray', totalLength4 + ' ' + totalLength4)\n        .attr('stroke-dashoffset', totalLength4)\n        .transition()\n        .duration(props.animate ? 2000 : 0)\n        .attr('stroke-dashoffset', 0);\n\n      svg4\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#6c757d')\n        .attr('stroke', '#6c757d')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', function (d) {\n          return x(new Date(d['date'] + '2020'));\n        })\n        .attr('cy', function (d) {\n          return y1(d['dailydeceased']);\n        })\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .duration(props.animate ? 3000 : 0)\n        .style('opacity', 1);\n    },\n    [props.animate]\n  );\n\n  useEffect(() => {\n    graphData(timeseries);\n  }, [timeseries, graphData]);\n\n  return (\n    <div className=\"Minigraph\">\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '1.4s'}}>\n        <svg\n          ref={graphElement1}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-blue fadeInUp\"\n        style={{animationDelay: '1.5s'}}\n      >\n        <svg\n          ref={graphElement2}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-green fadeInUp\"\n        style={{animationDelay: '1.6s'}}\n      >\n        <svg\n          ref={graphElement3}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-gray fadeInUp\"\n        style={{animationDelay: '1.7s'}}\n      >\n        <svg\n          ref={graphElement4}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Minigraph;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {formatDistance, format} from 'date-fns';\nimport {\n  formatDate,\n  formatDateAbsolute,\n  validateCTS,\n} from '../utils/common-functions';\nimport * as Icon from 'react-feather';\nimport {Link} from 'react-router-dom';\n\nimport Table from './table';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport TimeSeries from './timeseries';\nimport Minigraph from './minigraph';\n\nfunction Home(props) {\n  const [states, setStates] = useState([]);\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState({});\n  const [stateTestData, setStateTestData] = useState({});\n  const [fetched, setFetched] = useState(false);\n  const [graphOption, setGraphOption] = useState(1);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [timeseries, setTimeseries] = useState([]);\n  const [activityLog, setActivityLog] = useState([]);\n  const [timeseriesMode, setTimeseriesMode] = useState(true);\n  const [timeseriesLogMode, setTimeseriesLogMode] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState(undefined);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [\n        response,\n        stateDistrictWiseResponse,\n        updateLogResponse,\n        stateTestResponse,\n      ] = await Promise.all([\n        axios.get('https://api.covid19india.org/data.json'),\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\n        axios.get('https://api.covid19india.org/updatelog/log.json'),\n        axios.get('https://api.covid19india.org/state_test_data.json'),\n      ]);\n      setStates(response.data.statewise);\n      setTimeseries(validateCTS(response.data.cases_time_series));\n      setLastUpdated(response.data.statewise[0].lastupdatedtime);\n      setStateTestData(stateTestResponse.data.states_tested_data.reverse());\n      setStateDistrictWiseData(stateDistrictWiseResponse.data);\n      setActivityLog(updateLogResponse.data);\n      /* setPatients(rawDataResponse.data.raw_data.filter((p) => p.detectedstate));*/\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onHighlightState = (state, index) => {\n    if (!state && !index) setRegionHighlighted(null);\n    else setRegionHighlighted({state, index});\n  };\n  const onHighlightDistrict = (district, state, index) => {\n    if (!state && !index && !district) setRegionHighlighted(null);\n    else setRegionHighlighted({district, state, index});\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"Home\">\n        <div className=\"home-left\">\n          <div className=\"header fadeInUp\" style={{animationDelay: '1s'}}>\n            <div className=\"header-mid\">\n              <div className=\"titles\">\n                <h1>India COVID-19 Tracker</h1>\n                <h6 style={{fontWeight: 600}}>A Crowdsourced Initiative</h6>\n              </div>\n              <div className=\"last-update\">\n                <h6>Last Updated</h6>\n                <h6 style={{color: '#28a745', fontWeight: 600}}>\n                  {isNaN(Date.parse(formatDate(lastUpdated)))\n                    ? ''\n                    : formatDistance(\n                        new Date(formatDate(lastUpdated)),\n                        new Date()\n                      ) + ' Ago'}\n                </h6>\n                <h6 style={{color: '#28a745', fontWeight: 600}}>\n                  {isNaN(Date.parse(formatDate(lastUpdated)))\n                    ? ''\n                    : formatDateAbsolute(lastUpdated)}\n                </h6>\n              </div>\n            </div>\n          </div>\n\n          {states.length > 1 && <Level data={states} />}\n          <Minigraph timeseries={timeseries} animate={true} />\n          <Table\n            states={states}\n            summary={false}\n            stateDistrictWiseData={stateDistrictWiseData}\n            onHighlightState={onHighlightState}\n            onHighlightDistrict={onHighlightDistrict}\n          />\n        </div>\n\n        <div className=\"home-right\">\n          {fetched && (\n            <React.Fragment>\n              <MapExplorer\n                states={states}\n                stateDistrictWiseData={stateDistrictWiseData}\n                stateTestData={stateTestData}\n                regionHighlighted={regionHighlighted}\n              />\n\n              <div\n                className=\"timeseries-header fadeInUp\"\n                style={{animationDelay: '2.5s'}}\n              >\n                <h1>Spread Trends</h1>\n                <div className=\"tabs\">\n                  <div\n                    className={`tab ${graphOption === 1 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(1);\n                    }}\n                  >\n                    <h4>Cumulative</h4>\n                  </div>\n                  <div\n                    className={`tab ${graphOption === 2 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(2);\n                    }}\n                  >\n                    <h4>Daily</h4>\n                  </div>\n                </div>\n\n                <div className=\"scale-modes\">\n                  <label>Scale Modes</label>\n                  <div className=\"timeseries-mode\">\n                    <label htmlFor=\"timeseries-mode\">Uniform</label>\n                    <input\n                      type=\"checkbox\"\n                      checked={timeseriesMode}\n                      className=\"switch\"\n                      aria-label=\"Checked by default to scale uniformly.\"\n                      onChange={(event) => {\n                        setTimeseriesMode(!timeseriesMode);\n                      }}\n                    />\n                  </div>\n                  <div\n                    className={`timeseries-logmode ${\n                      graphOption !== 1 ? 'disabled' : ''\n                    }`}\n                  >\n                    <label htmlFor=\"timeseries-logmode\">Logarithmic</label>\n                    <input\n                      type=\"checkbox\"\n                      checked={graphOption === 1 && timeseriesLogMode}\n                      className=\"switch\"\n                      disabled={graphOption !== 1}\n                      onChange={(event) => {\n                        setTimeseriesLogMode(!timeseriesLogMode);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <TimeSeries\n                timeseries={timeseries}\n                type={graphOption}\n                mode={timeseriesMode}\n                logMode={timeseriesLogMode}\n              />\n            </React.Fragment>\n          )}\n        </div>\n\n        {/* <div className=\"home-left\">\n        {patients.length > 1 && (\n          <div className=\"patients-summary\">\n            <h1>Recent Cases</h1>\n            <h6>A summary of the latest reported cases</h6>\n            <div className=\"legend\">\n              <div className=\"legend-left\">\n                <div className=\"circle is-female\"></div>\n                <h5 className=\"is-female\">Female</h5>\n                <div className=\"circle is-male\"></div>\n                <h5 className=\"is-male\">Male</h5>\n                <div className=\"circle\"></div>\n                <h5 className=\"\">Unknown</h5>\n              </div>\n            </div>\n            <div className=\"patients-summary-wrapper\">\n              <Patients\n                patients={patients}\n                summary={true}\n                colorMode={'genders'}\n                expand={true}\n              />\n            </div>\n            <button className=\"button\">\n              <Link to=\"/database\">\n                <Icon.Database />\n                <span>View the Patients Database</span>\n              </Link>\n            </button>\n          </div>\n        )}\n      </div>\n      <div className=\"home-right\"></div>\n    */}\n      </div>\n\n      <div className=\"Home\">\n        <div className=\"home-left\">\n          <div\n            className=\"updates-header fadeInUp\"\n            style={{animationDelay: '1.5s'}}\n          >\n            <h1>Updates</h1>\n            <h2>{format(new Date(), 'd MMM')}</h2>\n          </div>\n\n          <div className=\"updates fadeInUp\" style={{animationDelay: '1.7s'}}>\n            {activityLog\n              .slice(-5)\n              .reverse()\n              .map(function (activity, index) {\n                activity.update = activity.update.replace('\\n', '<br/>');\n                return (\n                  <div key={index} className=\"update\">\n                    <h5>\n                      {formatDistance(\n                        new Date(activity.timestamp * 1000),\n                        new Date()\n                      ) + ' Ago'}\n                    </h5>\n                    <h4\n                      dangerouslySetInnerHTML={{\n                        __html: activity.update,\n                      }}\n                    ></h4>\n                  </div>\n                );\n              })}\n            <button className=\"button\">\n              <Link to=\"/demographics\">\n                <Icon.Database />\n                <span>Demographic Overview</span>\n              </Link>\n            </button>\n          </div>\n        </div>\n\n        <div className=\"home-right\"></div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Home;\n","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Navbar(props) {\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  // HTML Properties for each of the links in UI\n  const navLinkProps = (path, animationDelay) => ({\n    className: `fadeInUp ${window.location.pathname === path ? 'focused' : ''}`,\n    style: {\n      animationDelay: `${animationDelay}s`,\n    },\n  });\n\n  if (window.location.pathname !== '/summary') {\n    return (\n      <div\n        className=\"Navbar\"\n        style={{\n          animationDelay: '0.5s',\n          transition: 'all 0.3s ease-in-out',\n        }}\n      >\n        <Link to=\"/\">\n          <img\n            className=\"fadeInUp logo\"\n            alt=\"India COVID-19 Tracker\"\n            src=\"/icon.png\"\n            style={{\n              animationDelay: '0.0s',\n              transition: 'all 0.3s ease-in-out',\n            }}\n          />\n        </Link>\n\n        <div className=\"navbar-left\">\n          <div className={`navbar-menu ${!menuVisible ? 'hidden' : ''}`}>\n            {props.pages.map((page, i) => {\n              return (\n                <Link\n                  onClick={() => setMenuVisible(false)}\n                  to={page.pageLink}\n                  key={i}\n                >\n                  <span\n                    {...navLinkProps(\n                      page.pageLink,\n                      page.animationDelayForNavbar\n                    )}\n                  >\n                    {page.displayName}\n                  </span>\n                </Link>\n              );\n            })}\n          </div>\n        </div>\n\n        <div className=\"navbar-right\">\n          <div\n            className=\"navbar-toggle\"\n            onClick={() => {\n              setMenuVisible(!menuVisible);\n            }}\n          >\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n\nexport default Navbar;\n","import { Component } from \"react\";\nimport L from \"leaflet\";\nimport * as ELG from \"esri-leaflet-geocoder\";\nimport { withLeaflet } from \"react-leaflet\";\nlet search=null;\nclass Search extends Component {\n\n  componentDidMount() {\n    const map = this.props.leaflet.map;\n    const searchControl = new ELG.Geosearch().addTo(map);\n    const results = new L.LayerGroup().addTo(map);\n    searchControl.on(\"results\", function(data) {\n      results.clearLayers();\n      //   for (let i = data.results.length - 1; i >= 0; i--) {}\n      if(data.results[0]){\n      search(data.results[0].latlng)\n        results.addLayer(L.marker(data.results[0].latlng));}\n\n    });\n  }\n\n  render() {\n   search= this.props.search;\n    return null;\n  }\n}\n//export default Search;\nexport default withLeaflet(Search);\n","import React from 'react';\nimport { Map, Marker, Popup, TileLayer, LayerGroup, LayersControl } from \"react-leaflet\";\nimport L from 'leaflet';\nimport Search from './search'\nimport 'leaflet/dist/leaflet.css'\nimport * as knn from \"leaflet-knn\";\nimport GeoData from \"./essentials.json\";\nimport { Sidebar, Tab } from 'react-leaflet-sidebarv2';\n\n// import Spiderfy from \"./spiderfy\";\n\n\nconst { Overlay } = LayersControl\n\nconst user = new L.Icon({\n  iconUrl:require('./icons/user.svg'),\n  iconRetinaUrl: require('./icons/user.svg'),\n  iconSize:[40,40]\n  });\n\n\nfunction medFilter(feature) {\n    return (feature.properties.priority);\n  }\nfunction othersFilter(feature) {\n    return (!feature.properties.priority);\n  }\n\n// constructor(props){\n//   super(props);\n//   this.state = {\n//     collapsed: false,\n//     selected: 'home'\n//   };\n// }\n\nfunction onClose() {\n  this.setState({ collapsed: true });\n}\nfunction onOpen(id) {\n  this.setState({\n    collapsed: false,\n    selected: id\n  });\n}\n\n\nexport default  function MapChart(props) {\n\n// base function for sidebar autoPan \n//  function(openClose) {\n//    var panWidth = Number.parseInt(L.DomUtil.getStyle(this._sidebar, 'max-width')) / 2;\n//    if (\n//      openClose === 'open' && this.options.position === 'left' ||\n//      openClose === 'close' && this.options.position === 'right'\n//    ) panWidth *= -1;\n//    this._map.panBy([panWidth, 0], { duration: 0.5 });\n//  }\n\n\n  const center = props.pLocation||props.currentLocation||[25.7041,77.1025];\n  const zoom = props.radius?(props.radius>6?11:12):7;\n  var medKnn;\n  var restKnn;\n  var icon;\n  const userLocation = props.pLocation||props.currentLocation\n  const hK= 5; // Finds the K nearest hospitals/labs wrt user location\n  const rK= 10;// Finds the K nearest essentials wrt user location\n  const rad = 100*1000; // Max distance of the K points, in meters\n  \n  if (userLocation){\n  medKnn = new knn(L.geoJSON(GeoData, {filter: medFilter} )).nearestLayer([userLocation[1],userLocation[0]] , hK);\n  restKnn = new knn(L.geoJSON(GeoData, {filter: othersFilter})).nearest([userLocation[1],userLocation[0]] , rK, rad);\n  }\n\n  var gjKnn = {\n    \"name\":\"NearestK-Essentials\",\n    \"type\":\"FeatureCollection\",\n    \"features\":[]\n  \n  };\n\n\n  \n  \n  if (medKnn){\n    for(var i=0; i < medKnn.length ; i++){\n        gjKnn.features.push({\"type\": \"Feature\",\n                            \"geometry\": {\"type\": \"Point\",\"coordinates\": medKnn[i].layer.feature.geometry.coordinates},\n                            \"properties\": { \"name\": medKnn[i].layer.feature.properties.name,\n                                            \"desc\": medKnn[i].layer.feature.properties.desc,\n                                            \"addr\": medKnn[i].layer.feature.properties.addr,\n                                            \"phone\": medKnn[i].layer.feature.properties.phone,\n                                            \"contact\": medKnn[i].layer.feature.properties.contact,\n                                            \"icon\": icon = new L.Icon({\n                                                      iconUrl:require('./icons/'+medKnn[i].layer.feature.properties.icon+'.svg'),\n                                                      iconRetinaUrl: require('./icons/'+medKnn[i].layer.feature.properties.icon+'.svg'),\n                                                      iconSize:[25,25],\n                                                    }),\n                                            \"id\": i+1 }  \n                          });\n                          \n    }\n  }\n  \n\n  if (restKnn){\n    for(var j=0; j < restKnn.length ; j++){\n        gjKnn.features.push({\"type\": \"Feature\",\n                            \"geometry\": {\"type\": \"Point\",\"coordinates\": restKnn[j].layer.feature.geometry.coordinates},\n                            \"properties\": { \"name\": restKnn[j].layer.feature.properties.name,\n                                            \"desc\": restKnn[i].layer.feature.properties.desc,\n                                            \"addr\": restKnn[i].layer.feature.properties.addr,\n                                            \"phone\": restKnn[i].layer.feature.properties.phone,\n                                            \"contact\": restKnn[i].layer.feature.properties.contact,\n                                            \"icon\": icon = new L.Icon({\n                                                      iconUrl:require('./icons/'+restKnn[i].layer.feature.properties.icon+'.svg'),\n                                                      iconRetinaUrl: require('./icons/'+restKnn[i].layer.feature.properties.icon+'.svg'),\n                                                      iconSize:[25,25],\n                                                    }),\n                                            \"id\": j+100 }  \n                          });\n                          \n    }\n  }\n\n  return (\n      <div>\n      {/*sideBar not being built properly */}\n      {/* <Sidebar\n        id=\"sidebar\"\n        collapsed= {false}\n        selected=\"home\"\n        closeIcon='fa fa-times'\n        // onOpen={onOpen.bind(this)}\n        // onClose={onClose.bind(this)}\n        >\n        <Tab id=\"home\" header=\"Home\" icon=\"fa fa-home\">\n          <p>No place like home!</p>\n        </Tab>\n        <Tab id=\"settings\" header=\"Settings\" icon=\"fa fa-cog\" anchor=\"bottom\">\n          <p><h2>Set your own parameters</h2><br /> Under construction</p>\n        </Tab>\n      </Sidebar> */}\n\n      <Map center={center} zoom={zoom}>\n        <LayersControl position=\"topright\">\n          {/* <BaseLayer checked hideSingleBase =\"True\" name = \"Baselayer Map\"  > */}\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url='https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png'\n              // \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\" //This map is too detailed\n            />\n            <Search  search={props.searchMap}/>\n            {(props.currentLocation)&&(\n              <Marker  position={props.currentLocation} icon = {user} key=\"userLoc\">\n                  <Popup>Your current location</Popup>\n              </Marker>\n              )}\n\n          <Overlay checked name = \"Essentials near me\" >\n            <LayerGroup>\n              \n              {/* <Spiderfy> */}\n              {gjKnn.features.map(d => (\n                <Marker\n                  key={d.properties.id}\n                  position={[d.geometry.coordinates[1], d.geometry.coordinates[0]]}\n                  icon = {d.properties.icon}\n                >\n                  <Popup>\n                    <div>\n                      <h2>{d.properties.name}</h2>\n                      <p> \n                        <b>Description:</b> {d.properties.desc}<br />\n                        <b>Address:</b> {d.properties.addr}<br />\n                        <b>Contact:</b> {d.properties.contact}<br />\n                        <b>Phone:</b> {d.properties.phone}                      \n                      </p>\n                    </div>{\" \"}\n                  </Popup>\n                </Marker>\n                \n              ))}\n              {/* </Spiderfy> */}\n              \n            </LayerGroup>\n          </Overlay>\n          \n        </LayersControl>\n        \n      </Map>\n\n      </div>\n    )\n}\n\n","import React,{\n  useState\n  //, useEffect\n  }  from 'react';\nimport MapChart from './mapChart'\n// import axios from 'axios'\n// import IconButton from \"@material-ui/core/IconButton\";\n// import InputAdornment from \"@material-ui/core/InputAdornment\";\n// import SearchIcon from \"@material-ui/icons/Search\";\n// import { TextField } from '@material-ui/core';\n// import Display from './display.js'\n// import { AlignCenter } from 'react-feather';\n// let pinLocation=null;\nlet reset=false;\n\n\nconst Tracker = (props)=>{\nconst [input,setInputData] = useState('');\nconst [currentLocation,setCurrentLocation]=useState(null);\nconst [error,setError] =useState(false);\n// const [invalidPin,setInvalidPin]=useState(false);\nconst [receiveData,setReceiveData]=useState(null);\n// const header={\n//   'Access-Control-Allow-Origin': '*'\n// }\n\n\n// useEffect(()=>{\n//   if(currentLocation){\n\n//   axios.get(URL+'/tracker',{\n//     params:{const [invalidPin,setInvalidPin]=useState(false);\n\n//       latitude:currentLocation[0],\n//       longitude:currentLocation[1]\n//     }\n\n//   }).then(response=>{\n//     reset=true;\n//     console.log(response.data);\n//         setReceiveData(response.data);\n//   })\n//   .catch(err=>{\n//     console.log(err);\n//     setError(true);\n//   })\n// }\n// },[currentLocation])\n\n\nconst inputHandler=(event)=>{\n    const val  = event.target.value;\n    console.log(val);   \n    setInputData(val)\n}\nconst getLocationHandler = (event)=>{\n  reset=false;\n    event.preventDefault()\n    navigator.geolocation.getCurrentPosition(position=>{\n    setCurrentLocation([position.coords.latitude,position.coords.longitude])\n    setError(false);\n    },error=>{\n        console.log(error);\n        setError(true);\n\n    })\n}\n\n// const clickListener=()=>{\n//   console.log('clicked');\n//   reset=false;\n//   axios.get(URL+'/tracker',{\n//     params:{pinCode:input}\n//   }).then(response=>{\n//     console.log(response.data);\n//     if(!response.data.PIN_validity){\n//       setInvalidPin(true);\n//     }\n//     else{\n//       pinLocation=[response.data.lat,response.data.lng]\n//       reset=true;\n//       setReceiveData(response.data);\n//       setCurrentLocation(null);\n//       setInvalidPin(false);\n\n//     }\n//   }).catch(err=>{\n//     console.log(err);\n//   })\n\n// }\n\nconst searchHandler = (data)=>{\n  reset=false;\nconsole.log('successful',data.lat,data.lng );\nsetCurrentLocation([data.lat,data.lng]);\n\n}\n  return (\n  <div className=\"tracker\">\n  <div style={{color:'blue',textAlign:'center'}}>\n  <h1 >Nearby Essentials</h1>\n   </div>\n  {error?<p style={{color:\"red\",textAlign:'center'}}>Error fetching location</p>:null}\n  {/* {reset&&<Display>{receiveData.cases} at distance of {receiveData.minDist} KM :{receiveData.district}</Display>} */}\n  {/* <div  style={{color:\"red\",textAlign:'center'}}>{isNaN(input)||invalidPin?'please enter valid pincode':null}</div> */}\n\n    <div className=\"tracker_bar\">\n    <button className=\"button\" \n     onClick={(event)=>getLocationHandler(event)}>\n     GPS Location</button>\n     {/* <div >\n     <label> <h4 className=\"h4\">Enter Area pincode:</h4></label>\n     <TextField className=\"input input_tracker\" \n           type=\"text\" placeholder=\"Enter your pincode\"\n           onChange={(event)=>inputHandler(event)}\n           value={input}\n            InputProps={{\n            endAdornment: (\n              <InputAdornment>\n              <IconButton onClick={clickListener}>\n              <SearchIcon />\n              </IconButton>\n              </InputAdornment> )}}\n      />\n      </div> */}\n\n    </div>\n\n    <div>\n    <MapChart \n      searchMap={(data)=>searchHandler(data)} \n      currentLocation={currentLocation}  \n      className=\"leaflet-container\"\n      pLocation={receiveData?[receiveData.lat,receiveData.lng]:null}\n      radius={receiveData?+receiveData.minDist:null}\n      cases={receiveData?receiveData.cases:null}\n      // pinLocation={pinLocation}\n      />\n      </div>\n\n    </div>\n\n    )\n}\nexport default Tracker;\n","import React from 'react';\n\nfunction Links(props) {\n  return (\n    <div className=\"Links\">\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.2s'}}>\n        <h3>HELPLINE NUMBERS [by State]</h3>\n        <a\n          href=\"https://www.mohfw.gov.in/pdf/coronvavirushelplinenumber.pdf\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://www.mohfw.gov.in/pdf/coronvavirushelplinenumber.pdf\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.3s'}}>\n        <h3>Ministry of Health and Family Welfare, Gov. of India</h3>\n        <a\n          href=\"https://www.mohfw.gov.in/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://www.mohfw.gov.in/\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.4s'}}>\n        <h3>WHO : COVID-19 Home Page</h3>\n        <a\n          href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://www.who.int/emergencies/diseases/novel-coronavirus-2019\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.5s'}}>\n        <h3>CDC</h3>\n        <a\n          href=\"https://www.cdc.gov/coronavirus/2019-ncov/faq.html\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://www.cdc.gov/coronavirus/2019-ncov/faq.html\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.6s'}}>\n        <h3>Crowdsourced list of Resources & Essentials from across India</h3>\n        <a\n          href=\"https://bit.ly/covid19resourcelist\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://bit.ly/covid19resourcelist\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.7s'}}>\n        <h3>COVID-19 Global Tracker</h3>\n        <a\n          href=\"https://coronavirus.thebaselab.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://coronavirus.thebaselab.com/\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Links;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nfunction FAQ(props) {\n  const [faq, setFaq] = useState([]);\n\n  useEffect(() => {\n    getFAQs();\n  }, []);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const getFAQs = () => {\n    axios\n      .get('https://api.covid19india.org/website_data.json')\n      .then((response) => {\n        setFaq(response.data['faq']);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div className=\"FAQ\">\n      {faq.map((faq, index) => {\n        return (\n          <div\n            key={index}\n            className=\"faq fadeInUp\"\n            style={{animationDelay: `${0.5 + index * 0.1}s`}}\n          >\n            <h2 className=\"question\">{faq.question}</h2>\n            <h2\n              className=\"answer\"\n              dangerouslySetInnerHTML={{__html: faq.answer}}\n            ></h2>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FAQ;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport axios from 'axios';\n\nfunction Banner(props) {\n  const [snippets, setSnippets] = useState([]);\n  const [snippet, setSnippet] = useState();\n\n  useEffect(() => {\n    axios\n      .get('https://api.covid19india.org/website_data.json')\n      .then((response) => {\n        setSnippets(response.data.factoids || []);\n        setSnippet(\n          response.data.factoids[\n            Math.floor(\n              Math.random() * (response.data.factoids.length - 1 - 0) + 0\n            )\n          ] || ''\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const snippetChooser = useCallback(\n    (min, max) => {\n      const index = Math.random() * (max - min) + min;\n      setSnippet(snippets[Math.floor(index)]);\n    },\n    [snippets]\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      snippetChooser(0, snippets.length - 1);\n    }, 10000);\n    return () => clearInterval(interval);\n  }, [snippetChooser, snippets]);\n\n  if (window.location.pathname !== '/database') {\n    return (\n      <div\n        onClick={() => snippetChooser(0, snippets.length - 1)}\n        className=\"Banner fadeInUp\"\n        style={{animationDelay: '0.8s'}}\n      >\n        <div className=\"snippet\">{snippet ? snippet.banner : ''} &nbsp;</div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n\nexport default Banner;\n","import React from 'react';\nimport {format} from 'date-fns';\n\nfunction PatientsView(props) {\n  const logs = props.logs;\n\n  return (\n    <div className=\"Patients fadeInUp\" style={{animationDelay: '1s'}}>\n      {Object.keys(logs)\n        .slice(props.summary ? -1 : 0)\n        .map((day, index) => {\n          if (day !== 'Invalid Date') {\n            return (\n              <React.Fragment key={index}>\n                <h5 className=\"daylabel\">\n                  {format(new Date(day), 'dd MMM, yyyy')}{' '}\n                  {'(' + logs[day].length + ')'}\n                </h5>\n                <div\n                  key={index}\n                  className={`day ${props.summary ? 'summary' : ''}`}\n                >\n                  {logs[day]\n                    .slice(props.summary ? -40 : 0)\n                    .map((patient, indexTwo) => {\n                      return (\n                        <div\n                          key={indexTwo}\n                          className={props.applyClass(patient)}\n                          onClick={() => {\n                            props.setModal(true);\n                            props.setPatient(patient);\n                          }}\n                        >\n                          <h3>\n                            {props.expand ? `P${patient.patientnumber}` : ''}\n                          </h3>\n                        </div>\n                      );\n                    })}\n                </div>\n              </React.Fragment>\n            );\n          } else {\n            return null;\n          }\n        })}\n    </div>\n  );\n}\n\nexport default PatientsView;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport {parse} from 'date-fns';\nimport * as Icon from 'react-feather';\nimport PatientsView from './patientsview';\n\nfunction Patients(props) {\n  const [patients, setPatients] = useState(props.patients);\n  const [patient, setPatient] = useState(props.patients.slice(-1));\n  const [logs, setLogs] = useState({});\n  const [modal, setModal] = useState(false);\n\n  // When the user clicks anywhere outside of the modal, close modal\n  window.onclick = function (event) {\n    const modal = document.getElementById('modal');\n    if (event.target === modal) {\n      setModal(false);\n    }\n  };\n\n  useEffect(() => {\n    setPatients(props.patients);\n  }, [props.patients]);\n\n  useEffect(() => {\n    if (modal) document.body.classList.add('modal-open');\n    else document.body.classList.remove('modal-open'); // to remove modal-open class from body\n  }, [modal]);\n\n  const parseByDate = useCallback((patients) => {\n    const log = {};\n    for (let i = 0; i < patients.length; i++) {\n      const day = new Date(\n        parse(patients[i].dateannounced, 'dd/MM/yyyy', new Date())\n      );\n      if (!(day in log)) {\n        const list = [];\n        list.push(patients[i]);\n        log[day] = list;\n      } else {\n        const list = log[day];\n        list.push(patients[i]);\n        log[day] = list;\n      }\n    }\n    setLogs(log);\n  }, []);\n\n  useEffect(() => {\n    if (patients.length) {\n      parseByDate(patients);\n    }\n  }, [parseByDate, patients]);\n\n  const switchPatient = (patientIndexArg) => {\n    if (patientIndexArg === '') return;\n    try {\n      const patientIndex = patientIndexArg.slice(1);\n      // eslint-disable-next-line\n      patients.map((patient, index) => {\n        if (patient.patientnumber === patientIndex) setPatient(patient);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getClassNameFn = (colorMode) => {\n    switch (colorMode) {\n      case 'genders':\n        return (patient) => {\n          return `patient-card ${\n            patient.gender === 'F'\n              ? 'is-femme'\n              : patient.gender === 'M'\n              ? 'is-male'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'transmission':\n        return (patient) => {\n          return `patient-card ${\n            patient.typeoftransmission === 'Local'\n              ? 'is-local'\n              : patient.typeoftransmission === 'Imported'\n              ? 'is-imported'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'nationality':\n        return (patient) => {\n          return `patient-card ${\n            patient.nationality === 'India'\n              ? 'is-in'\n              : patient.nationality === 'Myanmar'\n              ? 'is-mm'\n              : patient.nationality === 'Indonesia'\n              ? 'is-id'\n              : patient.nationality === 'United Kingdom'\n              ? 'is-uk'\n              : patient.nationality === 'United States of America'\n              ? 'is-us'\n              : patient.nationality === 'Thailand'\n              ? 'is-th'\n              : patient.nationality === 'Phillipines'\n              ? 'is-ph'\n              : patient.nationality === 'Italy'\n              ? 'is-it'\n              : patient.nationality === 'Canada'\n              ? 'is-ca'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'age':\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n      default:\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PatientsView\n        logs={logs}\n        setModal={setModal}\n        setPatient={setPatient}\n        expand={props.expand}\n        applyClass={getClassNameFn(props.colorMode)}\n      />\n\n      {modal && (\n        <div className=\"modal\" id=\"modal\">\n          <div\n            className={`modal-content ${modal ? 'fadeInUp' : 'fadeOutDown'}`}\n          >\n            <div className=\"close-button\">\n              <Icon.XCircle\n                onClick={() => {\n                  setModal(false);\n                }}\n              />\n            </div>\n\n            <div className=\"modal-top\">\n              <h1>#{patient.patientnumber}</h1>\n            </div>\n\n            <div className=\"meta\">\n              <h5>Date Announced</h5>\n              <h3>{patient.dateannounced ? patient.dateannounced : '?'}</h3>\n\n              <h5>Contracted from</h5>\n              <h3\n                className=\"contracted-from\"\n                onClick={() => {\n                  switchPatient(patient.contractedfromwhichpatientsuspected);\n                }}\n              >\n                {patient.contractedfromwhichpatientsuspected\n                  ? patient.contractedfromwhichpatientsuspected\n                  : '?'}\n              </h3>\n\n              <h5>Detected City</h5>\n              <h3>{patient.detectedcity ? patient.detectedcity : '?'}</h3>\n\n              <h5>Detected District</h5>\n              <h3>\n                {patient.detecteddistrict ? patient.detecteddistrict : '?'}\n              </h3>\n\n              <h5>Detected State</h5>\n              <h3>{patient.detectedstate ? patient.detectedstate : '?'}</h3>\n\n              <h5>Nationality</h5>\n              <h3>{patient.nationality ? patient.nationality : '?'}</h3>\n\n              <h5>Age</h5>\n              <h3>{patient.agebracket ? patient.agebracket : '?'}</h3>\n\n              <h5>Gender</h5>\n              <h3>{patient.gender ? patient.gender : '?'}</h3>\n\n              <h5>State Patient Number</h5>\n              <h3>\n                {patient.statepatientnumber ? patient.statepatientnumber : '?'}\n              </h3>\n\n              <h5>Type of transmission</h5>\n              <h3>\n                {patient.typeoftransmission ? patient.typeoftransmission : '?'}\n              </h3>\n            </div>\n\n            <div className=\"notes\">\n              <h5>Notes</h5>\n              <h3>{patient.notes}</h3>\n            </div>\n\n            <h5>Source 1</h5>\n            <div className=\"link\">\n              <a href={patient.source1} target=\"_noblank\">\n                {patient.source1}\n              </a>\n            </div>\n\n            <h5>Source 2</h5>\n            <div className=\"link\">\n              <a href={patient.source2} target=\"_noblank\">\n                {patient.source2}\n              </a>\n            </div>\n\n            <h5>Source 3</h5>\n            <div className=\"link\">\n              <a href={patient.source3} target=\"_noblank\">\n                {patient.source3}\n              </a>\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default Patients;\n","import React from 'react';\nimport {Parser} from 'json2csv';\nimport * as Icon from 'react-feather';\n\nfunction CSVDownloadLink(props) {\n  if (!props.patients) {\n    return '';\n  }\n  try {\n    const parser = new Parser(Object.keys(props.patients[0]));\n    const csv = parser.parse(props.patients);\n    const data = 'data:text/csv;charset=utf-8,' + encodeURIComponent(csv);\n    return (\n      <a href={data} download=\"patients.csv\">\n        <code>CSV</code>\n      </a>\n    );\n  } catch (e) {\n    console.log(e);\n    return (\n      <a href=\"/\">\n        <code>CSV</code>\n      </a>\n    );\n  }\n}\n\nfunction DownloadBlock(props) {\n  if (!props.patients) {\n    return '';\n  }\n\n  const dataJSON =\n    'data:text/json;charset=utf-8,' +\n    encodeURIComponent(JSON.stringify(props.patients));\n\n  return (\n    <div className=\"DownloadBlock fadeInUp\" style={{animationDelay: '0.5s'}}>\n      <button className=\"button\">\n        <Icon.Download />\n        <CSVDownloadLink patients={props.patients} />\n      </button>\n      <button className=\"button\">\n        <Icon.Download />\n        <a href={dataJSON} download=\"patients.json\">\n          JSON\n        </a>\n      </button>\n    </div>\n  );\n}\n\nexport default DownloadBlock;\n","import React, {useState, useEffect} from 'react';\nimport {useLocation} from 'react-router-dom';\nimport axios from 'axios';\nimport {format, parse, subDays} from 'date-fns';\n\nimport Patients from './patients';\nimport DownloadBlock from './downloadblock';\n\nfunction filterByObject(obj, filters) {\n  const keys = Object.keys(filters);\n  return obj.filter((p) => {\n    return keys.every((key) => {\n      if (!filters[key].length) return true;\n      return p[key] === filters[key];\n    });\n  });\n}\n\nfunction PatientDB(props) {\n  const [fetched, setFetched] = useState(false);\n  const [patients, setPatients] = useState([]);\n  const [filteredPatients, setFilteredPatients] = useState([]);\n  const [error, setError] = useState('');\n  const {pathname} = useLocation();\n  const [colorMode, setColorMode] = useState('genders');\n  const [scaleMode, setScaleMode] = useState(false);\n  const [filters, setFilters] = useState({\n    detectedstate: '',\n    detecteddistrict: '',\n    detectedcity: '',\n    dateannounced: format(subDays(new Date(), 1), 'dd/MM/yyyy'),\n  });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  useEffect(() => {\n    async function fetchRawData() {\n      const response = await axios.get(\n        'https://api.covid19india.org/raw_data.json'\n      );\n      if (response.data) {\n        setPatients(response.data.raw_data.reverse());\n        setFetched(true);\n      } else {\n        setError(\"Couldn't fetch patient data. Try again after sometime.\");\n        console.log(response);\n      }\n    }\n\n    if (!fetched) {\n      fetchRawData();\n    }\n  }, [fetched]);\n\n  const handleFilters = (label, value) => {\n    setFilters((f) => {\n      // Create new object (deep copy)\n      const newFilters = {...f};\n      newFilters[label] = value;\n      if (label === 'detectedstate') {\n        const district = document.getElementById('district');\n        const city = document.getElementById('city');\n        // Hide boxes\n        if (value === '') district.style.display = 'none';\n        else district.style.display = 'inline';\n        city.style.display = 'none';\n        // Default to empty selection\n        district.selectedIndex = 0;\n        city.selectedIndex = 0;\n        newFilters['detecteddistrict'] = '';\n        newFilters['detectedcity'] = '';\n      } else if (label === 'detecteddistrict') {\n        const city = document.getElementById('city');\n        // Hide box\n        if (value === '') city.style.display = 'none';\n        else city.style.display = 'inline';\n        // Default to empty selection\n        city.selectedIndex = 0;\n        newFilters['detectedcity'] = '';\n      }\n      return newFilters;\n    });\n  };\n\n  useEffect(() => {\n    setFilteredPatients(filterByObject(patients, filters));\n  }, [patients, filters]);\n\n  function getSortedValues(obj, key) {\n    const setValues = new Set(obj.map((p) => p[key]));\n    if (setValues.size > 1) setValues.add('');\n    if (key === 'dateannounced') return Array.from(setValues);\n    return Array.from(setValues).sort();\n  }\n\n  return (\n    <div className=\"PatientsDB\">\n      {error ? <div className=\"alert alert-danger\">{error}</div> : ''}\n\n      <div className=\"filters fadeInUp\" style={{animationDelay: '0.5s'}}>\n        <div className=\"filters-left\">\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.3s'}}\n              id=\"state\"\n              onChange={(event) => {\n                handleFilters('detectedstate', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select State\n              </option>\n              {getSortedValues(patients, 'detectedstate').map(\n                (state, index) => {\n                  return (\n                    <option key={index} value={state}>\n                      {state === '' ? 'All' : state}\n                    </option>\n                  );\n                }\n              )}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"district\"\n              onChange={(event) => {\n                handleFilters('detecteddistrict', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select District\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                }),\n                'detecteddistrict'\n              ).map((district, index) => {\n                return (\n                  <option key={index} value={district}>\n                    {district === '' ? 'All' : district}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"city\"\n              onChange={(event) => {\n                handleFilters('detectedcity', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select City\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                  detecteddistrict: filters.detecteddistrict,\n                }),\n                'detectedcity'\n              ).map((city, index) => {\n                return (\n                  <option key={index} value={city}>\n                    {city === '' ? 'All' : city}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"city\"\n              onChange={(event) => {\n                handleFilters('detectedcity', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select City\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                  detecteddistrict: filters.detecteddistrict,\n                }),\n                'detectedcity'\n              ).map((city, index) => {\n                return (\n                  <option key={index} value={city}>\n                    {city === '' ? 'All' : city}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s'}}\n              id=\"district\"\n              onChange={(event) => {\n                handleFilters('dateannounced', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select Day\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                }),\n                'dateannounced'\n              ).map((date, index) => {\n                return (\n                  <option key={index} value={date}>\n                    {date === ''\n                      ? 'All'\n                      : format(\n                          parse(date, 'dd/MM/yyyy', new Date()),\n                          'dd MMM, yyyy'\n                        )}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          {/* <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s'}}\n              onChange={(event) => {\n                handleFilters('dateannounced', event.target.value);\n              }}\n            >\n              {Array.from(new Set(patients.map((p) => p.dateannounced))).map(\n                (date, index) => {\n                  return (\n                    <option key={index} value={date}>\n                      {date}\n                    </option>\n                  );\n                }\n              )}\n            </select>\n          </div>*/}\n        </div>\n\n        <div className=\"legend\">\n          {colorMode === 'genders' && (\n            <div className=\"legend-left\">\n              <div className=\"circle is-female\"></div>\n              <h5 className=\"is-female\">Female</h5>\n              <div className=\"circle is-male\"></div>\n              <h5 className=\"is-male\">Male</h5>\n              <div className=\"circle\"></div>\n              <h5 className=\"\">Unknown</h5>\n            </div>\n          )}\n\n          {colorMode === 'transmission' && (\n            <div className=\"legend-left\">\n              <div className=\"circle is-local\"></div>\n              <h5 className=\"is-local\">Local</h5>\n              <div className=\"circle is-imported\"></div>\n              <h5 className=\"is-imported\">Imported</h5>\n              <div className=\"circle\"></div>\n              <h5 className=\"\">TBD</h5>\n            </div>\n          )}\n\n          {colorMode === 'nationality' && (\n            <div className=\"legend-left nationality\">\n              <div className=\"circle is-in\"></div>\n              <h5 className=\"is-in\">In</h5>\n              <div className=\"circle is-uk\"></div>\n              <h5 className=\"is-uk\">Uk</h5>\n              <div className=\"circle is-us\"></div>\n              <h5 className=\"is-us\">Us</h5>\n              <div className=\"circle is-th\"></div>\n              <h5 className=\"is-thailand\">Th</h5>\n              <div className=\"circle is-ph\"></div>\n              <h5 className=\"is-ph\">Ph</h5>\n              <div className=\"circle is-it\"></div>\n              <h5 className=\"is-it\">It</h5>\n              <div className=\"circle is-ca\"></div>\n              <h5 className=\"is-ca\">Ca</h5>\n              <div className=\"circle is-id\"></div>\n              <h5 className=\"is-id\">Id</h5>\n              <div className=\"circle is-mm\"></div>\n              <h5 className=\"is-mm\">Mm</h5>\n            </div>\n          )}\n\n          <div className={`select ${colorMode}`}>\n            <select\n              style={{animationDelay: '0.4s'}}\n              onChange={(event) => {\n                setColorMode(event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Color modes\n              </option>\n              <option value=\"genders\">Genders</option>\n              <option value=\"transmission\">Transmission</option>\n              <option value=\"nationality\">Nationality</option>\n              {/* <option value=\"age\">Age</option>*/}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"header fadeInUp\" style={{animationDelay: '0.3s'}}>\n        <div>\n          <h1>Demographics</h1>\n          {/* <h3>No. of Patients: {patients.length}</h3>*/}\n\n          <div className=\"deep-dive\">\n            <h5>Expand</h5>\n            <input\n              type=\"checkbox\"\n              checked={scaleMode}\n              onChange={(event) => {\n                setScaleMode(!scaleMode);\n              }}\n              className=\"switch\"\n            />\n          </div>\n        </div>\n        <h6 className=\"disclaimer\">\n          Some of the data provided might be missing/unknown as the details have\n          not been shared by the state/central governments.\n        </h6>\n      </div>\n\n      <div className=\"reminder fadeInUp\" style={{animationDelay: '1s'}}>\n        <p>\n          It is important that we do not think of these as just tiny boxes,\n          numbers, or just another part of statistics - among these are our\n          neighbors, our teachers, our healthcare workers, our supermarket\n          vendors, our friends, our co-workers, our children or our\n          grandparents.\n          <br />\n          <br />\n          Among these are our people.\n        </p>\n      </div>\n\n      <div className=\"patientdb-wrapper\">\n        <Patients\n          patients={filteredPatients}\n          colorMode={colorMode}\n          expand={scaleMode}\n        />\n      </div>\n      <DownloadBlock patients={patients} />\n    </div>\n  );\n}\n\nexport default PatientDB;\n","import React from 'react';\nimport {Doughnut, defaults} from 'react-chartjs-2';\n\nfunction GenderChart(props) {\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.8)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  let male = 0;\n  let female = 0;\n  let unknown = 0;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.gender === 'M') {\n      male++;\n    } else if (patient.gender === 'F') {\n      female++;\n    } else {\n      unknown++;\n    }\n  });\n\n  const chartData = {\n    datasets: [\n      {\n        data: [male, female, unknown],\n        backgroundColor: ['blue', 'pink', 'grey'],\n        label: 'Hola',\n      },\n    ],\n    labels: ['Male', 'Female', 'Awaiting Details'],\n  };\n\n  const chartOptions = {\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'point',\n      position: 'nearest',\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          const total = meta.total;\n          const currentValue = dataset.data[tooltipItem.index];\n          const percentage = parseFloat(\n            ((currentValue / total) * 100).toFixed(1)\n          );\n          return currentValue + ' (' + percentage + '%)';\n        },\n        title: function (tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Doughnut data={chartData} options={chartOptions} />\n      </div>\n    </div>\n  );\n}\n\nexport default GenderChart;\n","import React from 'react';\nimport {Bar, defaults} from 'react-chartjs-2';\n\nfunction AgeChart(props) {\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.8)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  const ages = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  let unknown = 0;\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.agebracket) {\n      const age = parseInt(patient.agebracket);\n      if (age >= 0 && age <= 10) {\n        ages[0]++;\n      }\n      if (age > 10 && age <= 20) {\n        ages[1]++;\n      }\n      if (age > 20 && age <= 30) {\n        ages[2]++;\n      }\n      if (age > 30 && age <= 40) {\n        ages[3]++;\n      }\n      if (age > 40 && age <= 50) {\n        ages[4]++;\n      }\n      if (age > 50 && age <= 60) {\n        ages[5]++;\n      }\n      if (age > 60 && age <= 70) {\n        ages[6]++;\n      }\n      if (age > 70 && age <= 80) {\n        ages[7]++;\n      }\n      if (age > 80 && age <= 90) {\n        ages[8]++;\n      }\n      if (age > 90 && age <= 100) {\n        ages[9]++;\n      }\n    } else {\n      unknown++;\n    }\n  });\n\n  const chartData = {\n    labels: [\n      '0-10',\n      '11-20',\n      '21-30',\n      '31-40',\n      '41-50',\n      '51-60',\n      '61-70',\n      '71-80',\n      '81-90',\n      '91-100',\n    ],\n    datasets: [\n      {\n        data: ages,\n        label: 'Cases',\n        backgroundColor: '#ff073a',\n      },\n    ],\n  };\n\n  const chartOptions = {\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 0,\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Bar data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">*Awaiting details for {unknown} patients</div>\n    </div>\n  );\n}\n\nexport default AgeChart;\n","import React from 'react';\nimport {Doughnut, defaults} from 'react-chartjs-2';\n\nfunction NationalityChart(props) {\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.8)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const nationality = {};\n  let unknown = 0;\n\n  props.data.forEach((patient) => {\n    if (!patient.nationality) {\n      unknown++;\n      return;\n    }\n    if (!nationality.hasOwnProperty(patient.nationality.toLowerCase())) {\n      nationality[patient.nationality.toLowerCase()] = 0;\n    }\n    nationality[patient.nationality.toLowerCase()]++;\n  });\n\n  // delete nationality.india;\n  const data = [];\n  const labels = [];\n\n  Object.keys(nationality).forEach((country) => {\n    if (country) {\n      labels.push(country.toUpperCase());\n      data.push(nationality[country]);\n    }\n  });\n\n  const chartData = {\n    datasets: [\n      {\n        data: data,\n        backgroundColor: [\n          '#ff7272',\n          '#ffb385',\n          '#fae7cb',\n          '#ffd31d',\n          '#00a8cc',\n          '#005082',\n          '#000839',\n          '#ffa41b',\n          '#f1e7b6',\n          '#400082',\n          '#fe346e',\n          '#5a3f11',\n          '#9c5518',\n          '#f67575',\n          '#d4f8e8',\n          '#1eb2a6',\n        ],\n      },\n    ],\n    labels: labels,\n  };\n\n  const chartOptions = {\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    legend: {\n      display: false,\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'point',\n      events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          const total = meta.total;\n          const currentValue = dataset.data[tooltipItem.index];\n          const percentage = parseFloat(\n            ((currentValue / total) * 100).toFixed(1)\n          );\n          return currentValue + ' (' + percentage + '%)';\n        },\n        title: function (tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Doughnut data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">*Awaiting details for {unknown} patients</div>\n    </div>\n  );\n}\n\nexport default NationalityChart;\n","import React from 'react';\nimport {Line, defaults} from 'react-chartjs-2';\nimport moment from 'moment';\nimport {getStateName} from '../../utils/common-functions';\nfunction AllStatesChart(props) {\n  const dates = [];\n\n  defaults.global.elements.line.fill = false;\n\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const statesData = new Map();\n\n  props.data.forEach((data, index) => {\n    if (data.status !== 'Confirmed') {\n      return;\n    }\n\n    Object.keys(data).forEach((key) => {\n      if (key === 'date') {\n        dates.push(moment(data.date.trim(), 'DD MMM'));\n      }\n\n      if (key === 'status' || key === 'date') {\n        return;\n      }\n\n      if (!statesData.has(key)) {\n        statesData.set(key, []);\n      }\n      const previousValue =\n        statesData.get(key).length > 0\n          ? parseInt(statesData.get(key)[statesData.get(key).length - 1])\n          : 0;\n      const currentValue = data[key] !== '' ? parseInt(data[key]) : 0;\n      statesData.get(key).push(previousValue + currentValue);\n    });\n  });\n\n  const sortedMap = new Map(\n    [...statesData.entries()].sort((a, b) => {\n      return a[1][a[1].length - 1] < b[1][b[1].length - 1] ? 1 : -1;\n    })\n  );\n\n  const colors = [\n    '#ff073a',\n    '#28a745',\n    '#342ead',\n    '#7D5BA6',\n    '#DD7596',\n    '#16c8f0',\n    '#f67575',\n    '#2b580c',\n    '#9D44B5',\n    '#91132d',\n    '#6D9DC5',\n    '#2b580c',\n    '#6c757d',\n    '#f67575',\n    '#d4f8e8',\n  ];\n\n  let index = 0;\n  const datasets = [];\n  sortedMap.forEach((data, key) => {\n    if (key === 'tt') {\n      return;\n    }\n\n    if (index >= 10) {\n      return;\n    }\n\n    datasets.push({\n      borderWidth: 1.5,\n      data: statesData.get(key),\n      borderCapStyle: 'round',\n      pointBackgroundColor: colors[index],\n      label: getStateName(key),\n      borderColor: colors[index],\n      pointHoverRadius: 0.5,\n    });\n\n    index++;\n  });\n\n  const dataset = {\n    labels: dates,\n    datasets: datasets,\n  };\n\n  const options = {\n    responsive: true,\n    events: ['click', 'mousemove', 'mouseout', 'touchstart', 'touchmove'],\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        tension: 0,\n      },\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          ticks: {\n            beginAtZero: true,\n            max: undefined,\n            precision: 0,\n          },\n          scaleLabel: {\n            display: false,\n            labelString: 'Total Cases',\n          },\n        },\n      ],\n      xAxes: [\n        {\n          type: 'time',\n          time: {\n            unit: 'day',\n            tooltipFormat: 'MMM DD',\n            stepSize: 7,\n            displayFormats: {\n              millisecond: 'MMM DD',\n              second: 'MMM DD',\n              minute: 'MMM DD',\n              hour: 'MMM DD',\n              day: 'MMM DD',\n              week: 'MMM DD',\n              month: 'MMM DD',\n              quarter: 'MMM DD',\n              year: 'MMM DD',\n            },\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default AllStatesChart;\n","import React from 'react';\nimport {Line, defaults} from 'react-chartjs-2';\nimport moment from 'moment';\n\nfunction TotalConfirmedChart(props) {\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  defaults.global.elements.line.fill = false;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return <div></div>;\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 31) {\n      dates.push(moment(data.date.trim(), 'DD MMM'));\n      confirmed.push(data.totalconfirmed);\n      recovered.push(data.totalrecovered);\n      deceased.push(data.totaldeceased);\n    }\n  });\n\n  const dataset = {\n    labels: dates,\n    datasets: [\n      {\n        borderWidth: 2,\n        data: confirmed,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#ff073a',\n        label: 'Confirmed',\n        borderColor: '#ff073a',\n        pointHoverRadius: 2,\n      },\n      {\n        borderWidth: 2,\n        data: recovered,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#28a745',\n        label: 'Recovered',\n        borderColor: '#28a745',\n        pointHoverRadius: 2,\n      },\n      {\n        borderWidth: 2,\n        data: deceased,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#6c757d',\n        label: 'Deceased',\n        borderColor: '#6c757d',\n        pointHoverRadius: 2,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    events: [\n      'click',\n      'mousemove',\n      'mouseout',\n      'touchstart',\n      'touchmove',\n      'touchend',\n    ],\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        tension: 0.1,\n      },\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          ticks: {\n            beginAtZero: true,\n            max: undefined,\n            precision: 0,\n          },\n          scaleLabel: {\n            display: false,\n            labelString: 'Total Cases',\n          },\n        },\n      ],\n      xAxes: [\n        {\n          type: 'time',\n          time: {\n            unit: 'day',\n            tooltipFormat: 'MMM DD',\n            stepSize: 7,\n            displayFormats: {\n              millisecond: 'MMM DD',\n              second: 'MMM DD',\n              minute: 'MMM DD',\n              hour: 'MMM DD',\n              day: 'MMM DD',\n              week: 'MMM DD',\n              month: 'MMM DD',\n              quarter: 'MMM DD',\n              year: 'MMM DD',\n            },\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n    },\n  };\n\n  if (props.mode) {\n    options.scales.yAxes = [\n      {\n        type: 'logarithmic',\n        ticks: {\n          min: 0,\n          max: 10000,\n          callback: function (value, index, values) {\n            if (value === 10000) return '10000';\n            if (value === 2000) return '2500';\n            if (value === 500) return '500';\n            if (value === 100) return '100';\n            if (value === 20) return '25';\n            if (value === 5) return '5';\n            if (value === 0) return '0';\n            return null;\n          },\n        },\n        scaleLabel: {\n          display: false,\n          labelString: 'Total Cases',\n        },\n      },\n    ];\n  }\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default TotalConfirmedChart;\n","import React from 'react';\nimport {Bar, defaults} from 'react-chartjs-2';\nimport moment from 'moment';\n\nfunction DailyConfirmedChart(props) {\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  defaults.global.elements.line.fill = false;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n  defaults.global.hover.intersect = false;\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return <div></div>;\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 31) {\n      dates.push(moment(data.date.trim(), 'DD MMM').format('DD MMM'));\n      confirmed.push(\n        data.dailyconfirmed - data.dailyrecovered - data.dailydeceased\n      );\n      recovered.push(data.dailyrecovered);\n      deceased.push(data.dailydeceased);\n    }\n  });\n\n  const barDataSet = {\n    labels: dates,\n    datasets: [\n      {\n        data: recovered,\n        label: 'Recovered',\n        backgroundColor: '#28a745',\n      },\n      {\n        data: deceased,\n        label: 'Deceased',\n        backgroundColor: '#6c757d',\n      },\n      {\n        data: confirmed,\n        label: 'Active',\n        backgroundColor: '#ff073a',\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    tooltips: {\n      mode: 'index',\n    },\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 20,\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Bar data={barDataSet} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default DailyConfirmedChart;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport GenderChart from './Charts/genderchart';\nimport AgeChart from './Charts/agechart';\nimport NationalityChart from './Charts/nationalitychart';\nimport AllStatesChart from './Charts/allstates';\nimport TotalConfirmedChart from './Charts/totalconfirmedchart';\nimport DailyConfirmedChart from './Charts/dailyconfirmedchart';\n\nfunction DeepDive(props) {\n  const [fetched, setFetched] = useState(false);\n  const [timeseries, setTimeseries] = useState([]);\n  const [rawData, setRawData] = useState([]);\n  const [statesTimeSeries, setStatesTimeSeries] = useState([]);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [\n        response,\n        rawDataResponse,\n        stateDailyResponse,\n      ] = await Promise.all([\n        axios.get('https://api.covid19india.org/data.json'),\n        axios.get('https://api.covid19india.org/raw_data.json'),\n        axios.get('https://api.covid19india.org/states_daily.json'),\n      ]);\n      setTimeseries(response.data.cases_time_series);\n      setStatesTimeSeries(stateDailyResponse.data.states_daily);\n      setRawData(rawDataResponse.data.raw_data);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"cards-container\">\n      <section className=\"cards\">\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <TotalConfirmedChart\n            title=\"India - Total Cases\"\n            timeseries={timeseries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <DailyConfirmedChart\n            title=\"India - Daily Cases\"\n            timeseries={timeseries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <AllStatesChart\n            title=\"States - Total Cases\"\n            data={statesTimeSeries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <GenderChart title=\"Patient Gender\" data={rawData} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <AgeChart title=\"Patient Age\" data={rawData} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <NationalityChart title=\"Patient Nationality\" data={rawData} />\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default DeepDive;\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useTable, usePagination} from 'react-table';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n// import Divider from '@material-ui/core/Divider';\n\nconst usePanelSummaryStyles = makeStyles((theme) => ({\n  content: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  root: {\n    backgroundColor: '#201aa220',\n    height: '4rem',\n  },\n}));\n\nconst usePanelStyles = makeStyles((theme) => ({\n  root: {\n    width: 'calc(100%-0.2rem)',\n    marginBottom: '0.2rem',\n  },\n}));\nconst useItemTextStyles = makeStyles((theme) => ({\n  primary: {\n    fontFamily: 'Archia',\n    fontWeight: 500,\n    fontStyle: 'normal',\n    fontSize: '13px',\n    fontTransform: 'uppercase',\n  },\n  secondary: {\n    fontFamily: 'Archia',\n    fontWeight: 400,\n    fontStyle: 'normal',\n    fontSize: '12px',\n    // fontTransform: 'uppercase'\n  },\n}));\n\nconst getFormattedLink = (initialValue) => {\n  const reurl1 = /\\s*(https?:\\/\\/.+)\\s*/g;\n  // let reurl2 = /\\s*.*(www\\..+)\\s*/g\n  const reinsta = /\\s*Instagram: @(.+)\\s*/g;\n  const refb = /\\s*Facebook: @(.+)\\s*/g;\n  const s1 = initialValue.replace(reurl1, '<a href=\"$1\" target=\"_blank\">Link</a>');\n  const s2 = s1.replace(\n    reinsta,\n    '<a href=\"https://www.instagram.com/$1\" target=\"_blank\">Instagram: @$1</a>'\n  );\n  const s3 = s2.replace(\n    refb,\n    '<a href=\"https://www.facebook.com/$1\" target=\"_blank\">Facebook: @$1</a>'\n  );\n  return (\n    <div\n      className=\"tablecelldata\"\n      dangerouslySetInnerHTML={{\n        __html: s3,\n      }}\n    ></div>\n  );\n};\n\nconst FormattedCell = ({value: initialValue, editable}) => {\n  // We need to keep and update the state of the cell normally\n  const [value, setValue] = React.useState(initialValue);\n  const reurl1 = /\\s*(https?:\\/\\/.+)\\s*/g;\n  // let reurl2 = /\\s*.*(www\\..+)\\s*/g\n  const reinsta = /\\s*Instagram: @(.+)\\s*/g;\n  const refb = /\\s*Facebook: @(.+)\\s*/g;\n\n  // If the initialValue is changed externall, sync it up with our state\n  React.useEffect(() => {\n    const s1 = initialValue.replace(reurl1, '<a href=\"$1\" target=\"_blank\">Link</a>');\n    const s2 = s1.replace(\n      reinsta,\n      '<a href=\"https://www.instagram.com/$1\" target=\"_blank\">Instagram: @$1</a>'\n    );\n    const s3 = s2.replace(\n      refb,\n      '<a href=\"https://www.facebook.com/$1\" target=\"_blank\">Facebook: @$1</a>'\n    );\n    // let s4 = s3.replace(reurl2, '<a href=\"http://$1\">Link</a>');\n    setValue(s3);\n  }, [initialValue, reurl1, refb, reinsta]);\n\n  return (\n    <div\n      className=\"tablecelldata\"\n      dangerouslySetInnerHTML={{\n        __html: value,\n      }}\n    ></div>\n  );\n};\n\nfunction ResourceTable({columns, data, isDesktop}) {\n  const classesPannelSummary = usePanelSummaryStyles();\n  const classesPanel = usePanelStyles();\n  const classesListItemText = useItemTextStyles();\n  const defaultColumn = React.useMemo(\n    () => ({\n      Cell: FormattedCell,\n    }),\n    []\n  );\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {pageIndex, pageSize},\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n      initialState: {pageIndex: 0, pageSize: 5},\n    },\n    usePagination\n  );\n\n  // Render the UI for your table\n  if (isDesktop === true)\n    return (\n      <div className=\"tableandcontrols\">\n        <table {...getTableProps()}>\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr key={headerGroup.id} {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th key={column.id} {...column.getHeaderProps()}>\n                    {column.render('Header')}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {page.map((row, i) => {\n              prepareRow(row);\n              return (\n                <tr key={row.id} {...row.getRowProps()}>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td key={cell.id} {...cell.getCellProps()}>\n                        {cell.render('Cell', {editable: false})}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <div className=\"pagination\">\n          <div className=\"paginationbutton\">\n            <button\n              className=\"button is-purple\"\n              onClick={() => gotoPage(0)}\n              disabled={!canPreviousPage}\n            >\n              {'\\u003c\\u003c'}\n            </button>{' '}\n            <button\n              className=\"button is-purple\"\n              onClick={() => previousPage()}\n              disabled={!canPreviousPage}\n            >\n              {'<'}\n            </button>{' '}\n            <button\n              className=\"button is-purple\"\n              onClick={() => nextPage()}\n              disabled={!canNextPage}\n            >\n              {'>'}\n            </button>{' '}\n            <button\n              className=\"button is-purple\"\n              onClick={() => gotoPage(pageCount - 1)}\n              disabled={!canNextPage}\n            >\n              {'>>'}\n            </button>{' '}\n          </div>\n          <h5 style={{color: '#201aa299'}}>\n            Page{' '}\n            <strong>\n              {pageIndex + 1} of {pageOptions.length}\n            </strong>{' '}\n          </h5>\n          {/* <h5 style={{marginLeft:'0.2rem'}}>\n                     Go to page:{' '}\n                </h5> */}\n          <input\n            type=\"number\"\n            defaultValue={pageIndex + 1}\n            onChange={(e) => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0;\n              gotoPage(page);\n            }}\n          />\n\n          <select\n            className=\"select\"\n            value={pageSize}\n            onChange={(e) => {\n              setPageSize(Number(e.target.value));\n            }}\n          >\n            {[5, 10, 20, 30, 40, 50].map((pageSize) => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n    );\n  else\n    return (\n      <div className=\"resourcesaccordion\">\n        {page.map((row, i) => {\n          prepareRow(row);\n          return (\n            <ExpansionPanel key={row.id} classes={{root: classesPanel.root}}>\n              <ExpansionPanelSummary\n                classes={{\n                  content: classesPannelSummary.content,\n                  root: classesPannelSummary.root,\n                }}\n              >\n                {/* <div className=\"expanelheading\"\n                                 style={{display: 'flex',\n                                         flexDirection: 'row',\n                                         justifyContent: 'space-between',\n                                         backgroundColor: 'blue'}}> */}\n                <div\n                  className=\"orgname\"\n                  style={{\n                    maxWidth: '10rem',\n                    textAlign: 'start',\n                    color: '#201aa2dd',\n                  }}\n                >\n                  <h6>{row.values['nameoftheorganisation']}</h6>\n                </div>\n                <div\n                  className=\"orgcategory\"\n                  style={{maxWidth: '10.9rem', textAlign: 'end'}}\n                >\n                  <h6>{row.values['category']}</h6>\n                </div>\n                {/* </div> */}\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <List disablePadding={true} dense={true}>\n                  <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                    <ListItemText\n                      primary=\"Organisation Name\"\n                      secondary={row.values['nameoftheorganisation']}\n                      classes={{\n                        primary: classesListItemText.primary,\n                        secondary: classesListItemText.secondary,\n                      }}\n                    />\n                  </ListItem>\n                  <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                    <ListItemText\n                      primary=\"Location\"\n                      secondary={row.values['city']}\n                      classes={{\n                        primary: classesListItemText.primary,\n                        secondary: classesListItemText.secondary,\n                      }}\n                    />\n                  </ListItem>\n                  <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                    <ListItemText\n                      primary=\"Description\"\n                      secondary={row.values['descriptionandorserviceprovided']}\n                      classes={{\n                        primary: classesListItemText.primary,\n                        secondary: classesListItemText.secondary,\n                      }}\n                    />\n                  </ListItem>\n                  <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                    <ListItemText\n                      primary=\"Category\"\n                      secondary={row.values['category']}\n                      classes={{\n                        primary: classesListItemText.primary,\n                        secondary: classesListItemText.secondary,\n                      }}\n                    />\n                  </ListItem>\n                  <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                    <ListItemText\n                      primary=\"Phonenumber\"\n                      secondary={getFormattedLink(row.values['phonenumber'])}\n                      classes={{\n                        primary: classesListItemText.primary,\n                        secondary: classesListItemText.secondary,\n                      }}\n                    />\n                  </ListItem>\n                  <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                    <ListItemText\n                      primary=\"Website\"\n                      secondary={getFormattedLink(row.values['contact'])}\n                      classes={{\n                        primary: classesListItemText.primary,\n                        secondary: classesListItemText.secondary,\n                      }}\n                    />\n                  </ListItem>\n                </List>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          );\n        })}\n        <div className=\"pagination\">\n          <div className=\"paginationbutton\">\n            <button\n              className=\"button is-purple\"\n              onClick={() => gotoPage(0)}\n              disabled={!canPreviousPage}\n            >\n              {'\\u003c\\u003c'}\n            </button>{' '}\n            <button\n              className=\"button is-purple\"\n              onClick={() => previousPage()}\n              disabled={!canPreviousPage}\n            >\n              {'<'}\n            </button>{' '}\n            <button\n              className=\"button is-purple\"\n              onClick={() => nextPage()}\n              disabled={!canNextPage}\n            >\n              {'>'}\n            </button>{' '}\n            <button\n              className=\"button is-purple\"\n              onClick={() => gotoPage(pageCount - 1)}\n              disabled={!canNextPage}\n            >\n              {'>>'}\n            </button>{' '}\n          </div>\n          <h5 style={{color: '#201aa299'}}>\n            Page{' '}\n            <strong>\n              {pageIndex + 1} of {pageOptions.length}\n            </strong>{' '}\n          </h5>\n          {/* <h5 style={{marginLeft:'0.2rem'}}>\n                     Go to page:{' '}\n                </h5> */}\n          <input\n            type=\"number\"\n            defaultValue={pageIndex + 1}\n            onChange={(e) => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0;\n              gotoPage(page);\n            }}\n          />\n\n          <select\n            className=\"select\"\n            value={pageSize}\n            onChange={(e) => {\n              setPageSize(Number(e.target.value));\n            }}\n          >\n            {[5, 10, 20, 30, 40, 50].map((pageSize) => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n    );\n}\n\nexport default ResourceTable;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport ResourceTable from './resourcetable';\nimport axios from 'axios';\nfunction Resources(props) {\n  const [data, setData] = useState([]);\n  const [fetched, setFetched] = useState(false);\n  const [city, setCity] = useState('');\n  const [category, setCategory] = useState('');\n  const [indianstate, setIndianState] = useState('');\n  const [resourcedict, setResourceDict] = useState({});\n  const [showTable, setShowTable] = useState(false);\n  const [isDesktop, setIsDesktop] = useState(false);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getResources();\n    }\n  }, [fetched, data, resourcedict]);\n  const checkForResizeEvent = useCallback((event) => {\n    if (window.innerWidth > 639) setIsDesktop(true);\n    else setIsDesktop(false);\n    // console.log(isDesktop);\n  }, []);\n\n  useEffect(() => {\n    if (window.innerWidth > 639) setIsDesktop(true);\n    else setIsDesktop(false);\n    window.addEventListener('resize', checkForResizeEvent);\n    return () => {\n      window.removeEventListener('resize', checkForResizeEvent);\n    };\n  }, [isDesktop, checkForResizeEvent]);\n\n  const getResources = async () => {\n    try {\n      const [response] = await Promise.all([\n        axios.get('https://api.covid19india.org/resources/resources.json'),\n      ]);\n      // console.log(response)\n      // console.log(\"Column names are\")\n      // console.log(columns)\n      // setData(response.data.resources);\n      const hashmap = {};\n      response.data.resources.forEach((x) => {\n        // console.log(x)\n        if (typeof hashmap[x['state']] === 'undefined')\n          hashmap[x['state']] = {};\n        if (typeof hashmap[x['state']][x['city']] === 'undefined')\n          hashmap[x['state']][x['city']] = {};\n        if (\n          typeof hashmap[x['state']][x['city']][x['category']] === 'undefined'\n        )\n          hashmap[x['state']][x['city']][x['category']] = [];\n        if (Array.isArray(hashmap[x['state']][x['city']][x['category']]))\n          hashmap[x['state']][x['city']][x['category']].push(x);\n      });\n\n      setResourceDict(hashmap);\n      // setIndianState(Object.keys()[0]);\n\n      setFetched(true);\n      // console.log(resourcedict);\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n  const memocols = React.useMemo(\n    () => [\n      {\n        Header: 'City',\n        accessor: 'city',\n      },\n      {\n        Header: 'Category',\n        accessor: 'category',\n      },\n      {\n        Header: 'Organisation',\n        accessor: 'nameoftheorganisation',\n      },\n      {\n        Header: 'Description',\n        accessor: 'descriptionandorserviceprovided',\n      },\n      {\n        Header: 'Phone',\n        accessor: 'phonenumber',\n      },\n      {\n        Header: 'Website',\n        accessor: 'contact',\n      },\n    ],\n    []\n  );\n  // const memodata = React.useMemo(() => data, [data])\n\n  const getCityOptions = function () {\n    if (indianstate) {\n      return Object.keys(resourcedict[indianstate])\n        .sort()\n        .map((x) => (\n          <option key={x.id} value={x}>\n            {x}\n          </option>\n        ));\n    } else return [];\n    // return getCityList().map((x) => <option value={x}>{x}</option>)\n  };\n  const getIndianStateOptions = function () {\n    // let defaultOption = ['Please select']\n    return Object.keys(resourcedict)\n      .sort()\n      .map((x) => (\n        <option key={x.id} value={x}>\n          {x}\n        </option>\n      ));\n  };\n  const getCategoryOptions = function () {\n    if (indianstate && city) {\n      if (city === 'all') return [];\n      else {\n        return Object.keys(resourcedict[indianstate][city])\n          .sort()\n          .map((x) => (\n            <option key={x.id} value={x}>\n              {x}\n            </option>\n          ));\n      }\n    } else return [];\n  };\n\n  const filterTable = function () {\n    // console.log('Search Button Pressed');\n    // console.log(`Filters are: ${indianstate} ---> ${city} ----> ${category}`);\n    let a = [];\n    if (category === 'all') {\n      // console.log(\"All category selected\");\n      if (city === 'all') {\n        Object.values(resourcedict[indianstate]).forEach((citydata) => {\n          Object.values(citydata).forEach((category) => {\n            category.forEach((x) => a.push(x));\n          });\n        });\n      } else {\n        Object.values(resourcedict[indianstate][city]).forEach((x) => {\n          x.forEach((y) => a.push(y));\n        });\n      }\n    } else {\n      // console.log(`Category chosen ${category}`);\n      // a = resourcedict[indianstate][city][category];\n      if (city === 'all') {\n        Object.values(resourcedict[indianstate]).forEach((citydata) => {\n          if (category in citydata) {\n            citydata[category].forEach((x) => {\n              a.push(x);\n            });\n          }\n        });\n      } else {\n        a = resourcedict[indianstate][city][category];\n      }\n    }\n    try {\n      if ('PAN India' in resourcedict) {\n        resourcedict['PAN India']['Multiple']['CoVID-19 Testing Lab'].forEach(\n          (element) => {\n            a.push(element);\n          }\n        );\n      }\n    } catch (err) {\n      // console.log('No PAN India row found');\n    }\n    setData(a);\n    // console.log(resourcedict[indianstate][city][category]);\n    // console.log(data);\n    setShowTable(true);\n  };\n\n  const changeIndianState = function (changedstateevent) {\n    setIndianState(changedstateevent.target.value);\n    // setCity(\n    //   Object.keys(resourcedict[changedstateevent.target.value]).sort()[0]\n    // );\n    if (changedstateevent.target.value === '') {\n      setCity('');\n      document.getElementById('cityselect1').selectedIndex = 0;\n      setCategory('');\n      document.getElementById('categoryselect').selectedIndex = 0;\n    } else {\n      setCity('all');\n      document.getElementById('cityselect1').selectedIndex = 1;\n      setCategory('all');\n      document.getElementById('categoryselect').selectedIndex = 1;\n    }\n  };\n  const changeCity = function (changedcityevent) {\n    setCity(changedcityevent.target.value);\n    setCategory('all');\n    document.getElementById('categoryselect').selectedIndex = 1;\n  };\n  const changeCategory = function (changedcategoryevent) {\n    setCategory(changedcategoryevent.target.value);\n    // console.log(changedcategoryevent.target.value);\n  };\n  return (\n    <div className=\"Resources\">\n      <div className=\"filtersection\">\n        <div className=\"filtertitle\">\n          <h3>Apply filters and hit search</h3>\n        </div>\n        <div className=\"resourcefilters\">\n          <div className=\"resourcefilter\">\n            {/* <label for='stateselect1' className='filterlabel'>\n                            State\n                        </label> */}\n            <select\n              id=\"stateselect1\"\n              onChange={changeIndianState}\n              defaultValue=\"\"\n            >\n              <option value=\"\" disabled hidden>\n                Choose State\n              </option>\n              {getIndianStateOptions()}\n            </select>\n          </div>\n          <div className=\"resourcefilter\">\n            {/* <label for='cityselect1' className='filterlabel'>\n                            City\n                        </label> */}\n            <select\n              id=\"cityselect1\"\n              onChange={changeCity}\n              disabled={indianstate === ''}\n              defaultValue=\"\"\n            >\n              <option value=\"\" disabled hidden>\n                Choose City\n              </option>\n              <option value=\"all\">All Cities</option>\n              {getCityOptions()}\n            </select>\n          </div>\n          <div className=\"resourcefilter\">\n            {/* <label for='categoryselect' className='filterlabel'>\n                            Category\n                        </label> */}\n            <select\n              id=\"categoryselect\"\n              onChange={changeCategory}\n              disabled={indianstate === ''}\n              defaultValue=\"\"\n            >\n              <option value=\"\" disabled hidden>\n                Choose Category\n              </option>\n              <option value=\"all\">All Categories</option>\n              {getCategoryOptions()}\n            </select>\n          </div>\n          <div className=\"resourcefilter\">\n            <button\n              className=\"button is-purple\"\n              disabled={!indianstate}\n              onClick={filterTable}\n              style={!indianstate ? {pointerEvents: 'none'} : null}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n      </div>\n      <br></br>\n      <div className=\"TableArea fadeInOut\">\n        {showTable && (\n          <ResourceTable columns={memocols} data={data} isDesktop={isDesktop} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Resources;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport * as Icon from 'react-feather';\n\nimport './App.scss';\n\nimport Home from './components/home';\nimport Navbar from './components/navbar';\nimport Tracker from './components/essentials/tracker'\nimport Links from './components/links';\nimport FAQ from './components/faq';\nimport Banner from './components/banner';\nimport PatientDB from './components/patientdb';\nimport DeepDive from './components/deepdive';\nimport Resources from './components/essentials/resources';\n\nconst history = require('history').createBrowserHistory;\n\nfunction App() {\n  const pages = [\n    {\n      pageLink: '/',\n      view: Home,\n      displayName: 'Home',\n      animationDelayForNavbar: 0.2,\n    },\n    // {\n    //   pageLink: '/database',\n    //   view: PatientDB,\n    //   displayName: 'Database',\n    //   animationDelayForNavbar: 0.3,\n    // },\n    {\n      pageLink: '/demographics',\n      view: PatientDB,\n      displayName: 'Demographics',\n      animationDelayForNavbar: 0.3,\n    },\n    {\n      pageLink: '/deepdive',\n      view: DeepDive,\n      displayName: 'Deep Dive',\n      animationDelayForNavbar: 0.4,\n    },\n    {\n      pageLink: '/links',\n      view: Links,\n      displayName: 'Helpful Links',\n      animationDelayForNavbar: 0.5,\n    },\n    {\n      pageLink: '/faq',\n      view: FAQ,\n      displayName: 'About',\n      animationDelayForNavbar: 0.6,\n    },\n    {\n      pageLink: '/essentials',\n      view: Resources,\n      displayName: 'Essentials',\n      animationDelayForNavbar: 0.7,\n    },\n    {\n      pageLink: '/tracker',\n      view: Tracker,\n      displayName: 'Essentials 2.0',\n      animationDelayForNavbar: 0.8,\n    },\n  ];\n\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <Route\n          render={({location}) => (\n            <div className=\"Almighty-Router\">\n              <Navbar pages={pages} />\n              <Banner />\n              <Route exact path=\"/\" render={() => <Redirect to=\"/\" />} />\n              <Switch location={location}>\n                {pages.map((page, i) => {\n                  return (\n                    <Route\n                      exact\n                      path={page.pageLink}\n                      component={page.view}\n                      key={i}\n                    />\n                  );\n                })}\n                <Redirect to=\"/\" />\n              </Switch>\n            </div>\n          )}\n        />\n      </Router>\n\n      <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\n        {/* <img\n          src=\"/icon.png\"\n          alt=\"https://www.covid19india.org | Coronavirus cases live dashboard\"\n        />*/}\n\n        <h5>We stand with everyone fighting on the frontlines</h5>\n        <div className=\"link\">\n          <a\n            href=\"https://github.com/covid19india\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            covid19india\n          </a>\n        </div>\n        <a\n          href=\"https://github.com/covid19india/covid19india-react\"\n          className=\"button github\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon.GitHub />\n          <span>Open Sourced on GitHub</span>\n        </a>\n        <a\n          className=\"button excel\"\n          href=\"https://bit.ly/patientdb\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon.Database />\n          <span>Crowdsourced Patient Database&nbsp;</span>\n        </a>\n        <a\n          href=\"https://twitter.com/covid19indiaorg\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"button twitter\"\n          style={{justifyContent: 'center'}}\n        >\n          <Icon.Twitter />\n          <span>View updates on Twitter</span>\n        </a>\n        <a\n          href=\"https://bit.ly/covid19crowd\"\n          className=\"button telegram\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon.MessageCircle />\n          <span>Join Telegram to Collaborate!</span>\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\"./ambulance.svg\": 323,\n\t\"./delivery.svg\": 324,\n\t\"./fire.svg\": 325,\n\t\"./food.svg\": 326,\n\t\"./fund.svg\": 327,\n\t\"./helpline.svg\": 328,\n\t\"./homes.svg\": 329,\n\t\"./hospital.svg\": 330,\n\t\"./hospital_b.svg\": 331,\n\t\"./hospital_c.svg\": 332,\n\t\"./icon.svg\": 333,\n\t\"./kitchen.svg\": 334,\n\t\"./lab.svg\": 335,\n\t\"./mental-health.svg\": 336,\n\t\"./null.svg\": 337,\n\t\"./other.svg\": 338,\n\t\"./police.svg\": 339,\n\t\"./senior.svg\": 340,\n\t\"./thali.svg\": 341,\n\t\"./unknown.svg\": 342,\n\t\"./user.svg\": 115\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 83;"],"sourceRoot":""}